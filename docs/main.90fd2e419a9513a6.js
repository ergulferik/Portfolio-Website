"use strict";(self.webpackChunkmy_web_site=self.webpackChunkmy_web_site||[]).push([[179],{372:()=>{function q(n){return"function"==typeof n}function Ol(n){const e=n(i=>{Error.call(i),i.stack=(new Error).stack});return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}const So=Ol(n=>function(e){n(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((i,r)=>`${r+1}) ${i.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e});function Fr(n,t){if(n){const e=n.indexOf(t);0<=e&&n.splice(e,1)}}class $e{constructor(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._finalizers=null}unsubscribe(){let t;if(!this.closed){this.closed=!0;const{_parentage:e}=this;if(e)if(this._parentage=null,Array.isArray(e))for(const l of e)l.remove(this);else e.remove(this);const{initialTeardown:i}=this;if(q(i))try{i()}catch(l){t=l instanceof So?l.errors:[l]}const{_finalizers:r}=this;if(r){this._finalizers=null;for(const l of r)try{$R(l)}catch(a){t=t??[],a instanceof So?t=[...t,...a.errors]:t.push(a)}}if(t)throw new So(t)}}add(t){var e;if(t&&t!==this)if(this.closed)$R(t);else{if(t instanceof $e){if(t.closed||t._hasParent(this))return;t._addParent(this)}(this._finalizers=null!==(e=this._finalizers)&&void 0!==e?e:[]).push(t)}}_hasParent(t){const{_parentage:e}=this;return e===t||Array.isArray(e)&&e.includes(t)}_addParent(t){const{_parentage:e}=this;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t}_removeParent(t){const{_parentage:e}=this;e===t?this._parentage=null:Array.isArray(e)&&Fr(e,t)}remove(t){const{_finalizers:e}=this;e&&Fr(e,t),t instanceof $e&&t._removeParent(this)}}$e.EMPTY=(()=>{const n=new $e;return n.closed=!0,n})();const _R=$e.EMPTY;function qR(n){return n instanceof $e||n&&"closed"in n&&q(n.remove)&&q(n.add)&&q(n.unsubscribe)}function $R(n){q(n)?n():n.unsubscribe()}const vi={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},Go={setTimeout(n,t,...e){const{delegate:i}=Go;return i?.setTimeout?i.setTimeout(n,t,...e):setTimeout(n,t,...e)},clearTimeout(n){const{delegate:t}=Go;return(t?.clearTimeout||clearTimeout)(n)},delegate:void 0};function em(n){Go.setTimeout(()=>{const{onUnhandledError:t}=vi;if(!t)throw n;t(n)})}function Jd(){}const Z1=vd("C",void 0,void 0);function vd(n,t,e){return{kind:n,value:t,error:e}}let Yi=null;function yo(n){if(vi.useDeprecatedSynchronousErrorHandling){const t=!Yi;if(t&&(Yi={errorThrown:!1,error:null}),n(),t){const{errorThrown:e,error:i}=Yi;if(Yi=null,e)throw i}}else n()}class Yd extends $e{constructor(t){super(),this.isStopped=!1,t?(this.destination=t,qR(t)&&t.add(this)):this.destination=E1}static create(t,e,i){return new Xl(t,e,i)}next(t){this.isStopped?Ad(function f1(n){return vd("N",n,void 0)}(t),this):this._next(t)}error(t){this.isStopped?Ad(function g1(n){return vd("E",void 0,n)}(t),this):(this.isStopped=!0,this._error(t))}complete(){this.isStopped?Ad(Z1,this):(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe(),this.destination=null)}_next(t){this.destination.next(t)}_error(t){try{this.destination.error(t)}finally{this.unsubscribe()}}_complete(){try{this.destination.complete()}finally{this.unsubscribe()}}}const k1=Function.prototype.bind;function Dd(n,t){return k1.call(n,t)}class b1{constructor(t){this.partialObserver=t}next(t){const{partialObserver:e}=this;if(e.next)try{e.next(t)}catch(i){Io(i)}}error(t){const{partialObserver:e}=this;if(e.error)try{e.error(t)}catch(i){Io(i)}else Io(t)}complete(){const{partialObserver:t}=this;if(t.complete)try{t.complete()}catch(e){Io(e)}}}class Xl extends Yd{constructor(t,e,i){let r;if(super(),q(t)||!t)r={next:t??void 0,error:e??void 0,complete:i??void 0};else{let l;this&&vi.useDeprecatedNextContext?(l=Object.create(t),l.unsubscribe=()=>this.unsubscribe(),r={next:t.next&&Dd(t.next,l),error:t.error&&Dd(t.error,l),complete:t.complete&&Dd(t.complete,l)}):r=t}this.destination=new b1(r)}}function Io(n){vi.useDeprecatedSynchronousErrorHandling?function M1(n){vi.useDeprecatedSynchronousErrorHandling&&Yi&&(Yi.errorThrown=!0,Yi.error=n)}(n):em(n)}function Ad(n,t){const{onStoppedNotification:e}=vi;e&&Go.setTimeout(()=>e(n,t))}const E1={closed:!0,next:Jd,error:function N1(n){throw n},complete:Jd},Od="function"==typeof Symbol&&Symbol.observable||"@@observable";function hi(n){return n}function tm(n){return 0===n.length?hi:1===n.length?n[0]:function(e){return n.reduce((i,r)=>r(i),e)}}let fe=(()=>{class n{constructor(e){e&&(this._subscribe=e)}lift(e){const i=new n;return i.source=this,i.operator=e,i}subscribe(e,i,r){const l=function y1(n){return n&&n instanceof Yd||function G1(n){return n&&q(n.next)&&q(n.error)&&q(n.complete)}(n)&&qR(n)}(e)?e:new Xl(e,i,r);return yo(()=>{const{operator:a,source:o}=this;l.add(a?a.call(l,o):o?this._subscribe(l):this._trySubscribe(l))}),l}_trySubscribe(e){try{return this._subscribe(e)}catch(i){e.error(i)}}forEach(e,i){return new(i=nm(i))((r,l)=>{const a=new Xl({next:o=>{try{e(o)}catch(s){l(s),a.unsubscribe()}},error:l,complete:r});this.subscribe(a)})}_subscribe(e){var i;return null===(i=this.source)||void 0===i?void 0:i.subscribe(e)}[Od](){return this}pipe(...e){return tm(e)(this)}toPromise(e){return new(e=nm(e))((i,r)=>{let l;this.subscribe(a=>l=a,a=>r(a),()=>i(l))})}}return n.create=t=>new n(t),n})();function nm(n){var t;return null!==(t=n??vi.Promise)&&void 0!==t?t:Promise}const I1=Ol(n=>function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"});let he=(()=>{class n extends fe{constructor(){super(),this.closed=!1,this.currentObservers=null,this.observers=[],this.isStopped=!1,this.hasError=!1,this.thrownError=null}lift(e){const i=new im(this,this);return i.operator=e,i}_throwIfClosed(){if(this.closed)throw new I1}next(e){yo(()=>{if(this._throwIfClosed(),!this.isStopped){this.currentObservers||(this.currentObservers=Array.from(this.observers));for(const i of this.currentObservers)i.next(e)}})}error(e){yo(()=>{if(this._throwIfClosed(),!this.isStopped){this.hasError=this.isStopped=!0,this.thrownError=e;const{observers:i}=this;for(;i.length;)i.shift().error(e)}})}complete(){yo(()=>{if(this._throwIfClosed(),!this.isStopped){this.isStopped=!0;const{observers:e}=this;for(;e.length;)e.shift().complete()}})}unsubscribe(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null}get observed(){var e;return(null===(e=this.observers)||void 0===e?void 0:e.length)>0}_trySubscribe(e){return this._throwIfClosed(),super._trySubscribe(e)}_subscribe(e){return this._throwIfClosed(),this._checkFinalizedStatuses(e),this._innerSubscribe(e)}_innerSubscribe(e){const{hasError:i,isStopped:r,observers:l}=this;return i||r?_R:(this.currentObservers=null,l.push(e),new $e(()=>{this.currentObservers=null,Fr(l,e)}))}_checkFinalizedStatuses(e){const{hasError:i,thrownError:r,isStopped:l}=this;i?e.error(r):l&&e.complete()}asObservable(){const e=new fe;return e.source=this,e}}return n.create=(t,e)=>new im(t,e),n})();class im extends he{constructor(t,e){super(),this.destination=t,this.source=e}next(t){var e,i;null===(i=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===i||i.call(e,t)}error(t){var e,i;null===(i=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===i||i.call(e,t)}complete(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)}_subscribe(t){var e,i;return null!==(i=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==i?i:_R}}class St extends he{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return!e.closed&&t.next(this._value),e}getValue(){const{hasError:t,thrownError:e,_value:i}=this;if(t)throw e;return this._throwIfClosed(),i}next(t){super.next(this._value=t)}}function rm(n){return q(n?.lift)}function Ie(n){return t=>{if(rm(t))return t.lift(function(e){try{return n(e,this)}catch(i){this.error(i)}});throw new TypeError("Unable to lift unknown Observable type")}}function Ne(n,t,e,i,r){return new C1(n,t,e,i,r)}class C1 extends Yd{constructor(t,e,i,r,l,a){super(t),this.onFinalize=l,this.shouldUnsubscribe=a,this._next=e?function(o){try{e(o)}catch(s){t.error(s)}}:super._next,this._error=r?function(o){try{r(o)}catch(s){t.error(s)}finally{this.unsubscribe()}}:super._error,this._complete=i?function(){try{i()}catch(o){t.error(o)}finally{this.unsubscribe()}}:super._complete}unsubscribe(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){const{closed:e}=this;super.unsubscribe(),!e&&(null===(t=this.onFinalize)||void 0===t||t.call(this))}}}function P(n,t){return Ie((e,i)=>{let r=0;e.subscribe(Ne(i,l=>{i.next(n.call(t,l,r++))}))})}function ui(n){return this instanceof ui?(this.v=n,this):new ui(n)}function sm(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,t=n[Symbol.asyncIterator];return t?t.call(n):(n=function Hd(n){var t="function"==typeof Symbol&&Symbol.iterator,e=t&&n[t],i=0;if(e)return e.call(n);if(n&&"number"==typeof n.length)return{next:function(){return n&&i>=n.length&&(n=void 0),{value:n&&n[i++],done:!n}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(n),e={},i("next"),i("throw"),i("return"),e[Symbol.asyncIterator]=function(){return this},e);function i(l){e[l]=n[l]&&function(a){return new Promise(function(o,s){!function r(l,a,o,s){Promise.resolve(s).then(function(V){l({value:V,done:o})},a)}(o,s,(a=n[l](a)).done,a.value)})}}}"function"==typeof SuppressedError&&SuppressedError;const Bd=n=>n&&"number"==typeof n.length&&"function"!=typeof n;function Vm(n){return q(n?.then)}function dm(n){return q(n[Od])}function cm(n){return Symbol.asyncIterator&&q(n?.[Symbol.asyncIterator])}function hm(n){return new TypeError(`You provided ${null!==n&&"object"==typeof n?"an invalid object":`'${n}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)}const um=function t0(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}();function pm(n){return q(n?.[um])}function Rm(n){return function om(n,t,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=e.apply(n,t||[]),l=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(h){i[h]&&(r[h]=function(u){return new Promise(function(p,R){l.push([h,u,p,R])>1||o(h,u)})})}function o(h,u){try{!function s(h){h.value instanceof ui?Promise.resolve(h.value.v).then(V,d):c(l[0][2],h)}(i[h](u))}catch(p){c(l[0][3],p)}}function V(h){o("next",h)}function d(h){o("throw",h)}function c(h,u){h(u),l.shift(),l.length&&o(l[0][0],l[0][1])}}(this,arguments,function*(){const e=n.getReader();try{for(;;){const{value:i,done:r}=yield ui(e.read());if(r)return yield ui(void 0);yield yield ui(i)}}finally{e.releaseLock()}})}function mm(n){return q(n?.getReader)}function ht(n){if(n instanceof fe)return n;if(null!=n){if(dm(n))return function n0(n){return new fe(t=>{const e=n[Od]();if(q(e.subscribe))return e.subscribe(t);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}(n);if(Bd(n))return function r0(n){return new fe(t=>{for(let e=0;e<n.length&&!t.closed;e++)t.next(n[e]);t.complete()})}(n);if(Vm(n))return function l0(n){return new fe(t=>{n.then(e=>{t.closed||(t.next(e),t.complete())},e=>t.error(e)).then(null,em)})}(n);if(cm(n))return Wm(n);if(pm(n))return function a0(n){return new fe(t=>{for(const e of n)if(t.next(e),t.closed)return;t.complete()})}(n);if(mm(n))return function o0(n){return Wm(Rm(n))}(n)}throw hm(n)}function Wm(n){return new fe(t=>{(function s0(n,t){var e,i,r,l;return function lm(n,t,e,i){return new(e||(e=Promise))(function(l,a){function o(d){try{V(i.next(d))}catch(c){a(c)}}function s(d){try{V(i.throw(d))}catch(c){a(c)}}function V(d){d.done?l(d.value):function r(l){return l instanceof e?l:new e(function(a){a(l)})}(d.value).then(o,s)}V((i=i.apply(n,t||[])).next())})}(this,void 0,void 0,function*(){try{for(e=sm(n);!(i=yield e.next()).done;)if(t.next(i.value),t.closed)return}catch(a){r={error:a}}finally{try{i&&!i.done&&(l=e.return)&&(yield l.call(e))}finally{if(r)throw r.error}}t.complete()})})(n,t).catch(e=>t.error(e))})}function zn(n,t,e,i=0,r=!1){const l=t.schedule(function(){e(),r?n.add(this.schedule(null,i)):this.unsubscribe()},i);if(n.add(l),!r)return l}function Le(n,t,e=1/0){return q(t)?Le((i,r)=>P((l,a)=>t(i,l,r,a))(ht(n(i,r))),e):("number"==typeof t&&(e=t),Ie((i,r)=>function V0(n,t,e,i,r,l,a,o){const s=[];let V=0,d=0,c=!1;const h=()=>{c&&!s.length&&!V&&t.complete()},u=R=>V<i?p(R):s.push(R),p=R=>{l&&t.next(R),V++;let W=!1;ht(e(R,d++)).subscribe(Ne(t,Z=>{r?.(Z),l?u(Z):t.next(Z)},()=>{W=!0},void 0,()=>{if(W)try{for(V--;s.length&&V<i;){const Z=s.shift();a?zn(t,a,()=>p(Z)):p(Z)}h()}catch(Z){t.error(Z)}}))};return n.subscribe(Ne(t,u,()=>{c=!0,h()})),()=>{o?.()}}(i,r,n,e)))}function Ur(n=1/0){return Le(hi,n)}const Zn=new fe(n=>n.complete());function Fm(n){return n&&q(n.schedule)}function Pd(n){return n[n.length-1]}function jl(n){return Fm(Pd(n))?n.pop():void 0}function Tm(n,t=0){return Ie((e,i)=>{e.subscribe(Ne(i,r=>zn(i,n,()=>i.next(r),t),()=>zn(i,n,()=>i.complete(),t),r=>zn(i,n,()=>i.error(r),t)))})}function Zm(n,t=0){return Ie((e,i)=>{i.add(n.schedule(()=>e.subscribe(i),t))})}function gm(n,t){if(!n)throw new Error("Iterable cannot be null");return new fe(e=>{zn(e,t,()=>{const i=n[Symbol.asyncIterator]();zn(e,t,()=>{i.next().then(r=>{r.done?e.complete():e.next(r.value)})},0,!0)})})}function je(n,t){return t?function W0(n,t){if(null!=n){if(dm(n))return function h0(n,t){return ht(n).pipe(Zm(t),Tm(t))}(n,t);if(Bd(n))return function p0(n,t){return new fe(e=>{let i=0;return t.schedule(function(){i===n.length?e.complete():(e.next(n[i++]),e.closed||this.schedule())})})}(n,t);if(Vm(n))return function u0(n,t){return ht(n).pipe(Zm(t),Tm(t))}(n,t);if(cm(n))return gm(n,t);if(pm(n))return function R0(n,t){return new fe(e=>{let i;return zn(e,t,()=>{i=n[um](),zn(e,t,()=>{let r,l;try{({value:r,done:l}=i.next())}catch(a){return void e.error(a)}l?e.complete():e.next(r)},0,!0)}),()=>q(i?.return)&&i.return()})}(n,t);if(mm(n))return function m0(n,t){return gm(Rm(n),t)}(n,t)}throw hm(n)}(n,t):ht(n)}function zl(...n){const t=jl(n),e=function c0(n,t){return"number"==typeof Pd(n)?n.pop():t}(n,1/0),i=n;return i.length?1===i.length?ht(i[0]):Ur(e)(je(i,t)):Zn}function x(...n){return je(n,jl(n))}function Qd(n={}){const{connector:t=(()=>new he),resetOnError:e=!0,resetOnComplete:i=!0,resetOnRefCountZero:r=!0}=n;return l=>{let a,o,s,V=0,d=!1,c=!1;const h=()=>{o?.unsubscribe(),o=void 0},u=()=>{h(),a=s=void 0,d=c=!1},p=()=>{const R=a;u(),R?.unsubscribe()};return Ie((R,W)=>{V++,!c&&!d&&h();const Z=s=s??t();W.add(()=>{V--,0===V&&!c&&!d&&(o=Ld(p,r))}),Z.subscribe(W),!a&&V>0&&(a=new Xl({next:m=>Z.next(m),error:m=>{c=!0,h(),o=Ld(u,e,m),Z.error(m)},complete:()=>{d=!0,h(),o=Ld(u,i),Z.complete()}}),ht(R).subscribe(a))})(l)}}function Ld(n,t,...e){if(!0===t)return void n();if(!1===t)return;const i=new Xl({next:()=>{i.unsubscribe(),n()}});return ht(t(...e)).subscribe(i)}function Ht(n,t){return Ie((e,i)=>{let r=null,l=0,a=!1;const o=()=>a&&!r&&i.complete();e.subscribe(Ne(i,s=>{r?.unsubscribe();let V=0;const d=l++;ht(n(s,d)).subscribe(r=Ne(i,c=>i.next(t?t(s,c,d,V++):c),()=>{r=null,o()}))},()=>{a=!0,o()}))})}function fm(n,t=hi){return n=n??F0,Ie((e,i)=>{let r,l=!0;e.subscribe(Ne(i,a=>{const o=t(a);(l||!n(r,o))&&(l=!1,r=o,i.next(a))}))})}function F0(n,t){return n===t}function ue(n){for(let t in n)if(n[t]===ue)return t;throw Error("Could not find renamed property on target object.")}function Co(n,t){for(const e in t)t.hasOwnProperty(e)&&!n.hasOwnProperty(e)&&(n[e]=t[e])}function ze(n){if("string"==typeof n)return n;if(Array.isArray(n))return"["+n.map(ze).join(", ")+"]";if(null==n)return""+n;if(n.overriddenName)return`${n.overriddenName}`;if(n.name)return`${n.name}`;const t=n.toString();if(null==t)return""+t;const e=t.indexOf("\n");return-1===e?t:t.substring(0,e)}function Kd(n,t){return null==n||""===n?null===t?"":t:null==t||""===t?n:n+" "+t}const U0=ue({__forward_ref__:ue});function We(n){return n.__forward_ref__=We,n.toString=function(){return ze(this())},n}function D(n){return _d(n)?n():n}function _d(n){return"function"==typeof n&&n.hasOwnProperty(U0)&&n.__forward_ref__===We}function qd(n){return n&&!!n.\u0275providers}const Mm="https://g.co/ng/security#xss";class U extends Error{constructor(t,e){super(function xo(n,t){return`NG0${Math.abs(n)}${t?": "+t:""}`}(t,e)),this.code=t}}function O(n){return"string"==typeof n?n:null==n?"":String(n)}function wo(n,t){throw new U(-201,!1)}function Bt(n,t){null==n&&function re(n,t,e,i){throw new Error(`ASSERTION ERROR: ${n}`+(null==i?"":` [Expected=> ${e} ${i} ${t} <=Actual]`))}(t,n,null,"!=")}function k(n){return{token:n.token,providedIn:n.providedIn||null,factory:n.factory,value:void 0}}function be(n){return{providers:n.providers||[],imports:n.imports||[]}}function Jo(n){return km(n,vo)||km(n,Nm)}function km(n,t){return n.hasOwnProperty(t)?n[t]:null}function bm(n){return n&&(n.hasOwnProperty($d)||n.hasOwnProperty(N0))?n[$d]:null}const vo=ue({\u0275prov:ue}),$d=ue({\u0275inj:ue}),Nm=ue({ngInjectableDef:ue}),N0=ue({ngInjectorDef:ue});var Q=function(n){return n[n.Default=0]="Default",n[n.Host=1]="Host",n[n.Self=2]="Self",n[n.SkipSelf=4]="SkipSelf",n[n.Optional=8]="Optional",n}(Q||{});let ec;function Ut(n){const t=ec;return ec=n,t}function Sm(n,t,e){const i=Jo(n);return i&&"root"==i.providedIn?void 0===i.value?i.value=i.factory():i.value:e&Q.Optional?null:void 0!==t?t:void wo(ze(n))}const Fe=(()=>typeof globalThis<"u"&&globalThis||typeof global<"u"&&global||typeof window<"u"&&window||typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self)(),Hl={},tc="__NG_DI_FLAG__",Yo="ngTempTokenPath",S0=/\n/gm,Gm="__source";let Tr;function pi(n){const t=Tr;return Tr=n,t}function I0(n,t=Q.Default){if(void 0===Tr)throw new U(-203,!1);return null===Tr?Sm(n,void 0,t):Tr.get(n,t&Q.Optional?null:void 0,t)}function T(n,t=Q.Default){return(function Em(){return ec}()||I0)(D(n),t)}function b(n,t=Q.Default){return T(n,Do(t))}function Do(n){return typeof n>"u"||"number"==typeof n?n:0|(n.optional&&8)|(n.host&&1)|(n.self&&2)|(n.skipSelf&&4)}function nc(n){const t=[];for(let e=0;e<n.length;e++){const i=D(n[e]);if(Array.isArray(i)){if(0===i.length)throw new U(900,!1);let r,l=Q.Default;for(let a=0;a<i.length;a++){const o=i[a],s=C0(o);"number"==typeof s?-1===s?r=o.token:l|=s:r=o}t.push(T(r,l))}else t.push(T(i))}return t}function Bl(n,t){return n[tc]=t,n.prototype[tc]=t,n}function C0(n){return n[tc]}function Hn(n){return{toString:n}.toString()}var Ao=function(n){return n[n.OnPush=0]="OnPush",n[n.Default=1]="Default",n}(Ao||{}),Pt=function(n){return n[n.Emulated=0]="Emulated",n[n.None=2]="None",n[n.ShadowDom=3]="ShadowDom",n}(Pt||{});const gn={},ne=[],Oo=ue({\u0275cmp:ue}),ic=ue({\u0275dir:ue}),rc=ue({\u0275pipe:ue}),Im=ue({\u0275mod:ue}),Bn=ue({\u0275fac:ue}),Pl=ue({__NG_ELEMENT_ID__:ue}),Cm=ue({__NG_ENV_ID__:ue});function xm(n,t,e){let i=n.length;for(;;){const r=n.indexOf(t,e);if(-1===r)return r;if(0===r||n.charCodeAt(r-1)<=32){const l=t.length;if(r+l===i||n.charCodeAt(r+l)<=32)return r}e=r+1}}function lc(n,t,e){let i=0;for(;i<e.length;){const r=e[i];if("number"==typeof r){if(0!==r)break;i++;const l=e[i++],a=e[i++],o=e[i++];n.setAttribute(t,a,o,l)}else{const l=r,a=e[++i];Jm(l)?n.setProperty(t,l,a):n.setAttribute(t,l,a),i++}}return i}function wm(n){return 3===n||4===n||6===n}function Jm(n){return 64===n.charCodeAt(0)}function Ql(n,t){if(null!==t&&0!==t.length)if(null===n||0===n.length)n=t.slice();else{let e=-1;for(let i=0;i<t.length;i++){const r=t[i];"number"==typeof r?e=r:0===e||vm(n,e,r,null,-1===e||2===e?t[++i]:null)}}return n}function vm(n,t,e,i,r){let l=0,a=n.length;if(-1===t)a=-1;else for(;l<n.length;){const o=n[l++];if("number"==typeof o){if(o===t){a=-1;break}if(o>t){a=l-1;break}}}for(;l<n.length;){const o=n[l];if("number"==typeof o)break;if(o===e){if(null===i)return void(null!==r&&(n[l+1]=r));if(i===n[l+1])return void(n[l+2]=r)}l++,null!==i&&l++,null!==r&&l++}-1!==a&&(n.splice(a,0,t),l=a+1),n.splice(l++,0,e),null!==i&&n.splice(l++,0,i),null!==r&&n.splice(l++,0,r)}const Ym="ng-template";function J0(n,t,e){let i=0,r=!0;for(;i<n.length;){let l=n[i++];if("string"==typeof l&&r){const a=n[i++];if(e&&"class"===l&&-1!==xm(a.toLowerCase(),t,0))return!0}else{if(1===l){for(;i<n.length&&"string"==typeof(l=n[i++]);)if(l.toLowerCase()===t)return!0;return!1}"number"==typeof l&&(r=!1)}}return!1}function Dm(n){return 4===n.type&&n.value!==Ym}function v0(n,t,e){return t===(4!==n.type||e?n.value:Ym)}function Y0(n,t,e){let i=4;const r=n.attrs||[],l=function O0(n){for(let t=0;t<n.length;t++)if(wm(n[t]))return t;return n.length}(r);let a=!1;for(let o=0;o<t.length;o++){const s=t[o];if("number"!=typeof s){if(!a)if(4&i){if(i=2|1&i,""!==s&&!v0(n,s,e)||""===s&&1===t.length){if(on(i))return!1;a=!0}}else{const V=8&i?s:t[++o];if(8&i&&null!==n.attrs){if(!J0(n.attrs,V,e)){if(on(i))return!1;a=!0}continue}const c=D0(8&i?"class":s,r,Dm(n),e);if(-1===c){if(on(i))return!1;a=!0;continue}if(""!==V){let h;h=c>l?"":r[c+1].toLowerCase();const u=8&i?h:null;if(u&&-1!==xm(u,V,0)||2&i&&V!==h){if(on(i))return!1;a=!0}}}}else{if(!a&&!on(i)&&!on(s))return!1;if(a&&on(s))continue;a=!1,i=s|1&i}}return on(i)||a}function on(n){return 0==(1&n)}function D0(n,t,e,i){if(null===t)return-1;let r=0;if(i||!e){let l=!1;for(;r<t.length;){const a=t[r];if(a===n)return r;if(3===a||6===a)l=!0;else{if(1===a||2===a){let o=t[++r];for(;"string"==typeof o;)o=t[++r];continue}if(4===a)break;if(0===a){r+=4;continue}}r+=l?1:2}return-1}return function X0(n,t){let e=n.indexOf(4);if(e>-1)for(e++;e<n.length;){const i=n[e];if("number"==typeof i)return-1;if(i===t)return e;e++}return-1}(t,n)}function Am(n,t,e=!1){for(let i=0;i<t.length;i++)if(Y0(n,t[i],e))return!0;return!1}function Om(n,t){return n?":not("+t.trim()+")":t}function z0(n){let t=n[0],e=1,i=2,r="",l=!1;for(;e<n.length;){let a=n[e];if("string"==typeof a)if(2&i){const o=n[++e];r+="["+a+(o.length>0?'="'+o+'"':"")+"]"}else 8&i?r+="."+a:4&i&&(r+=" "+a);else""!==r&&!on(a)&&(t+=Om(l,r),r=""),i=a,l=l||!on(i);e++}return""!==r&&(t+=Om(l,r)),t}function Qt(n){return Hn(()=>{const t=jm(n),e={...t,decls:n.decls,vars:n.vars,template:n.template,consts:n.consts||null,ngContentSelectors:n.ngContentSelectors,onPush:n.changeDetection===Ao.OnPush,directiveDefs:null,pipeDefs:null,dependencies:t.standalone&&n.dependencies||null,getStandaloneInjector:null,signals:n.signals??!1,data:n.data||{},encapsulation:n.encapsulation||Pt.Emulated,styles:n.styles||ne,_:null,schemas:n.schemas||null,tView:null,id:""};zm(e);const i=n.dependencies;return e.directiveDefs=Xo(i,!1),e.pipeDefs=Xo(i,!0),e.id=function q0(n){let t=0;const e=[n.selectors,n.ngContentSelectors,n.hostVars,n.hostAttrs,n.consts,n.vars,n.decls,n.encapsulation,n.standalone,n.signals,n.exportAs,JSON.stringify(n.inputs),JSON.stringify(n.outputs),Object.getOwnPropertyNames(n.type.prototype),!!n.contentQueries,!!n.viewQuery].join("|");for(const r of e)t=Math.imul(31,t)+r.charCodeAt(0)<<0;return t+=2147483648,"c"+t}(e),e})}function Q0(n){return le(n)||nt(n)}function L0(n){return null!==n}function Ee(n){return Hn(()=>({type:n.type,bootstrap:n.bootstrap||ne,declarations:n.declarations||ne,imports:n.imports||ne,exports:n.exports||ne,transitiveCompileScopes:null,schemas:n.schemas||null,id:n.id||null}))}function Xm(n,t){if(null==n)return gn;const e={};for(const i in n)if(n.hasOwnProperty(i)){let r=n[i],l=r;Array.isArray(r)&&(l=r[1],r=r[0]),e[r]=i,t&&(t[r]=l)}return e}function I(n){return Hn(()=>{const t=jm(n);return zm(t),t})}function le(n){return n[Oo]||null}function nt(n){return n[ic]||null}function Zt(n){return n[rc]||null}function yt(n,t){const e=n[Im]||null;if(!e&&!0===t)throw new Error(`Type ${ze(n)} does not have '\u0275mod' property.`);return e}function jm(n){const t={};return{type:n.type,providersResolver:null,factory:null,hostBindings:n.hostBindings||null,hostVars:n.hostVars||0,hostAttrs:n.hostAttrs||null,contentQueries:n.contentQueries||null,declaredInputs:t,inputTransforms:null,inputConfig:n.inputs||gn,exportAs:n.exportAs||null,standalone:!0===n.standalone,signals:!0===n.signals,selectors:n.selectors||ne,viewQuery:n.viewQuery||null,features:n.features||null,setInput:null,findHostDirectiveDefs:null,hostDirectives:null,inputs:Xm(n.inputs,t),outputs:Xm(n.outputs)}}function zm(n){n.features?.forEach(t=>t(n))}function Xo(n,t){if(!n)return null;const e=t?Zt:Q0;return()=>("function"==typeof n?n():n).map(i=>e(i)).filter(L0)}const He=0,N=1,X=2,Se=3,sn=4,Ll=5,it=6,gr=7,Ce=8,fr=9,Ai=10,j=11,Kl=12,Hm=13,Mr=14,xe=15,_l=16,kr=17,fn=18,ql=19,Bm=20,Ri=21,Pn=22,jo=23,zo=24,_=25,ac=1,Pm=2,Mn=7,br=9,rt=11;function It(n){return Array.isArray(n)&&"object"==typeof n[ac]}function gt(n){return Array.isArray(n)&&!0===n[ac]}function oc(n){return 0!=(4&n.flags)}function Oi(n){return n.componentOffset>-1}function Bo(n){return 1==(1&n.flags)}function Vn(n){return!!n.template}function sc(n){return 0!=(512&n[X])}function Xi(n,t){return n.hasOwnProperty(Bn)?n[Bn]:null}let rE=Fe.WeakRef??class iE{constructor(t){this.ref=t}deref(){return this.ref}},aE=0,kn=null,Po=!1;function Ke(n){const t=kn;return kn=n,t}class qm{constructor(){this.id=aE++,this.ref=function lE(n){return new rE(n)}(this),this.producers=new Map,this.consumers=new Map,this.trackingVersion=0,this.valueVersion=0}consumerPollProducersForChange(){for(const[t,e]of this.producers){const i=e.producerNode.deref();if(null!=i&&e.atTrackingVersion===this.trackingVersion){if(i.producerPollStatus(e.seenValueVersion))return!0}else this.producers.delete(t),i?.consumers.delete(this.id)}return!1}producerMayHaveChanged(){const t=Po;Po=!0;try{for(const[e,i]of this.consumers){const r=i.consumerNode.deref();null!=r&&r.trackingVersion===i.atTrackingVersion?r.onConsumerDependencyMayHaveChanged():(this.consumers.delete(e),r?.producers.delete(this.id))}}finally{Po=t}}producerAccessed(){if(Po)throw new Error("");if(null===kn)return;let t=kn.producers.get(this.id);void 0===t?(t={consumerNode:kn.ref,producerNode:this.ref,seenValueVersion:this.valueVersion,atTrackingVersion:kn.trackingVersion},kn.producers.set(this.id,t),this.consumers.set(kn.id,t)):(t.seenValueVersion=this.valueVersion,t.atTrackingVersion=kn.trackingVersion)}get hasProducers(){return this.producers.size>0}get producerUpdatesAllowed(){return!1!==kn?.consumerAllowSignalWrites}producerPollStatus(t){return this.valueVersion!==t||(this.onProducerUpdateValueVersion(),this.valueVersion!==t)}}let $m=null;const tW=()=>{};class dE extends qm{constructor(t,e,i){super(),this.watch=t,this.schedule=e,this.dirty=!1,this.cleanupFn=tW,this.registerOnCleanup=r=>{this.cleanupFn=r},this.consumerAllowSignalWrites=i}notify(){this.dirty||this.schedule(this),this.dirty=!0}onConsumerDependencyMayHaveChanged(){this.notify()}onProducerUpdateValueVersion(){}run(){if(this.dirty=!1,0!==this.trackingVersion&&!this.consumerPollProducersForChange())return;const t=Ke(this);this.trackingVersion++;try{this.cleanupFn(),this.cleanupFn=tW,this.watch(this.registerOnCleanup)}finally{Ke(t)}}cleanup(){this.cleanupFn()}}class cE{constructor(t,e,i){this.previousValue=t,this.currentValue=e,this.firstChange=i}isFirstChange(){return this.firstChange}}function Ct(){return nW}function nW(n){return n.type.prototype.ngOnChanges&&(n.setInput=uE),hE}function hE(){const n=rW(this),t=n?.current;if(t){const e=n.previous;if(e===gn)n.previous=t;else for(let i in t)e[i]=t[i];n.current=null,this.ngOnChanges(t)}}function uE(n,t,e,i){const r=this.declaredInputs[e],l=rW(n)||function pE(n,t){return n[iW]=t}(n,{previous:gn,current:null}),a=l.current||(l.current={}),o=l.previous,s=o[r];a[r]=new cE(s&&s.currentValue,t,o===gn),n[i]=t}Ct.ngInherit=!0;const iW="__ngSimpleChanges__";function rW(n){return n[iW]||null}const bn=function(n,t,e){},lW="svg";function Me(n){for(;Array.isArray(n);)n=n[He];return n}function Ko(n,t){return Me(t[n])}function ft(n,t){return Me(t[n.index])}function oW(n,t){return n.data[t]}function xt(n,t){const e=t[n];return It(e)?e:e[He]}function mi(n,t){return null==t?null:n[t]}function sW(n){n[kr]=0}function ZE(n){1024&n[X]||(n[X]|=1024,dW(n,1))}function VW(n){1024&n[X]&&(n[X]&=-1025,dW(n,-1))}function dW(n,t){let e=n[Se];if(null===e)return;e[Ll]+=t;let i=e;for(e=e[Se];null!==e&&(1===t&&1===i[Ll]||-1===t&&0===i[Ll]);)e[Ll]+=t,i=e,e=e[Se]}const Y={lFrame:ZW(null),bindingsEnabled:!0,skipHydrationRootTNode:null};function uW(){return Y.bindingsEnabled}function g(){return Y.lFrame.lView}function $(){return Y.lFrame.tView}function Mt(n){return Y.lFrame.contextLView=n,n[Ce]}function kt(n){return Y.lFrame.contextLView=null,n}function et(){let n=pW();for(;null!==n&&64===n.type;)n=n.parent;return n}function pW(){return Y.lFrame.currentTNode}function Nn(n,t){const e=Y.lFrame;e.currentTNode=n,e.isParent=t}function pc(){return Y.lFrame.isParent}function ut(){const n=Y.lFrame;let t=n.bindingRootIndex;return-1===t&&(t=n.bindingRootIndex=n.tView.bindingStartIndex),t}function Sr(){return Y.lFrame.bindingIndex++}function CE(n,t){const e=Y.lFrame;e.bindingIndex=e.bindingRootIndex=n,mc(t)}function mc(n){Y.lFrame.currentDirectiveIndex=n}function FW(){return Y.lFrame.currentQueryIndex}function Fc(n){Y.lFrame.currentQueryIndex=n}function wE(n){const t=n[N];return 2===t.type?t.declTNode:1===t.type?n[it]:null}function UW(n,t,e){if(e&Q.SkipSelf){let r=t,l=n;for(;!(r=r.parent,null!==r||e&Q.Host||(r=wE(l),null===r||(l=l[Mr],10&r.type))););if(null===r)return!1;t=r,n=l}const i=Y.lFrame=TW();return i.currentTNode=t,i.lView=n,!0}function Uc(n){const t=TW(),e=n[N];Y.lFrame=t,t.currentTNode=e.firstChild,t.lView=n,t.tView=e,t.contextLView=n,t.bindingIndex=e.bindingStartIndex,t.inI18n=!1}function TW(){const n=Y.lFrame,t=null===n?null:n.child;return null===t?ZW(n):t}function ZW(n){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:n,child:null,inI18n:!1};return null!==n&&(n.child=t),t}function gW(){const n=Y.lFrame;return Y.lFrame=n.parent,n.currentTNode=null,n.lView=null,n}const fW=gW;function Tc(){const n=gW();n.isParent=!0,n.tView=null,n.selectedIndex=-1,n.contextLView=null,n.elementDepthCount=0,n.currentDirectiveIndex=-1,n.currentNamespace=null,n.bindingRootIndex=-1,n.bindingIndex=-1,n.currentQueryIndex=0}function pt(){return Y.lFrame.selectedIndex}function ji(n){Y.lFrame.selectedIndex=n}function Ge(){const n=Y.lFrame;return oW(n.tView,n.selectedIndex)}function Kn(){Y.lFrame.currentNamespace=lW}function Gr(){!function DE(){Y.lFrame.currentNamespace=null}()}let kW=!0;function _o(){return kW}function Wi(n){kW=n}function qo(n,t){for(let e=t.directiveStart,i=t.directiveEnd;e<i;e++){const l=n.data[e].type.prototype,{ngAfterContentInit:a,ngAfterContentChecked:o,ngAfterViewInit:s,ngAfterViewChecked:V,ngOnDestroy:d}=l;a&&(n.contentHooks??=[]).push(-e,a),o&&((n.contentHooks??=[]).push(e,o),(n.contentCheckHooks??=[]).push(e,o)),s&&(n.viewHooks??=[]).push(-e,s),V&&((n.viewHooks??=[]).push(e,V),(n.viewCheckHooks??=[]).push(e,V)),null!=d&&(n.destroyHooks??=[]).push(e,d)}}function $o(n,t,e){bW(n,t,3,e)}function es(n,t,e,i){(3&n[X])===e&&bW(n,t,e,i)}function Zc(n,t){let e=n[X];(3&e)===t&&(e&=8191,e+=1,n[X]=e)}function bW(n,t,e,i){const l=i??-1,a=t.length-1;let o=0;for(let s=void 0!==i?65535&n[kr]:0;s<a;s++)if("number"==typeof t[s+1]){if(o=t[s],null!=i&&o>=i)break}else t[s]<0&&(n[kr]+=65536),(o<l||-1==l)&&(OE(n,e,t,s),n[kr]=(4294901760&n[kr])+s+2),s++}function NW(n,t){bn(4,n,t);const e=Ke(null);try{t.call(n)}finally{Ke(e),bn(5,n,t)}}function OE(n,t,e,i){const r=e[i]<0,l=e[i+1],o=n[r?-e[i]:e[i]];r?n[X]>>13<n[kr]>>16&&(3&n[X])===t&&(n[X]+=8192,NW(o,l)):NW(o,l)}const yr=-1;class ta{constructor(t,e,i){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=i}}function EW(n){return n!==yr}function ts(n){return 32767&n}function ns(n,t){let e=function HE(n){return n>>16}(n),i=t;for(;e>0;)i=i[Mr],e--;return i}let fc=!0;function is(n){const t=fc;return fc=n,t}const SW=255,GW=5;let BE=0;const En={};function rs(n,t){const e=yW(n,t);if(-1!==e)return e;const i=t[N];i.firstCreatePass&&(n.injectorIndex=t.length,Mc(i.data,n),Mc(t,null),Mc(i.blueprint,null));const r=kc(n,t),l=n.injectorIndex;if(EW(r)){const a=ts(r),o=ns(r,t),s=o[N].data;for(let V=0;V<8;V++)t[l+V]=o[a+V]|s[a+V]}return t[l+8]=r,l}function Mc(n,t){n.push(0,0,0,0,0,0,0,0,t)}function yW(n,t){return-1===n.injectorIndex||n.parent&&n.parent.injectorIndex===n.injectorIndex||null===t[n.injectorIndex+8]?-1:n.injectorIndex}function kc(n,t){if(n.parent&&-1!==n.parent.injectorIndex)return n.parent.injectorIndex;let e=0,i=null,r=t;for(;null!==r;){if(i=YW(r),null===i)return yr;if(e++,r=r[Mr],-1!==i.injectorIndex)return i.injectorIndex|e<<16}return yr}function bc(n,t,e){!function PE(n,t,e){let i;"string"==typeof e?i=e.charCodeAt(0)||0:e.hasOwnProperty(Pl)&&(i=e[Pl]),null==i&&(i=e[Pl]=BE++);const r=i&SW;t.data[n+(r>>GW)]|=1<<r}(n,t,e)}function IW(n,t,e){if(e&Q.Optional||void 0!==n)return n;wo()}function CW(n,t,e,i){if(e&Q.Optional&&void 0===i&&(i=null),!(e&(Q.Self|Q.Host))){const r=n[fr],l=Ut(void 0);try{return r?r.get(t,i,e&Q.Optional):Sm(t,i,e&Q.Optional)}finally{Ut(l)}}return IW(i,0,e)}function xW(n,t,e,i=Q.Default,r){if(null!==n){if(2048&t[X]&&!(i&Q.Self)){const a=function qE(n,t,e,i,r){let l=n,a=t;for(;null!==l&&null!==a&&2048&a[X]&&!(512&a[X]);){const o=wW(l,a,e,i|Q.Self,En);if(o!==En)return o;let s=l.parent;if(!s){const V=a[Bm];if(V){const d=V.get(e,En,i);if(d!==En)return d}s=YW(a),a=a[Mr]}l=s}return r}(n,t,e,i,En);if(a!==En)return a}const l=wW(n,t,e,i,En);if(l!==En)return l}return CW(t,e,i,r)}function wW(n,t,e,i,r){const l=function KE(n){if("string"==typeof n)return n.charCodeAt(0)||0;const t=n.hasOwnProperty(Pl)?n[Pl]:void 0;return"number"==typeof t?t>=0?t&SW:_E:t}(e);if("function"==typeof l){if(!UW(t,n,i))return i&Q.Host?IW(r,0,i):CW(t,e,i,r);try{const a=l(i);if(null!=a||i&Q.Optional)return a;wo()}finally{fW()}}else if("number"==typeof l){let a=null,o=yW(n,t),s=yr,V=i&Q.Host?t[xe][it]:null;for((-1===o||i&Q.SkipSelf)&&(s=-1===o?kc(n,t):t[o+8],s!==yr&&vW(i,!1)?(a=t[N],o=ts(s),t=ns(s,t)):o=-1);-1!==o;){const d=t[N];if(JW(l,o,d.data)){const c=LE(o,t,e,a,i,V);if(c!==En)return c}s=t[o+8],s!==yr&&vW(i,t[N].data[o+8]===V)&&JW(l,o,t)?(a=d,o=ts(s),t=ns(s,t)):o=-1}}return r}function LE(n,t,e,i,r,l){const a=t[N],o=a.data[n+8],d=ls(o,a,e,null==i?Oi(o)&&fc:i!=a&&0!=(3&o.type),r&Q.Host&&l===o);return null!==d?zi(t,a,d,o):En}function ls(n,t,e,i,r){const l=n.providerIndexes,a=t.data,o=1048575&l,s=n.directiveStart,d=l>>20,h=r?o+d:n.directiveEnd;for(let u=i?o:o+d;u<h;u++){const p=a[u];if(u<s&&e===p||u>=s&&p.type===e)return u}if(r){const u=a[s];if(u&&Vn(u)&&u.type===e)return s}return null}function zi(n,t,e,i){let r=n[e];const l=t.data;if(function XE(n){return n instanceof ta}(r)){const a=r;a.resolving&&function T0(n,t){const e=t?`. Dependency path: ${t.join(" > ")} > ${n}`:"";throw new U(-200,`Circular dependency in DI detected for ${n}${e}`)}(function ce(n){return"function"==typeof n?n.name||n.toString():"object"==typeof n&&null!=n&&"function"==typeof n.type?n.type.name||n.type.toString():O(n)}(l[e]));const o=is(a.canSeeViewProviders);a.resolving=!0;const s=a.injectImpl?Ut(a.injectImpl):null;UW(n,i,Q.Default);try{r=n[e]=a.factory(void 0,l,n,i),t.firstCreatePass&&e>=i.directiveStart&&function AE(n,t,e){const{ngOnChanges:i,ngOnInit:r,ngDoCheck:l}=t.type.prototype;if(i){const a=nW(t);(e.preOrderHooks??=[]).push(n,a),(e.preOrderCheckHooks??=[]).push(n,a)}r&&(e.preOrderHooks??=[]).push(0-n,r),l&&((e.preOrderHooks??=[]).push(n,l),(e.preOrderCheckHooks??=[]).push(n,l))}(e,l[e],t)}finally{null!==s&&Ut(s),is(o),a.resolving=!1,fW()}}return r}function JW(n,t,e){return!!(e[t+(n>>GW)]&1<<n)}function vW(n,t){return!(n&Q.Self||n&Q.Host&&t)}class Ir{constructor(t,e){this._tNode=t,this._lView=e}get(t,e,i){return xW(this._tNode,this._lView,t,Do(i),e)}}function _E(){return new Ir(et(),g())}function Nc(n){return _d(n)?()=>{const t=Nc(D(n));return t&&t()}:Xi(n)}function YW(n){const t=n[N],e=t.type;return 2===e?t.declTNode:1===e?n[it]:null}const wr="__parameters__";function vr(n,t,e){return Hn(()=>{const i=function Ec(n){return function(...e){if(n){const i=n(...e);for(const r in i)this[r]=i[r]}}}(t);function r(...l){if(this instanceof r)return i.apply(this,l),this;const a=new r(...l);return o.annotation=a,o;function o(s,V,d){const c=s.hasOwnProperty(wr)?s[wr]:Object.defineProperty(s,wr,{value:[]})[wr];for(;c.length<=d;)c.push(null);return(c[d]=c[d]||[]).push(a),s}}return e&&(r.prototype=Object.create(e.prototype)),r.prototype.ngMetadataName=n,r.annotationCls=r,r})}function ia(n,t){n.forEach(e=>Array.isArray(e)?ia(e,t):t(e))}function AW(n,t,e){t>=n.length?n.push(e):n.splice(t,0,e)}function as(n,t){return t>=n.length-1?n.pop():n.splice(t,1)[0]}function wt(n,t,e){let i=Dr(n,t);return i>=0?n[1|i]=e:(i=~i,function lS(n,t,e,i){let r=n.length;if(r==t)n.push(e,i);else if(1===r)n.push(i,n[0]),n[0]=e;else{for(r--,n.push(n[r-1],n[r]);r>t;)n[r]=n[r-2],r--;n[t]=e,n[t+1]=i}}(n,i,t,e)),i}function Sc(n,t){const e=Dr(n,t);if(e>=0)return n[1|e]}function Dr(n,t){return function OW(n,t,e){let i=0,r=n.length>>e;for(;r!==i;){const l=i+(r-i>>1),a=n[l<<e];if(t===a)return l<<e;a>t?r=l:i=l+1}return~(r<<e)}(n,t,1)}const Hi=Bl(vr("Optional"),8),la=Bl(vr("SkipSelf"),4);function hs(n){return 128==(128&n.flags)}var Fi=function(n){return n[n.Important=1]="Important",n[n.DashCase=2]="DashCase",n}(Fi||{});const xc=new Map;let SS=0;const Jc="__ngContext__";function lt(n,t){It(t)?(n[Jc]=t[ql],function yS(n){xc.set(n[ql],n)}(t)):n[Jc]=t}let vc;function Yc(n,t){return vc(n,t)}function sa(n){const t=n[Se];return gt(t)?t[Se]:t}function oF(n){return VF(n[Kl])}function sF(n){return VF(n[sn])}function VF(n){for(;null!==n&&!gt(n);)n=n[sn];return n}function Xr(n,t,e,i,r){if(null!=i){let l,a=!1;gt(i)?l=i:It(i)&&(a=!0,i=i[He]);const o=Me(i);0===n&&null!==e?null==r?pF(t,e,o):Bi(t,e,o,r||null,!0):1===n&&null!==e?Bi(t,e,o,r||null,!0):2===n?function Fs(n,t,e){const i=ms(n,t);i&&function KS(n,t,e,i){n.removeChild(t,e,i)}(n,i,t,e)}(t,o,a):3===n&&t.destroyNode(o),null!=l&&function $S(n,t,e,i,r){const l=e[Mn];l!==Me(e)&&Xr(t,n,i,l,r);for(let o=rt;o<e.length;o++){const s=e[o];da(s[N],s,n,t,i,l)}}(t,n,l,e,r)}}function Rs(n,t,e){return n.createElement(t,e)}function cF(n,t){const e=n[br],i=e.indexOf(t);VW(t),e.splice(i,1)}function Ac(n,t){if(n.length<=rt)return;const e=rt+t,i=n[e];if(i){const r=i[_l];null!==r&&r!==n&&cF(r,i),t>0&&(n[e-1][sn]=i[sn]);const l=as(n,rt+t);!function XS(n,t){da(n,t,t[j],2,null,null),t[He]=null,t[it]=null}(i[N],i);const a=l[fn];null!==a&&a.detachView(l[N]),i[Se]=null,i[sn]=null,i[X]&=-129}return i}function hF(n,t){if(!(256&t[X])){const e=t[j];t[jo]?.destroy(),t[zo]?.destroy(),e.destroyNode&&da(n,t,e,3,null,null),function HS(n){let t=n[Kl];if(!t)return Oc(n[N],n);for(;t;){let e=null;if(It(t))e=t[Kl];else{const i=t[rt];i&&(e=i)}if(!e){for(;t&&!t[sn]&&t!==n;)It(t)&&Oc(t[N],t),t=t[Se];null===t&&(t=n),It(t)&&Oc(t[N],t),e=t&&t[sn]}t=e}}(t)}}function Oc(n,t){if(!(256&t[X])){t[X]&=-129,t[X]|=256,function LS(n,t){let e;if(null!=n&&null!=(e=n.destroyHooks))for(let i=0;i<e.length;i+=2){const r=t[e[i]];if(!(r instanceof ta)){const l=e[i+1];if(Array.isArray(l))for(let a=0;a<l.length;a+=2){const o=r[l[a]],s=l[a+1];bn(4,o,s);try{s.call(o)}finally{bn(5,o,s)}}else{bn(4,r,l);try{l.call(r)}finally{bn(5,r,l)}}}}}(n,t),function QS(n,t){const e=n.cleanup,i=t[gr];if(null!==e)for(let l=0;l<e.length-1;l+=2)if("string"==typeof e[l]){const a=e[l+3];a>=0?i[a]():i[-a].unsubscribe(),l+=2}else e[l].call(i[e[l+1]]);null!==i&&(t[gr]=null);const r=t[Ri];if(null!==r){t[Ri]=null;for(let l=0;l<r.length;l++)(0,r[l])()}}(n,t),1===t[N].type&&t[j].destroy();const e=t[_l];if(null!==e&&gt(t[Se])){e!==t[Se]&&cF(e,t);const i=t[fn];null!==i&&i.detachView(n)}!function IS(n){xc.delete(n[ql])}(t)}}function Xc(n,t,e){return function uF(n,t,e){let i=t;for(;null!==i&&40&i.type;)i=(t=i).parent;if(null===i)return e[He];{const{componentOffset:r}=i;if(r>-1){const{encapsulation:l}=n.data[i.directiveStart+r];if(l===Pt.None||l===Pt.Emulated)return null}return ft(i,e)}}(n,t.parent,e)}function Bi(n,t,e,i,r){n.insertBefore(t,e,i,r)}function pF(n,t,e){n.appendChild(t,e)}function RF(n,t,e,i,r){null!==i?Bi(n,t,e,i,r):pF(n,t,e)}function ms(n,t){return n.parentNode(t)}let jc,Us,Pc,Ts,FF=function WF(n,t,e){return 40&n.type?ft(n,e):null};function Ws(n,t,e,i){const r=Xc(n,i,t),l=t[j],o=function mF(n,t,e){return FF(n,t,e)}(i.parent||t[it],i,t);if(null!=r)if(Array.isArray(e))for(let s=0;s<e.length;s++)RF(l,r,e[s],o,!1);else RF(l,r,e,o,!1);void 0!==jc&&jc(l,i,t,e,r)}function Va(n,t){if(null!==t){const e=t.type;if(3&e)return ft(t,n);if(4&e)return zc(-1,n[t.index]);if(8&e){const i=t.child;if(null!==i)return Va(n,i);{const r=n[t.index];return gt(r)?zc(-1,r):Me(r)}}if(32&e)return Yc(t,n)()||Me(n[t.index]);{const i=TF(n,t);return null!==i?Array.isArray(i)?i[0]:Va(sa(n[xe]),i):Va(n,t.next)}}return null}function TF(n,t){return null!==t?n[xe][it].projection[t.projection]:null}function zc(n,t){const e=rt+n+1;if(e<t.length){const i=t[e],r=i[N].firstChild;if(null!==r)return Va(i,r)}return t[Mn]}function Hc(n,t,e,i,r,l,a){for(;null!=e;){const o=i[e.index],s=e.type;if(a&&0===t&&(o&&lt(Me(o),i),e.flags|=2),32!=(32&e.flags))if(8&s)Hc(n,t,e.child,i,r,l,!1),Xr(t,n,r,o,l);else if(32&s){const V=Yc(e,i);let d;for(;d=V();)Xr(t,n,r,d,l);Xr(t,n,r,o,l)}else 16&s?gF(n,t,i,e,r,l):Xr(t,n,r,o,l);e=a?e.projectionNext:e.next}}function da(n,t,e,i,r,l){Hc(e,i,n.firstChild,t,r,l,!1)}function gF(n,t,e,i,r,l){const a=e[xe],s=a[it].projection[i.projection];if(Array.isArray(s))for(let V=0;V<s.length;V++)Xr(t,n,r,s[V],l);else{let V=s;const d=a[Se];hs(i)&&(V.flags|=128),Hc(n,t,V,d,r,l,!0)}}function fF(n,t,e){""===e?n.removeAttribute(t,"class"):n.setAttribute(t,"class",e)}function MF(n,t,e){const{mergedAttrs:i,classes:r,styles:l}=e;null!==i&&lc(n,t,i),null!==r&&fF(n,t,r),null!==l&&function tG(n,t,e){n.setAttribute(t,"style",e)}(n,t,l)}function jr(n){return function Bc(){if(void 0===Us&&(Us=null,Fe.trustedTypes))try{Us=Fe.trustedTypes.createPolicy("angular",{createHTML:n=>n,createScript:n=>n,createScriptURL:n=>n})}catch{}return Us}()?.createHTML(n)||n}function ca(){if(void 0!==Pc)return Pc;if(typeof document<"u")return document;throw new U(210,!1)}function Qc(){if(void 0===Ts&&(Ts=null,Fe.trustedTypes))try{Ts=Fe.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:n=>n,createScript:n=>n,createScriptURL:n=>n})}catch{}return Ts}function kF(n){return Qc()?.createHTML(n)||n}function NF(n){return Qc()?.createScriptURL(n)||n}class Pi{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Mm})`}}function Jt(n){return n instanceof Pi?n.changingThisBreaksApplicationSecurity:n}function Sn(n,t){const e=function cG(n){return n instanceof Pi&&n.getTypeName()||null}(n);if(null!=e&&e!==t){if("ResourceURL"===e&&"URL"===t)return!0;throw new Error(`Required a safe ${t}, got a ${e} (see ${Mm})`)}return e===t}class WG{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(jr(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch{return null}}}class FG{constructor(t){this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert")}getInertBodyElement(t){const e=this.inertDocument.createElement("template");return e.innerHTML=jr(t),e}}const TG=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;function Zs(n){return(n=String(n)).match(TG)?n:"unsafe:"+n}function _n(n){const t={};for(const e of n.split(","))t[e]=!0;return t}function ha(...n){const t={};for(const e of n)for(const i in e)e.hasOwnProperty(i)&&(t[i]=!0);return t}const SF=_n("area,br,col,hr,img,wbr"),GF=_n("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),yF=_n("rp,rt"),Lc=ha(SF,ha(GF,_n("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),ha(yF,_n("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),ha(yF,GF)),Kc=_n("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),IF=ha(Kc,_n("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),_n("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),ZG=_n("script,style,template");class gG{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,i=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?i=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,i&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let r=this.checkClobberedElement(e,e.nextSibling);if(r){e=r;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!Lc.hasOwnProperty(e))return this.sanitizedSomething=!0,!ZG.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const i=t.attributes;for(let r=0;r<i.length;r++){const l=i.item(r),a=l.name,o=a.toLowerCase();if(!IF.hasOwnProperty(o)){this.sanitizedSomething=!0;continue}let s=l.value;Kc[o]&&(s=Zs(s)),this.buf.push(" ",a,'="',CF(s),'"')}return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();Lc.hasOwnProperty(e)&&!SF.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(CF(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const fG=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,MG=/([^\#-~ |!])/g;function CF(n){return n.replace(/&/g,"&amp;").replace(fG,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(MG,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let gs;function xF(n,t){let e=null;try{gs=gs||function EF(n){const t=new FG(n);return function UG(){try{return!!(new window.DOMParser).parseFromString(jr(""),"text/html")}catch{return!1}}()?new WG(t):t}(n);let i=t?String(t):"";e=gs.getInertBodyElement(i);let r=5,l=i;do{if(0===r)throw new Error("Failed to sanitize html because the input is unstable");r--,i=l,l=e.innerHTML,e=gs.getInertBodyElement(i)}while(i!==l);return jr((new gG).sanitizeChildren(_c(e)||e))}finally{if(e){const i=_c(e)||e;for(;i.firstChild;)i.removeChild(i.firstChild)}}}function _c(n){return"content"in n&&function kG(n){return n.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===n.nodeName}(n)?n.content:null}var tt=function(n){return n[n.NONE=0]="NONE",n[n.HTML=1]="HTML",n[n.STYLE=2]="STYLE",n[n.SCRIPT=3]="SCRIPT",n[n.URL=4]="URL",n[n.RESOURCE_URL=5]="RESOURCE_URL",n}(tt||{});function wF(n){const t=ua();return t?kF(t.sanitize(tt.HTML,n)||""):Sn(n,"HTML")?kF(Jt(n)):xF(ca(),O(n))}function JF(n){const t=ua();return t?t.sanitize(tt.URL,n)||"":Sn(n,"URL")?Jt(n):Zs(O(n))}function vF(n){const t=ua();if(t)return NF(t.sanitize(tt.RESOURCE_URL,n)||"");if(Sn(n,"ResourceURL"))return NF(Jt(n));throw new U(904,!1)}function ua(){const n=g();return n&&n[Ai].sanitizer}class f{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=k({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}const pa=new f("ENVIRONMENT_INITIALIZER"),DF=new f("INJECTOR",-1),AF=new f("INJECTOR_DEF_TYPES");class OF{get(t,e=Hl){if(e===Hl){const i=new Error(`NullInjectorError: No provider for ${ze(t)}!`);throw i.name="NullInjectorError",i}return e}}function yG(...n){return{\u0275providers:XF(0,n),\u0275fromNgModule:!0}}function XF(n,...t){const e=[],i=new Set;let r;return ia(t,l=>{const a=l;$c(a,e,[],i)&&(r||=[],r.push(a))}),void 0!==r&&jF(r,e),e}function jF(n,t){for(let e=0;e<n.length;e++){const{providers:r}=n[e];eh(r,l=>{t.push(l)})}}function $c(n,t,e,i){if(!(n=D(n)))return!1;let r=null,l=bm(n);const a=!l&&le(n);if(l||a){if(a&&!a.standalone)return!1;r=n}else{const s=n.ngModule;if(l=bm(s),!l)return!1;r=s}const o=i.has(r);if(a){if(o)return!1;if(i.add(r),a.dependencies){const s="function"==typeof a.dependencies?a.dependencies():a.dependencies;for(const V of s)$c(V,t,e,i)}}else{if(!l)return!1;{if(null!=l.imports&&!o){let V;i.add(r);try{ia(l.imports,d=>{$c(d,t,e,i)&&(V||=[],V.push(d))})}finally{}void 0!==V&&jF(V,t)}if(!o){const V=Xi(r)||(()=>new r);t.push({provide:r,useFactory:V,deps:ne},{provide:AF,useValue:r,multi:!0},{provide:pa,useValue:()=>T(r),multi:!0})}const s=l.providers;null==s||o||eh(s,d=>{t.push(d)})}}return r!==n&&void 0!==n.providers}function eh(n,t){for(let e of n)qd(e)&&(e=e.\u0275providers),Array.isArray(e)?eh(e,t):t(e)}const IG=ue({provide:String,useValue:ue});function th(n){return null!==n&&"object"==typeof n&&IG in n}function Qi(n){return"function"==typeof n}const nh=new f("Set Injector scope."),fs={},xG={};let ih;function Ms(){return void 0===ih&&(ih=new OF),ih}class Gn{}class rh extends Gn{get destroyed(){return this._destroyed}constructor(t,e,i,r){super(),this.parent=e,this.source=i,this.scopes=r,this.records=new Map,this._ngOnDestroyHooks=new Set,this._onDestroyHooks=[],this._destroyed=!1,ah(t,a=>this.processProvider(a)),this.records.set(DF,zr(void 0,this)),r.has("environment")&&this.records.set(Gn,zr(void 0,this));const l=this.records.get(nh);null!=l&&"string"==typeof l.value&&this.scopes.add(l.value),this.injectorDefTypes=new Set(this.get(AF.multi,ne,Q.Self))}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{for(const e of this._ngOnDestroyHooks)e.ngOnDestroy();const t=this._onDestroyHooks;this._onDestroyHooks=[];for(const e of t)e()}finally{this.records.clear(),this._ngOnDestroyHooks.clear(),this.injectorDefTypes.clear()}}onDestroy(t){return this.assertNotDestroyed(),this._onDestroyHooks.push(t),()=>this.removeOnDestroy(t)}runInContext(t){this.assertNotDestroyed();const e=pi(this),i=Ut(void 0);try{return t()}finally{pi(e),Ut(i)}}get(t,e=Hl,i=Q.Default){if(this.assertNotDestroyed(),t.hasOwnProperty(Cm))return t[Cm](this);i=Do(i);const r=pi(this),l=Ut(void 0);try{if(!(i&Q.SkipSelf)){let o=this.records.get(t);if(void 0===o){const s=function DG(n){return"function"==typeof n||"object"==typeof n&&n instanceof f}(t)&&Jo(t);o=s&&this.injectableDefInScope(s)?zr(lh(t),fs):null,this.records.set(t,o)}if(null!=o)return this.hydrate(t,o)}return(i&Q.Self?Ms():this.parent).get(t,e=i&Q.Optional&&e===Hl?null:e)}catch(a){if("NullInjectorError"===a.name){if((a[Yo]=a[Yo]||[]).unshift(ze(t)),r)throw a;return function x0(n,t,e,i){const r=n[Yo];throw t[Gm]&&r.unshift(t[Gm]),n.message=function w0(n,t,e,i=null){n=n&&"\n"===n.charAt(0)&&"\u0275"==n.charAt(1)?n.slice(2):n;let r=ze(t);if(Array.isArray(t))r=t.map(ze).join(" -> ");else if("object"==typeof t){let l=[];for(let a in t)if(t.hasOwnProperty(a)){let o=t[a];l.push(a+":"+("string"==typeof o?JSON.stringify(o):ze(o)))}r=`{${l.join(", ")}}`}return`${e}${i?"("+i+")":""}[${r}]: ${n.replace(S0,"\n  ")}`}("\n"+n.message,r,e,i),n.ngTokenPath=r,n[Yo]=null,n}(a,t,"R3InjectorError",this.source)}throw a}finally{Ut(l),pi(r)}}resolveInjectorInitializers(){const t=pi(this),e=Ut(void 0);try{const i=this.get(pa.multi,ne,Q.Self);for(const r of i)r()}finally{pi(t),Ut(e)}}toString(){const t=[],e=this.records;for(const i of e.keys())t.push(ze(i));return`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new U(205,!1)}processProvider(t){let e=Qi(t=D(t))?t:D(t&&t.provide);const i=function JG(n){return th(n)?zr(void 0,n.useValue):zr(function BF(n,t,e){let i;if(Qi(n)){const r=D(n);return Xi(r)||lh(r)}if(th(n))i=()=>D(n.useValue);else if(function HF(n){return!(!n||!n.useFactory)}(n))i=()=>n.useFactory(...nc(n.deps||[]));else if(function zF(n){return!(!n||!n.useExisting)}(n))i=()=>T(D(n.useExisting));else{const r=D(n&&(n.useClass||n.provide));if(!function vG(n){return!!n.deps}(n))return Xi(r)||lh(r);i=()=>new r(...nc(n.deps))}return i}(n),fs)}(t);if(Qi(t)||!0!==t.multi)this.records.get(e);else{let r=this.records.get(e);r||(r=zr(void 0,fs,!0),r.factory=()=>nc(r.multi),this.records.set(e,r)),e=t,r.multi.push(t)}this.records.set(e,i)}hydrate(t,e){return e.value===fs&&(e.value=xG,e.value=e.factory()),"object"==typeof e.value&&e.value&&function YG(n){return null!==n&&"object"==typeof n&&"function"==typeof n.ngOnDestroy}(e.value)&&this._ngOnDestroyHooks.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=D(t.providedIn);return"string"==typeof e?"any"===e||this.scopes.has(e):this.injectorDefTypes.has(e)}removeOnDestroy(t){const e=this._onDestroyHooks.indexOf(t);-1!==e&&this._onDestroyHooks.splice(e,1)}}function lh(n){const t=Jo(n),e=null!==t?t.factory:Xi(n);if(null!==e)return e;if(n instanceof f)throw new U(204,!1);if(n instanceof Function)return function wG(n){const t=n.length;if(t>0)throw function ra(n,t){const e=[];for(let i=0;i<n;i++)e.push(t);return e}(t,"?"),new U(204,!1);const e=function b0(n){return n&&(n[vo]||n[Nm])||null}(n);return null!==e?()=>e.factory(n):()=>new n}(n);throw new U(204,!1)}function zr(n,t,e=!1){return{factory:n,value:t,multi:e?[]:void 0}}function ah(n,t){for(const e of n)Array.isArray(e)?ah(e,t):e&&qd(e)?ah(e.\u0275providers,t):t(e)}const Ra=new f("AppId",{providedIn:"root",factory:()=>AG}),AG="ng",PF=new f("Platform Initializer"),Ui=new f("Platform ID",{providedIn:"platform",factory:()=>"unknown"}),Ti=new f("AnimationModuleType"),oh=new f("CSP nonce",{providedIn:"root",factory:()=>ca().body?.querySelector("[ngCspNonce]")?.getAttribute("ngCspNonce")||null});let LF=(n,t)=>null;function KF(n,t){return LF(n,t)}class LG{}class $F{}class _G{resolveComponentFactory(t){throw function KG(n){const t=Error(`No component factory found for ${ze(n)}.`);return t.ngComponent=n,t}(t)}}let Fa=(()=>{class n{}return n.NULL=new _G,n})();function qG(){return Br(et(),g())}function Br(n,t){return new Ue(ft(n,t))}let Ue=(()=>{class n{constructor(e){this.nativeElement=e}}return n.__NG_ELEMENT_ID__=qG,n})();function $G(n){return n instanceof Ue?n.nativeElement:n}class Ua{}let qn=(()=>{class n{constructor(){this.destroyNode=null}}return n.__NG_ELEMENT_ID__=()=>function ey(){const n=g(),e=xt(et().index,n);return(It(e)?e:n)[j]}(),n})(),ty=(()=>{class n{}return n.\u0275prov=k({token:n,providedIn:"root",factory:()=>null}),n})();class Li{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const ny=new Li("16.1.6"),Fh={};function Ta(n){for(;n;){n[X]|=64;const t=sa(n);if(sc(n)&&!t)return n;n=t}return null}function Uh(n){return n.ngOriginalError}class $n{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t);this._console.error("ERROR",t),e&&this._console.error("ORIGINAL ERROR",e)}_findOriginalError(t){let e=t&&Uh(t);for(;e&&Uh(e);)e=Uh(e);return e||null}}const iU=new f("",{providedIn:"root",factory:()=>!1});function rU(n){return n.ownerDocument.defaultView}function lU(n){return n.ownerDocument}function ei(n){return n instanceof Function?n():n}class dU extends qm{constructor(){super(...arguments),this.consumerAllowSignalWrites=!1,this._lView=null}set lView(t){this._lView=t}onConsumerDependencyMayHaveChanged(){Ta(this._lView)}onProducerUpdateValueVersion(){}get hasReadASignal(){return this.hasProducers}runInContext(t,e,i){const r=Ke(this);this.trackingVersion++;try{t(e,i)}finally{Ke(r)}}destroy(){this.trackingVersion++}}let Gs=null;function cU(){return Gs??=new dU,Gs}function hU(n,t){return n[t]??cU()}function uU(n,t){const e=cU();e.hasReadASignal&&(n[t]=Gs,e.lView=n,Gs=new dU)}const z={};function G(n){pU($(),g(),pt()+n,!1)}function pU(n,t,e,i){if(!i)if(3==(3&t[X])){const l=n.preOrderCheckHooks;null!==l&&$o(t,l,e)}else{const l=n.preOrderHooks;null!==l&&es(t,l,0,e)}ji(e)}function FU(n,t=null,e=null,i){const r=UU(n,t,e,i);return r.resolveInjectorInitializers(),r}function UU(n,t=null,e=null,i,r=new Set){const l=[e||ne,yG(n)];return i=i||("object"==typeof n?void 0:ze(n)),new rh(l,t||Ms(),i||null,r)}let vt=(()=>{class n{static create(e,i){if(Array.isArray(e))return FU({name:""},i,e,"");{const r=e.name??"";return FU({name:r},e.parent,e.providers,r)}}}return n.THROW_IF_NOT_FOUND=Hl,n.NULL=new OF,n.\u0275prov=k({token:n,providedIn:"any",factory:()=>T(DF)}),n.__NG_ELEMENT_ID__=-1,n})();function F(n,t=Q.Default){const e=g();return null===e?T(n,t):xW(et(),e,D(n),t)}function Th(){throw new Error("invalid")}function ys(n,t,e,i,r,l,a,o,s,V,d){const c=t.blueprint.slice();return c[He]=r,c[X]=140|i,(null!==V||n&&2048&n[X])&&(c[X]|=2048),sW(c),c[Se]=c[Mr]=n,c[Ce]=e,c[Ai]=a||n&&n[Ai],c[j]=o||n&&n[j],c[fr]=s||n&&n[fr]||null,c[it]=l,c[ql]=function GS(){return SS++}(),c[Pn]=d,c[Bm]=V,c[xe]=2==t.type?n[xe]:c,c}function Qr(n,t,e,i,r){let l=n.data[t];if(null===l)l=function Zh(n,t,e,i,r){const l=pW(),a=pc(),s=n.data[t]=function Zy(n,t,e,i,r,l){let a=t?t.injectorIndex:-1,o=0;return function Er(){return null!==Y.skipHydrationRootTNode}()&&(o|=128),{type:e,index:i,insertBeforeIndex:null,injectorIndex:a,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,componentOffset:-1,propertyBindings:null,flags:o,providerIndexes:0,value:r,attrs:l,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tView:null,next:null,prev:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,a?l:l&&l.parent,e,t,i,r);return null===n.firstChild&&(n.firstChild=s),null!==l&&(a?null==l.child&&null!==s.parent&&(l.child=s):null===l.next&&(l.next=s,s.prev=l)),s}(n,t,e,i,r),function IE(){return Y.lFrame.inI18n}()&&(l.flags|=32);else if(64&l.type){l.type=e,l.value=i,l.attrs=r;const a=function ea(){const n=Y.lFrame,t=n.currentTNode;return n.isParent?t:t.parent}();l.injectorIndex=null===a?-1:a.injectorIndex}return Nn(l,!0),l}function Za(n,t,e,i){if(0===e)return-1;const r=t.length;for(let l=0;l<e;l++)t.push(i),n.blueprint.push(i),n.data.push(null);return r}function TU(n,t,e,i,r){const l=hU(t,jo),a=pt(),o=2&i;try{if(ji(-1),o&&t.length>_&&pU(n,t,_,!1),bn(o?2:0,r),o)l.runInContext(e,i,r);else{const V=Ke(null);try{e(i,r)}finally{Ke(V)}}}finally{o&&null===t[jo]&&uU(t,jo),ji(a),bn(o?3:1,r)}}function gh(n,t,e){if(oc(t)){const i=Ke(null);try{const l=t.directiveEnd;for(let a=t.directiveStart;a<l;a++){const o=n.data[a];o.contentQueries&&o.contentQueries(1,e[a],a)}}finally{Ke(i)}}}function fh(n,t,e){uW()&&(function Ey(n,t,e,i){const r=e.directiveStart,l=e.directiveEnd;Oi(e)&&function wy(n,t,e){const i=ft(t,n),r=ZU(e);let a=16;e.signals?a=4096:e.onPush&&(a=64);const o=Is(n,ys(n,r,null,a,i,t,null,n[Ai].rendererFactory.createRenderer(i,e),null,null,null));n[t.index]=o}(t,e,n.data[r+e.componentOffset]),n.firstCreatePass||rs(e,t),lt(i,t);const a=e.initialInputs;for(let o=r;o<l;o++){const s=n.data[o],V=zi(t,n,o,e);lt(V,t),null!==a&&Jy(0,o-r,V,s,0,a),Vn(s)&&(xt(e.index,t)[Ce]=zi(t,n,o,e))}}(n,t,e,ft(e,t)),64==(64&e.flags)&&bU(n,t,e))}function Mh(n,t,e=ft){const i=t.localNames;if(null!==i){let r=t.index+1;for(let l=0;l<i.length;l+=2){const a=i[l+1],o=-1===a?e(t,n):n[a];n[r++]=o}}}function ZU(n){const t=n.tView;return null===t||t.incompleteFirstPass?n.tView=kh(1,null,n.template,n.decls,n.vars,n.directiveDefs,n.pipeDefs,n.viewQuery,n.schemas,n.consts,n.id):t}function kh(n,t,e,i,r,l,a,o,s,V,d){const c=_+i,h=c+r,u=function Ry(n,t){const e=[];for(let i=0;i<t;i++)e.push(i<n?null:z);return e}(c,h),p="function"==typeof V?V():V;return u[N]={type:n,blueprint:u,template:e,queries:null,viewQuery:o,declTNode:t,data:u.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof l?l():l,pipeRegistry:"function"==typeof a?a():a,firstChild:null,schemas:s,consts:p,incompleteFirstPass:!1,ssrId:d}}let gU=n=>null;function fU(n,t,e,i){for(let r in n)if(n.hasOwnProperty(r)){e=null===e?{}:e;const l=n[r];null===i?MU(e,t,r,l):i.hasOwnProperty(r)&&MU(e,t,i[r],l)}return e}function MU(n,t,e,i){n.hasOwnProperty(e)?n[e].push(t,i):n[e]=[t,i]}function bh(n,t,e,i){if(uW()){const r=null===i?null:{"":-1},l=function Gy(n,t){const e=n.directiveRegistry;let i=null,r=null;if(e)for(let l=0;l<e.length;l++){const a=e[l];if(Am(t,a.selectors,!1))if(i||(i=[]),Vn(a))if(null!==a.findHostDirectiveDefs){const o=[];r=r||new Map,a.findHostDirectiveDefs(a,o,r),i.unshift(...o,a),Nh(n,t,o.length)}else i.unshift(a),Nh(n,t,0);else r=r||new Map,a.findHostDirectiveDefs?.(a,i,r),i.push(a)}return null===i?null:[i,r]}(n,e);let a,o;null===l?a=o=null:[a,o]=l,null!==a&&kU(n,t,e,a,r,o),r&&function yy(n,t,e){if(t){const i=n.localNames=[];for(let r=0;r<t.length;r+=2){const l=e[t[r+1]];if(null==l)throw new U(-301,!1);i.push(t[r],l)}}}(e,i,r)}e.mergedAttrs=Ql(e.mergedAttrs,e.attrs)}function kU(n,t,e,i,r,l){for(let V=0;V<i.length;V++)bc(rs(e,t),n,i[V].type);!function Cy(n,t,e){n.flags|=1,n.directiveStart=t,n.directiveEnd=t+e,n.providerIndexes=t}(e,n.data.length,i.length);for(let V=0;V<i.length;V++){const d=i[V];d.providersResolver&&d.providersResolver(d)}let a=!1,o=!1,s=Za(n,t,i.length,null);for(let V=0;V<i.length;V++){const d=i[V];e.mergedAttrs=Ql(e.mergedAttrs,d.hostAttrs),xy(n,e,t,s,d),Iy(s,d,r),null!==d.contentQueries&&(e.flags|=4),(null!==d.hostBindings||null!==d.hostAttrs||0!==d.hostVars)&&(e.flags|=64);const c=d.type.prototype;!a&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((n.preOrderHooks??=[]).push(e.index),a=!0),!o&&(c.ngOnChanges||c.ngDoCheck)&&((n.preOrderCheckHooks??=[]).push(e.index),o=!0),s++}!function gy(n,t,e){const r=t.directiveEnd,l=n.data,a=t.attrs,o=[];let s=null,V=null;for(let d=t.directiveStart;d<r;d++){const c=l[d],h=e?e.get(c):null,p=h?h.outputs:null;s=fU(c.inputs,d,s,h?h.inputs:null),V=fU(c.outputs,d,V,p);const R=null===s||null===a||Dm(t)?null:vy(s,d,a);o.push(R)}null!==s&&(s.hasOwnProperty("class")&&(t.flags|=8),s.hasOwnProperty("style")&&(t.flags|=16)),t.initialInputs=o,t.inputs=s,t.outputs=V}(n,e,l)}function bU(n,t,e){const i=e.directiveStart,r=e.directiveEnd,l=e.index,a=function xE(){return Y.lFrame.currentDirectiveIndex}();try{ji(l);for(let o=i;o<r;o++){const s=n.data[o],V=t[o];mc(o),(null!==s.hostBindings||0!==s.hostVars||null!==s.hostAttrs)&&Sy(s,V)}}finally{ji(-1),mc(a)}}function Sy(n,t){null!==n.hostBindings&&n.hostBindings(1,t)}function Nh(n,t,e){t.componentOffset=e,(n.components??=[]).push(t.index)}function Iy(n,t,e){if(e){if(t.exportAs)for(let i=0;i<t.exportAs.length;i++)e[t.exportAs[i]]=n;Vn(t)&&(e[""]=n)}}function xy(n,t,e,i,r){n.data[i]=r;const l=r.factory||(r.factory=Xi(r.type)),a=new ta(l,Vn(r),F);n.blueprint[i]=a,e[i]=a,function by(n,t,e,i,r){const l=r.hostBindings;if(l){let a=n.hostBindingOpCodes;null===a&&(a=n.hostBindingOpCodes=[]);const o=~t.index;(function Ny(n){let t=n.length;for(;t>0;){const e=n[--t];if("number"==typeof e&&e<0)return e}return 0})(a)!=o&&a.push(o),a.push(e,i,l)}}(n,t,i,Za(n,e,r.hostVars,z),r)}function yn(n,t,e,i,r,l){const a=ft(n,t);!function Eh(n,t,e,i,r,l,a){if(null==l)n.removeAttribute(t,r,e);else{const o=null==a?O(l):a(l,i||"",r);n.setAttribute(t,r,o,e)}}(t[j],a,l,n.value,e,i,r)}function Jy(n,t,e,i,r,l){const a=l[t];if(null!==a)for(let o=0;o<a.length;)NU(i,e,a[o++],a[o++],a[o++])}function NU(n,t,e,i,r){const l=Ke(null);try{const a=n.inputTransforms;null!==a&&a.hasOwnProperty(i)&&(r=a[i].call(t,r)),null!==n.setInput?n.setInput(t,r,e,i):t[i]=r}finally{Ke(l)}}function vy(n,t,e){let i=null,r=0;for(;r<e.length;){const l=e[r];if(0!==l)if(5!==l){if("number"==typeof l)break;if(n.hasOwnProperty(l)){null===i&&(i=[]);const a=n[l];for(let o=0;o<a.length;o+=2)if(a[o]===t){i.push(l,a[o+1],e[r+1]);break}}r+=2}else r+=2;else r+=4}return i}function EU(n,t,e,i){return[n,!0,!1,t,null,0,i,e,null,null,null]}function SU(n,t){const e=n.contentQueries;if(null!==e)for(let i=0;i<e.length;i+=2){const l=e[i+1];if(-1!==l){const a=n.data[l];Fc(e[i]),a.contentQueries(2,t[l],l)}}}function Is(n,t){return n[Kl]?n[Hm][sn]=t:n[Kl]=t,n[Hm]=t,t}function Sh(n,t,e){Fc(0);const i=Ke(null);try{t(n,e)}finally{Ke(i)}}function GU(n){return n[gr]||(n[gr]=[])}function yU(n){return n.cleanup||(n.cleanup=[])}function CU(n,t){const e=n[fr],i=e?e.get($n,null):null;i&&i.handleError(t)}function Gh(n,t,e,i,r){for(let l=0;l<e.length;){const a=e[l++],o=e[l++];NU(n.data[a],t[a],i,o,r)}}function Yy(n,t){const e=xt(t,n),i=e[N];!function Dy(n,t){for(let e=t.length;e<n.blueprint.length;e++)t.push(n.blueprint[e])}(i,e);const r=e[He];null!==r&&null===e[Pn]&&(e[Pn]=KF(r,e[fr])),yh(i,e,e[Ce])}function yh(n,t,e){Uc(t);try{const i=n.viewQuery;null!==i&&Sh(1,i,e);const r=n.template;null!==r&&TU(n,t,r,1,e),n.firstCreatePass&&(n.firstCreatePass=!1),n.staticContentQueries&&SU(n,t),n.staticViewQueries&&Sh(2,n.viewQuery,e);const l=n.components;null!==l&&function Ay(n,t){for(let e=0;e<t.length;e++)Yy(n,t[e])}(t,l)}catch(i){throw n.firstCreatePass&&(n.incompleteFirstPass=!0,n.firstCreatePass=!1),i}finally{t[X]&=-5,Tc()}}let xU=(()=>{class n{constructor(){this.all=new Set,this.queue=new Map}create(e,i,r){const l=typeof Zone>"u"?null:Zone.current,a=new dE(e,V=>{this.all.has(V)&&this.queue.set(V,l)},r);let o;this.all.add(a),a.notify();const s=()=>{a.cleanup(),o?.(),this.all.delete(a),this.queue.delete(a)};return o=i?.onDestroy(s),{destroy:s}}flush(){if(0!==this.queue.size)for(const[e,i]of this.queue)this.queue.delete(e),i?i.run(()=>e.run()):e.run()}get isQueueEmpty(){return 0===this.queue.size}}return n.\u0275prov=k({token:n,providedIn:"root",factory:()=>new n}),n})();function Cs(n,t,e){let i=e?n.styles:null,r=e?n.classes:null,l=0;if(null!==t)for(let a=0;a<t.length;a++){const o=t[a];"number"==typeof o?l=o:1==l?r=Kd(r,o):2==l&&(i=Kd(i,o+": "+t[++a]+";"))}e?n.styles=i:n.stylesWithoutHost=i,e?n.classes=r:n.classesWithoutHost=r}function ga(n,t,e,i,r=!1){for(;null!==e;){const l=t[e.index];if(null!==l&&i.push(Me(l)),gt(l)){for(let o=rt;o<l.length;o++){const s=l[o],V=s[N].firstChild;null!==V&&ga(s[N],s,V,i)}l[Mn]!==l[He]&&i.push(l[Mn])}const a=e.type;if(8&a)ga(n,t,e.child,i);else if(32&a){const o=Yc(e,t);let s;for(;s=o();)i.push(s)}else if(16&a){const o=TF(t,e);if(Array.isArray(o))i.push(...o);else{const s=sa(t[xe]);ga(s[N],s,o,i,!0)}}e=r?e.projectionNext:e.next}return i}function xs(n,t,e,i=!0){const r=t[Ai].rendererFactory;r.begin&&r.begin();try{wU(n,t,n.template,e)}catch(a){throw i&&CU(t,a),a}finally{r.end&&r.end(),t[Ai].effectManager?.flush()}}function wU(n,t,e,i){const r=t[X];if(256!=(256&r)){t[Ai].effectManager?.flush(),Uc(t);try{sW(t),function mW(n){return Y.lFrame.bindingIndex=n}(n.bindingStartIndex),null!==e&&TU(n,t,e,2,i);const a=3==(3&r);if(a){const V=n.preOrderCheckHooks;null!==V&&$o(t,V,null)}else{const V=n.preOrderHooks;null!==V&&es(t,V,0,null),Zc(t,0)}if(function Hy(n){for(let t=oF(n);null!==t;t=sF(t)){if(!t[Pm])continue;const e=t[br];for(let i=0;i<e.length;i++){ZE(e[i])}}}(t),JU(t,2),null!==n.contentQueries&&SU(n,t),a){const V=n.contentCheckHooks;null!==V&&$o(t,V)}else{const V=n.contentHooks;null!==V&&es(t,V,1),Zc(t,1)}!function py(n,t){const e=n.hostBindingOpCodes;if(null===e)return;const i=hU(t,zo);try{for(let r=0;r<e.length;r++){const l=e[r];if(l<0)ji(~l);else{const a=l,o=e[++r],s=e[++r];CE(o,a),i.runInContext(s,2,t[a])}}}finally{null===t[zo]&&uU(t,zo),ji(-1)}}(n,t);const o=n.components;null!==o&&YU(t,o,0);const s=n.viewQuery;if(null!==s&&Sh(2,s,i),a){const V=n.viewCheckHooks;null!==V&&$o(t,V)}else{const V=n.viewHooks;null!==V&&es(t,V,2),Zc(t,2)}!0===n.firstUpdatePass&&(n.firstUpdatePass=!1),t[X]&=-73,VW(t)}finally{Tc()}}}function JU(n,t){for(let e=oF(n);null!==e;e=sF(e))for(let i=rt;i<e.length;i++)vU(e[i],t)}function By(n,t,e){vU(xt(t,n),e)}function vU(n,t){if(!function UE(n){return 128==(128&n[X])}(n))return;const e=n[N];if(80&n[X]&&0===t||1024&n[X]||2===t)wU(e,n,e.template,n[Ce]);else if(n[Ll]>0){JU(n,1);const r=n[N].components;null!==r&&YU(n,r,1)}}function YU(n,t,e){for(let i=0;i<t.length;i++)By(n,t[i],e)}class fa{get rootNodes(){const t=this._lView,e=t[N];return ga(e,t,e.firstChild,[])}constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get context(){return this._lView[Ce]}set context(t){this._lView[Ce]=t}get destroyed(){return 256==(256&this._lView[X])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[Se];if(gt(t)){const e=t[8],i=e?e.indexOf(this):-1;i>-1&&(Ac(t,i),as(e,i))}this._attachedToViewContainer=!1}hF(this._lView[N],this._lView)}onDestroy(t){!function cW(n,t){if(256==(256&n[X]))throw new U(911,!1);null===n[Ri]&&(n[Ri]=[]),n[Ri].push(t)}(this._lView,t)}markForCheck(){Ta(this._cdRefInjectingView||this._lView)}detach(){this._lView[X]&=-129}reattach(){this._lView[X]|=128}detectChanges(){xs(this._lView[N],this._lView,this.context)}checkNoChanges(){}attachToViewContainerRef(){if(this._appRef)throw new U(902,!1);this._attachedToViewContainer=!0}detachFromAppRef(){this._appRef=null,function zS(n,t){da(n,t,t[j],2,null,null)}(this._lView[N],this._lView)}attachToAppRef(t){if(this._attachedToViewContainer)throw new U(902,!1);this._appRef=t}}class Py extends fa{constructor(t){super(t),this._view=t}detectChanges(){const t=this._view;xs(t[N],t,t[Ce],!1)}checkNoChanges(){}get context(){return null}}class DU extends Fa{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=le(t);return new Ma(e,this.ngModule)}}function AU(n){const t=[];for(let e in n)n.hasOwnProperty(e)&&t.push({propName:n[e],templateName:e});return t}class Ly{constructor(t,e){this.injector=t,this.parentInjector=e}get(t,e,i){i=Do(i);const r=this.injector.get(t,Fh,i);return r!==Fh||e===Fh?r:this.parentInjector.get(t,e,i)}}class Ma extends $F{get inputs(){const t=this.componentDef,e=t.inputTransforms,i=AU(t.inputs);if(null!==e)for(const r of i)e.hasOwnProperty(r.propName)&&(r.transform=e[r.propName]);return i}get outputs(){return AU(this.componentDef.outputs)}constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=function H0(n){return n.map(z0).join(",")}(t.selectors),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}create(t,e,i,r){let l=(r=r||this.ngModule)instanceof Gn?r:r?.injector;l&&null!==this.componentDef.getStandaloneInjector&&(l=this.componentDef.getStandaloneInjector(l)||l);const a=l?new Ly(t,l):t,o=a.get(Ua,null);if(null===o)throw new U(407,!1);const d={rendererFactory:o,sanitizer:a.get(ty,null),effectManager:a.get(xU,null)},c=o.createRenderer(null,this.componentDef),h=this.componentDef.selectors[0][0]||"div",u=i?function my(n,t,e,i){const l=i.get(iU,!1)||e===Pt.ShadowDom,a=n.selectRootElement(t,l);return function Wy(n){gU(n)}(a),a}(c,i,this.componentDef.encapsulation,a):Rs(c,h,function Qy(n){const t=n.toLowerCase();return"svg"===t?lW:"math"===t?"math":null}(h)),W=this.componentDef.signals?4608:this.componentDef.onPush?576:528,Z=kh(0,null,null,1,0,null,null,null,null,null,null),m=ys(null,Z,null,W,null,null,d,c,a,null,null);let M,S;Uc(m);try{const J=this.componentDef;let de,Ae=null;J.findHostDirectiveDefs?(de=[],Ae=new Map,J.findHostDirectiveDefs(J,de,Ae),de.push(J)):de=[J];const Un=function _y(n,t){const e=n[N],i=_;return n[i]=t,Qr(e,i,2,"#host",null)}(m,u),Tn=function qy(n,t,e,i,r,l,a){const o=r[N];!function $y(n,t,e,i){for(const r of n)t.mergedAttrs=Ql(t.mergedAttrs,r.hostAttrs);null!==t.mergedAttrs&&(Cs(t,t.mergedAttrs,!0),null!==e&&MF(i,e,t))}(i,n,t,a);let s=null;null!==t&&(s=KF(t,r[fr]));const V=l.rendererFactory.createRenderer(t,e);let d=16;e.signals?d=4096:e.onPush&&(d=64);const c=ys(r,ZU(e),null,d,r[n.index],n,l,V,null,null,s);return o.firstCreatePass&&Nh(o,n,i.length-1),Is(r,c),r[n.index]=c}(Un,u,J,de,m,d,c);S=oW(Z,_),u&&function tI(n,t,e,i){if(i)lc(n,e,["ng-version",ny.full]);else{const{attrs:r,classes:l}=function B0(n){const t=[],e=[];let i=1,r=2;for(;i<n.length;){let l=n[i];if("string"==typeof l)2===r?""!==l&&t.push(l,n[++i]):8===r&&e.push(l);else{if(!on(r))break;r=l}i++}return{attrs:t,classes:e}}(t.selectors[0]);r&&lc(n,e,r),l&&l.length>0&&fF(n,e,l.join(" "))}}(c,J,u,i),void 0!==e&&function nI(n,t,e){const i=n.projection=[];for(let r=0;r<t.length;r++){const l=e[r];i.push(null!=l?Array.from(l):null)}}(S,this.ngContentSelectors,e),M=function eI(n,t,e,i,r,l){const a=et(),o=r[N],s=ft(a,r);kU(o,r,a,e,null,i);for(let d=0;d<e.length;d++)lt(zi(r,o,a.directiveStart+d,a),r);bU(o,r,a),s&&lt(s,r);const V=zi(r,o,a.directiveStart+a.componentOffset,a);if(n[Ce]=r[Ce]=V,null!==l)for(const d of l)d(V,t);return gh(o,a,n),V}(Tn,J,de,Ae,m,[iI]),yh(Z,m,null)}finally{Tc()}return new Ky(this.componentType,M,Br(S,m),m,S)}}class Ky extends LG{constructor(t,e,i,r,l){super(),this.location=i,this._rootLView=r,this._tNode=l,this.previousInputValues=null,this.instance=e,this.hostView=this.changeDetectorRef=new Py(r),this.componentType=t}setInput(t,e){const i=this._tNode.inputs;let r;if(null!==i&&(r=i[t])){if(this.previousInputValues??=new Map,this.previousInputValues.has(t)&&Object.is(this.previousInputValues.get(t),e))return;const l=this._rootLView;Gh(l[N],l,r,t,e),this.previousInputValues.set(t,e),Ta(xt(this._tNode.index,l))}}get injector(){return new Ir(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}function iI(){const n=et();qo(g()[N],n)}function B(n){let t=function OU(n){return Object.getPrototypeOf(n.prototype).constructor}(n.type),e=!0;const i=[n];for(;t;){let r;if(Vn(n))r=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new U(903,!1);r=t.\u0275dir}if(r){if(e){i.push(r);const a=n;a.inputs=ws(n.inputs),a.inputTransforms=ws(n.inputTransforms),a.declaredInputs=ws(n.declaredInputs),a.outputs=ws(n.outputs);const o=r.hostBindings;o&&oI(n,o);const s=r.viewQuery,V=r.contentQueries;if(s&&lI(n,s),V&&aI(n,V),Co(n.inputs,r.inputs),Co(n.declaredInputs,r.declaredInputs),Co(n.outputs,r.outputs),null!==r.inputTransforms&&(null===a.inputTransforms&&(a.inputTransforms={}),Co(a.inputTransforms,r.inputTransforms)),Vn(r)&&r.data.animation){const d=n.data;d.animation=(d.animation||[]).concat(r.data.animation)}}const l=r.features;if(l)for(let a=0;a<l.length;a++){const o=l[a];o&&o.ngInherit&&o(n),o===B&&(e=!1)}}t=Object.getPrototypeOf(t)}!function rI(n){let t=0,e=null;for(let i=n.length-1;i>=0;i--){const r=n[i];r.hostVars=t+=r.hostVars,r.hostAttrs=Ql(r.hostAttrs,e=Ql(e,r.hostAttrs))}}(i)}function ws(n){return n===gn?{}:n===ne?[]:n}function lI(n,t){const e=n.viewQuery;n.viewQuery=e?(i,r)=>{t(i,r),e(i,r)}:t}function aI(n,t){const e=n.contentQueries;n.contentQueries=e?(i,r,l)=>{t(i,r,l),e(i,r,l)}:t}function oI(n,t){const e=n.hostBindings;n.hostBindings=e?(i,r)=>{t(i,r),e(i,r)}:t}function HU(n){const t=n.inputConfig,e={};for(const i in t)if(t.hasOwnProperty(i)){const r=t[i];Array.isArray(r)&&r[2]&&(e[i]=r[2])}n.inputTransforms=e}function Js(n){return!!Ih(n)&&(Array.isArray(n)||!(n instanceof Map)&&Symbol.iterator in n)}function Ih(n){return null!==n&&("function"==typeof n||"object"==typeof n)}function In(n,t,e){return n[t]=e}function at(n,t,e){return!Object.is(n[t],e)&&(n[t]=e,!0)}function Je(n,t,e,i){const r=g();return at(r,Sr(),t)&&($(),yn(Ge(),r,n,t,e,i)),Je}function me(n,t,e,i,r,l,a,o){const s=g(),V=$(),d=n+_,c=V.firstCreatePass?function II(n,t,e,i,r,l,a,o,s){const V=t.consts,d=Qr(t,n,4,a||null,mi(V,o));bh(t,e,d,mi(V,s)),qo(t,d);const c=d.tView=kh(2,d,i,r,l,t.directiveRegistry,t.pipeRegistry,null,t.schemas,V,null);return null!==t.queries&&(t.queries.template(t,d),c.queries=t.queries.embeddedTView(d)),d}(d,V,s,t,e,i,r,l,a):V.data[d];Nn(c,!1);const h=rT(V,s,c,n);_o()&&Ws(V,s,h,c),lt(h,s),Is(s,s[d]=EU(h,s,h,c)),Bo(c)&&fh(V,s,c),null!=a&&Mh(s,c,o)}let rT=function lT(n,t,e,i){return Wi(!0),t[j].createComment("")};function Os(n){return function Nr(n,t){return n[t]}(function yE(){return Y.lFrame.contextLView}(),_+n)}function A(n,t,e){const i=g();return at(i,Sr(),t)&&function Yt(n,t,e,i,r,l,a,o){const s=ft(t,e);let d,V=t.inputs;!o&&null!=V&&(d=V[i])?(Gh(n,e,d,i,r),Oi(t)&&function My(n,t){const e=xt(t,n);16&e[X]||(e[X]|=64)}(e,t.index)):3&t.type&&(i=function fy(n){return"class"===n?"className":"for"===n?"htmlFor":"formaction"===n?"formAction":"innerHtml"===n?"innerHTML":"readonly"===n?"readOnly":"tabindex"===n?"tabIndex":n}(i),r=null!=a?a(r,t.value||"",i):r,l.setProperty(s,i,r))}($(),Ge(),i,n,t,i[j],e,!1),A}function Yh(n,t,e,i,r){const a=r?"class":"style";Gh(n,e,t.inputs[a],a,i)}function E(n,t,e,i){const r=g(),l=$(),a=_+n,o=r[j],s=l.firstCreatePass?function JI(n,t,e,i,r,l){const a=t.consts,s=Qr(t,n,2,i,mi(a,r));return bh(t,e,s,mi(a,l)),null!==s.attrs&&Cs(s,s.attrs,!1),null!==s.mergedAttrs&&Cs(s,s.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,s),s}(a,l,r,t,e,i):l.data[a],V=aT(l,r,s,o,t,n);r[a]=V;const d=Bo(s);return Nn(s,!0),MF(o,V,s),32!=(32&s.flags)&&_o()&&Ws(l,r,V,s),0===function fE(){return Y.lFrame.elementDepthCount}()&&lt(V,r),function ME(){Y.lFrame.elementDepthCount++}(),d&&(fh(l,r,s),gh(l,s,r)),null!==i&&Mh(r,s),E}function C(){let n=et();pc()?function Rc(){Y.lFrame.isParent=!1}():(n=n.parent,Nn(n,!1));const t=n;(function bE(n){return Y.skipHydrationRootTNode===n})(t)&&function GE(){Y.skipHydrationRootTNode=null}(),function kE(){Y.lFrame.elementDepthCount--}();const e=$();return e.firstCreatePass&&(qo(e,n),oc(n)&&e.queries.elementEnd(n)),null!=t.classesWithoutHost&&function jE(n){return 0!=(8&n.flags)}(t)&&Yh(e,t,g(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function zE(n){return 0!=(16&n.flags)}(t)&&Yh(e,t,g(),t.stylesWithoutHost,!1),C}function pe(n,t,e,i){return E(n,t,e,i),C(),pe}let aT=(n,t,e,i,r,l)=>(Wi(!0),Rs(i,r,function MW(){return Y.lFrame.currentNamespace}()));function Xs(){return g()}function Sa(n){return!!n&&"function"==typeof n.then}function VT(n){return!!n&&"function"==typeof n.subscribe}function ee(n,t,e,i){const r=g(),l=$(),a=et();return function cT(n,t,e,i,r,l,a){const o=Bo(i),V=n.firstCreatePass&&yU(n),d=t[Ce],c=GU(t);let h=!0;if(3&i.type||a){const R=ft(i,t),W=a?a(R):R,Z=c.length,m=a?S=>a(Me(S[i.index])):i.index;let M=null;if(!a&&o&&(M=function XI(n,t,e,i){const r=n.cleanup;if(null!=r)for(let l=0;l<r.length-1;l+=2){const a=r[l];if(a===e&&r[l+1]===i){const o=t[gr],s=r[l+2];return o.length>s?o[s]:null}"string"==typeof a&&(l+=2)}return null}(n,t,r,i.index)),null!==M)(M.__ngLastListenerFn__||M).__ngNextListenerFn__=l,M.__ngLastListenerFn__=l,h=!1;else{l=uT(i,t,d,l,!1);const S=e.listen(W,r,l);c.push(l,S),V&&V.push(r,m,Z,Z+1)}}else l=uT(i,t,d,l,!1);const u=i.outputs;let p;if(h&&null!==u&&(p=u[r])){const R=p.length;if(R)for(let W=0;W<R;W+=2){const J=t[p[W]][p[W+1]].subscribe(l),de=c.length;c.push(l,J),V&&V.push(r,i.index,de,-(de+1))}}}(l,r,r[j],a,n,t,i),ee}function hT(n,t,e,i){try{return bn(6,t,e),!1!==e(i)}catch(r){return CU(n,r),!1}finally{bn(7,t,e)}}function uT(n,t,e,i,r){return function l(a){if(a===Function)return i;Ta(n.componentOffset>-1?xt(n.index,t):t);let s=hT(t,e,i,a),V=l.__ngNextListenerFn__;for(;V;)s=hT(t,e,V,a)&&s,V=V.__ngNextListenerFn__;return r&&!1===s&&a.preventDefault(),s}}function ae(n=1){return function JE(n){return(Y.lFrame.contextLView=function vE(n,t){for(;n>0;)t=t[Mr],n--;return t}(n,Y.lFrame.contextLView))[Ce]}(n)}function js(n,t){return n<<17|t<<2}function Zi(n){return n>>17&32767}function Ah(n){return 2|n}function qi(n){return(131068&n)>>2}function Oh(n,t){return-131069&n|t<<2}function Xh(n){return 1|n}function fT(n,t,e,i,r){const l=n[e+1],a=null===t;let o=i?Zi(l):qi(l),s=!1;for(;0!==o&&(!1===s||a);){const d=n[o+1];LI(n[o],t)&&(s=!0,n[o+1]=i?Xh(d):Ah(d)),o=i?Zi(d):qi(d)}s&&(n[e+1]=i?Ah(l):Xh(l))}function LI(n,t){return null===n||null==t||(Array.isArray(n)?n[1]:n)===t||!(!Array.isArray(n)||"string"!=typeof t)&&Dr(n,t)>=0}function jh(n,t,e){return dn(n,t,e,!1),jh}function Dt(n,t){return dn(n,t,null,!0),Dt}function dn(n,t,e,i){const r=g(),l=$(),a=function Ln(n){const t=Y.lFrame,e=t.bindingIndex;return t.bindingIndex=t.bindingIndex+n,e}(2);l.firstUpdatePass&&function yT(n,t,e,i){const r=n.data;if(null===r[e+1]){const l=r[pt()],a=function GT(n,t){return t>=n.expandoStartIndex}(n,e);(function wT(n,t){return 0!=(n.flags&(t?8:16))})(l,i)&&null===t&&!a&&(t=!1),t=function rC(n,t,e,i){const r=function Wc(n){const t=Y.lFrame.currentDirectiveIndex;return-1===t?null:n[t]}(n);let l=i?t.residualClasses:t.residualStyles;if(null===r)0===(i?t.classBindings:t.styleBindings)&&(e=Ga(e=zh(null,n,t,e,i),t.attrs,i),l=null);else{const a=t.directiveStylingLast;if(-1===a||n[a]!==r)if(e=zh(r,n,t,e,i),null===l){let s=function lC(n,t,e){const i=e?t.classBindings:t.styleBindings;if(0!==qi(i))return n[Zi(i)]}(n,t,i);void 0!==s&&Array.isArray(s)&&(s=zh(null,n,t,s[1],i),s=Ga(s,t.attrs,i),function aC(n,t,e,i){n[Zi(e?t.classBindings:t.styleBindings)]=i}(n,t,i,s))}else l=function oC(n,t,e){let i;const r=t.directiveEnd;for(let l=1+t.directiveStylingLast;l<r;l++)i=Ga(i,n[l].hostAttrs,e);return Ga(i,t.attrs,e)}(n,t,i)}return void 0!==l&&(i?t.residualClasses=l:t.residualStyles=l),e}(r,l,t,i),function PI(n,t,e,i,r,l){let a=l?t.classBindings:t.styleBindings,o=Zi(a),s=qi(a);n[i]=e;let d,V=!1;if(Array.isArray(e)?(d=e[1],(null===d||Dr(e,d)>0)&&(V=!0)):d=e,r)if(0!==s){const h=Zi(n[o+1]);n[i+1]=js(h,o),0!==h&&(n[h+1]=Oh(n[h+1],i)),n[o+1]=function HI(n,t){return 131071&n|t<<17}(n[o+1],i)}else n[i+1]=js(o,0),0!==o&&(n[o+1]=Oh(n[o+1],i)),o=i;else n[i+1]=js(s,0),0===o?o=i:n[s+1]=Oh(n[s+1],i),s=i;V&&(n[i+1]=Ah(n[i+1])),fT(n,d,i,!0),fT(n,d,i,!1),function QI(n,t,e,i,r){const l=r?n.residualClasses:n.residualStyles;null!=l&&"string"==typeof t&&Dr(l,t)>=0&&(e[i+1]=Xh(e[i+1]))}(t,d,n,i,l),a=js(o,s),l?t.classBindings=a:t.styleBindings=a}(r,l,t,e,a,i)}}(l,n,a,i),t!==z&&at(r,a,t)&&function CT(n,t,e,i,r,l,a,o){if(!(3&t.type))return;const s=n.data,V=s[o+1],d=function BI(n){return 1==(1&n)}(V)?xT(s,t,e,r,qi(V),a):void 0;zs(d)||(zs(l)||function zI(n){return 2==(2&n)}(V)&&(l=xT(s,null,e,r,o,a)),function eG(n,t,e,i,r){if(t)r?n.addClass(e,i):n.removeClass(e,i);else{let l=-1===i.indexOf("-")?void 0:Fi.DashCase;null==r?n.removeStyle(e,i,l):("string"==typeof r&&r.endsWith("!important")&&(r=r.slice(0,-10),l|=Fi.Important),n.setStyle(e,i,r,l))}}(i,a,Ko(pt(),e),r,l))}(l,l.data[pt()],r,r[j],n,r[a+1]=function cC(n,t){return null==n||""===n||("string"==typeof t?n+=t:"object"==typeof n&&(n=ze(Jt(n)))),n}(t,e),i,a)}function zh(n,t,e,i,r){let l=null;const a=e.directiveEnd;let o=e.directiveStylingLast;for(-1===o?o=e.directiveStart:o++;o<a&&(l=t[o],i=Ga(i,l.hostAttrs,r),l!==n);)o++;return null!==n&&(e.directiveStylingLast=o),i}function Ga(n,t,e){const i=e?1:2;let r=-1;if(null!==t)for(let l=0;l<t.length;l++){const a=t[l];"number"==typeof a?r=a:r===i&&(Array.isArray(n)||(n=void 0===n?[]:["",n]),wt(n,a,!!e||t[++l]))}return void 0===n?null:n}function xT(n,t,e,i,r,l){const a=null===t;let o;for(;r>0;){const s=n[r],V=Array.isArray(s),d=V?s[1]:s,c=null===d;let h=e[r+1];h===z&&(h=c?ne:void 0);let u=c?Sc(h,i):d===i?h:void 0;if(V&&!zs(u)&&(u=Sc(s,i)),zs(u)&&(o=u,a))return o;const p=n[r+1];r=a?Zi(p):qi(p)}if(null!==t){let s=l?t.residualClasses:t.residualStyles;null!=s&&(o=Sc(s,i))}return o}function zs(n){return void 0!==n}function ke(n,t=""){const e=g(),i=$(),r=n+_,l=i.firstCreatePass?Qr(i,r,1,t,null):i.data[r],a=JT(i,e,l,t,n);e[r]=a,_o()&&Ws(i,e,a,l),Nn(l,!1)}let JT=(n,t,e,i,r)=>(Wi(!0),function ps(n,t){return n.createText(t)}(t[j],i));function _t(n){return ot("",n,""),_t}function ot(n,t,e){const i=g(),r=function Kr(n,t,e,i){return at(n,Sr(),e)?t+O(e)+i:z}(i,n,t,e);return r!==z&&function ti(n,t,e){const i=Ko(t,n);!function dF(n,t,e){n.setValue(t,e)}(n[j],i,e)}(i,pt(),r),ot}const sl="en-US";let iZ=sl;class Vl{}class SZ{}class _h extends Vl{constructor(t,e,i){super(),this._parent=e,this._bootstrapComponents=[],this.destroyCbs=[],this.componentFactoryResolver=new DU(this);const r=yt(t);this._bootstrapComponents=ei(r.bootstrap),this._r3Injector=UU(t,e,[{provide:Vl,useValue:this},{provide:Fa,useValue:this.componentFactoryResolver},...i],ze(t),new Set(["environment"])),this._r3Injector.resolveInjectorInitializers(),this.instance=this._r3Injector.get(t)}get injector(){return this._r3Injector}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class qh extends SZ{constructor(t){super(),this.moduleType=t}create(t){return new _h(this.moduleType,t,[])}}class GZ extends Vl{constructor(t){super(),this.componentFactoryResolver=new DU(this),this.instance=null;const e=new rh([...t.providers,{provide:Vl,useValue:this},{provide:Fa,useValue:this.componentFactoryResolver}],t.parent||Ms(),t.debugName,new Set(["environment"]));this.injector=e,t.runEnvironmentInitializers&&e.resolveInjectorInitializers()}destroy(){this.injector.destroy()}onDestroy(t){this.injector.onDestroy(t)}}function $h(n,t,e=null){return new GZ({providers:n,parent:t,debugName:e,runEnvironmentInitializers:!0}).injector}let xx=(()=>{class n{constructor(e){this._injector=e,this.cachedInjectors=new Map}getOrCreateStandaloneInjector(e){if(!e.standalone)return null;if(!this.cachedInjectors.has(e)){const i=XF(0,e.type),r=i.length>0?$h([i],this._injector,`Standalone[${e.type.name}]`):null;this.cachedInjectors.set(e,r)}return this.cachedInjectors.get(e)}ngOnDestroy(){try{for(const e of this.cachedInjectors.values())null!==e&&e.destroy()}finally{this.cachedInjectors.clear()}}}return n.\u0275prov=k({token:n,providedIn:"environment",factory:()=>new n(T(Gn))}),n})();function yZ(n){n.getStandaloneInjector=t=>t.get(xx).getOrCreateStandaloneInjector(n)}function dl(n,t,e,i){return function DZ(n,t,e,i,r,l){const a=t+e;return at(n,a,r)?In(n,a+1,l?i.call(l,r):i(r)):Ja(n,a+1)}(g(),ut(),n,t,e,i)}function tu(n,t,e,i,r){return function AZ(n,t,e,i,r,l,a){const o=t+e;return function Ki(n,t,e,i){const r=at(n,t,e);return at(n,t+1,i)||r}(n,o,r,l)?In(n,o+2,a?i.call(a,r,l):i(r,l)):Ja(n,o+2)}(g(),ut(),n,t,e,i,r)}function Ja(n,t){const e=n[t];return e===z?void 0:e}function nu(n){return t=>{setTimeout(n,void 0,t)}}const oe=class iw extends he{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,i){let r=t,l=e||(()=>null),a=i;if(t&&"object"==typeof t){const s=t;r=s.next?.bind(s),l=s.error?.bind(s),a=s.complete?.bind(s)}this.__isAsync&&(l=nu(l),r&&(r=nu(r)),a&&(a=nu(a)));const o=super.subscribe({next:r,error:l,complete:a});return t instanceof $e&&t.add(o),o}};function rw(){return this._results[Symbol.iterator]()}class cl{get changes(){return this._changes||(this._changes=new oe)}constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=cl.prototype;e[Symbol.iterator]||(e[Symbol.iterator]=rw)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const i=this;i.dirty=!1;const r=function Lt(n){return n.flat(Number.POSITIVE_INFINITY)}(t);(this._changesDetected=!function iS(n,t,e){if(n.length!==t.length)return!1;for(let i=0;i<n.length;i++){let r=n[i],l=t[i];if(e&&(r=e(r),l=e(l)),l!==r)return!1}return!0}(i._results,r,e))&&(i._results=r,i.length=r.length,i.last=r[this.length-1],i.first=r[0])}notifyOnChanges(){this._changes&&(this._changesDetected||!this._emitDistinctChangesOnly)&&this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}let ni=(()=>{class n{}return n.__NG_ELEMENT_ID__=ow,n})();const lw=ni,aw=class extends lw{constructor(t,e,i){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=i}get ssrId(){return this._declarationTContainer.tView?.ssrId||null}createEmbeddedView(t,e){return this.createEmbeddedViewImpl(t,e,null)}createEmbeddedViewImpl(t,e,i){const a=this._declarationTContainer.tView,o=ys(this._declarationLView,a,t,4096&this._declarationLView[X]?4096:16,null,a.declTNode,null,null,null,e||null,i||null);o[_l]=this._declarationLView[this._declarationTContainer.index];const V=this._declarationLView[fn];return null!==V&&(o[fn]=V.createEmbeddedView(a)),yh(a,o,t),new fa(o)}};function ow(){return Ls(et(),g())}function Ls(n,t){return 4&n.type?new aw(t,n,Br(n,t)):null}let qt=(()=>{class n{}return n.__NG_ELEMENT_ID__=pw,n})();function pw(){return LZ(et(),g())}const Rw=qt,PZ=class extends Rw{constructor(t,e,i){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=i}get element(){return Br(this._hostTNode,this._hostLView)}get injector(){return new Ir(this._hostTNode,this._hostLView)}get parentInjector(){const t=kc(this._hostTNode,this._hostLView);if(EW(t)){const e=ns(t,this._hostLView),i=ts(t);return new Ir(e[N].data[i+8],e)}return new Ir(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=QZ(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-rt}createEmbeddedView(t,e,i){let r,l;"number"==typeof i?r=i:null!=i&&(r=i.index,l=i.injector);const o=t.createEmbeddedViewImpl(e||{},l,null);return this.insertImpl(o,r,false),o}createComponent(t,e,i,r,l){const a=t&&!function na(n){return"function"==typeof n}(t);let o;if(a)o=e;else{const R=e||{};o=R.index,i=R.injector,r=R.projectableNodes,l=R.environmentInjector||R.ngModuleRef}const s=a?t:new Ma(le(t)),V=i||this.parentInjector;if(!l&&null==s.ngModule){const W=(a?V:this.parentInjector).get(Gn,null);W&&(l=W)}le(s.componentType??{});const u=s.create(V,r,null,l);return this.insertImpl(u.hostView,o,false),u}insert(t,e){return this.insertImpl(t,e,!1)}insertImpl(t,e,i){const r=t._lView,l=r[N];if(function TE(n){return gt(n[Se])}(r)){const s=this.indexOf(t);if(-1!==s)this.detach(s);else{const V=r[Se],d=new PZ(V,V[it],V[Se]);d.detach(d.indexOf(t))}}const a=this._adjustIndex(e),o=this._lContainer;if(function BS(n,t,e,i){const r=rt+i,l=e.length;i>0&&(e[r-1][sn]=t),i<l-rt?(t[sn]=e[r],AW(e,rt+i,t)):(e.push(t),t[sn]=null),t[Se]=e;const a=t[_l];null!==a&&e!==a&&function PS(n,t){const e=n[br];t[xe]!==t[Se][Se][xe]&&(n[Pm]=!0),null===e?n[br]=[t]:e.push(t)}(a,t);const o=t[fn];null!==o&&o.insertView(n),t[X]|=128}(l,r,o,a),!i){const s=zc(a,o),V=r[j],d=ms(V,o[Mn]);null!==d&&function jS(n,t,e,i,r,l){i[He]=r,i[it]=t,da(n,i,e,1,r,l)}(l,o[it],V,r,d,s)}return t.attachToViewContainerRef(),AW(ru(o),a,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=QZ(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),i=Ac(this._lContainer,e);i&&(as(ru(this._lContainer),e),hF(i[N],i))}detach(t){const e=this._adjustIndex(t,-1),i=Ac(this._lContainer,e);return i&&null!=as(ru(this._lContainer),e)?new fa(i):null}_adjustIndex(t,e=0){return t??this.length+e}};function QZ(n){return n[8]}function ru(n){return n[8]||(n[8]=[])}function LZ(n,t){let e;const i=t[n.index];return gt(i)?e=i:(e=EU(i,t,null,n),t[n.index]=e,Is(t,e)),KZ(e,t,n,i),new PZ(e,n,t)}let KZ=function _Z(n,t,e,i){if(n[Mn])return;let r;r=8&e.type?Me(i):function mw(n,t){const e=n[j],i=e.createComment(""),r=ft(t,n);return Bi(e,ms(e,r),i,function _S(n,t){return n.nextSibling(t)}(e,r),!1),i}(t,e),n[Mn]=r};class lu{constructor(t){this.queryList=t,this.matches=null}clone(){return new lu(this.queryList)}setDirty(){this.queryList.setDirty()}}class au{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const i=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let l=0;l<i;l++){const a=e.getByIndex(l);r.push(this.queries[a.indexInDeclarationView].clone())}return new au(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==ng(t,e).matches&&this.queries[e].setDirty()}}class qZ{constructor(t,e,i=null){this.predicate=t,this.flags=e,this.read=i}}class ou{constructor(t=[]){this.queries=t}elementStart(t,e){for(let i=0;i<this.queries.length;i++)this.queries[i].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let i=0;i<this.length;i++){const r=null!==e?e.length:0,l=this.getByIndex(i).embeddedTView(t,r);l&&(l.indexInDeclarationView=i,null!==e?e.push(l):e=[l])}return null!==e?new ou(e):null}template(t,e){for(let i=0;i<this.queries.length;i++)this.queries[i].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class su{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new su(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let i=t.parent;for(;null!==i&&8&i.type&&i.index!==e;)i=i.parent;return e===(null!==i?i.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const i=this.metadata.predicate;if(Array.isArray(i))for(let r=0;r<i.length;r++){const l=i[r];this.matchTNodeWithReadOption(t,e,Uw(e,l)),this.matchTNodeWithReadOption(t,e,ls(e,t,l,!1,!1))}else i===ni?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,ls(e,t,i,!1,!1))}matchTNodeWithReadOption(t,e,i){if(null!==i){const r=this.metadata.read;if(null!==r)if(r===Ue||r===qt||r===ni&&4&e.type)this.addMatch(e.index,-2);else{const l=ls(e,t,r,!1,!1);null!==l&&this.addMatch(e.index,l)}else this.addMatch(e.index,i)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function Uw(n,t){const e=n.localNames;if(null!==e)for(let i=0;i<e.length;i+=2)if(e[i]===t)return e[i+1];return null}function Zw(n,t,e,i){return-1===e?function Tw(n,t){return 11&n.type?Br(n,t):4&n.type?Ls(n,t):null}(t,n):-2===e?function gw(n,t,e){return e===Ue?Br(t,n):e===ni?Ls(t,n):e===qt?LZ(t,n):void 0}(n,t,i):zi(n,n[N],e,t)}function $Z(n,t,e,i){const r=t[fn].queries[i];if(null===r.matches){const l=n.data,a=e.matches,o=[];for(let s=0;s<a.length;s+=2){const V=a[s];o.push(V<0?null:Zw(t,l[V],a[s+1],e.metadata.read))}r.matches=o}return r.matches}function Vu(n,t,e,i){const r=n.queries.getByIndex(e),l=r.matches;if(null!==l){const a=$Z(n,t,r,e);for(let o=0;o<l.length;o+=2){const s=l[o];if(s>0)i.push(a[o/2]);else{const V=l[o+1],d=t[-s];for(let c=rt;c<d.length;c++){const h=d[c];h[_l]===h[Se]&&Vu(h[N],h,V,i)}if(null!==d[br]){const c=d[br];for(let h=0;h<c.length;h++){const u=c[h];Vu(u[N],u,V,i)}}}}}return i}function st(n){const t=g(),e=$(),i=FW();Fc(i+1);const r=ng(e,i);if(n.dirty&&function FE(n){return 4==(4&n[X])}(t)===(2==(2&r.metadata.flags))){if(null===r.matches)n.reset([]);else{const l=r.crossesNgTemplate?Vu(e,t,i,[]):$Z(e,t,r,i);n.reset(l,$G),n.notifyOnChanges()}return!0}return!1}function Vt(){return function fw(n,t){return n[fn].queries[t].queryList}(g(),FW())}function eg(n,t,e){const i=new cl(4==(4&e));(function Ty(n,t,e,i){const r=GU(t);r.push(e),n.firstCreatePass&&yU(n).push(i,r.length-1)})(n,t,i,i.destroy),null===t[fn]&&(t[fn]=new au),t[fn].queries.push(new lu(i))}function tg(n,t,e){null===n.queries&&(n.queries=new ou),n.queries.track(new su(t,e))}function ng(n,t){return n.queries.getByIndex(t)}function Ks(n,t){return Ls(n,t)}const Ru=new f("Application Initializer");let mu=(()=>{class n{constructor(){this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,i)=>{this.resolve=e,this.reject=i}),this.appInits=b(Ru,{optional:!0})??[]}runInitializers(){if(this.initialized)return;const e=[];for(const r of this.appInits){const l=r();if(Sa(l))e.push(l);else if(VT(l)){const a=new Promise((o,s)=>{l.subscribe({complete:o,error:s})});e.push(a)}}const i=()=>{this.done=!0,this.resolve()};Promise.all(e).then(()=>{i()}).catch(r=>{this.reject(r)}),0===e.length&&i(),this.initialized=!0}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Ug=(()=>{class n{log(e){console.log(e)}warn(e){console.warn(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();const wn=new f("LocaleId",{providedIn:"root",factory:()=>b(wn,Q.Optional|Q.SkipSelf)||function Hw(){return typeof $localize<"u"&&$localize.locale||sl}()});let qs=(()=>{class n{constructor(){this.taskId=0,this.pendingTasks=new Set,this.hasPendingTasks=new St(!1)}add(){this.hasPendingTasks.next(!0);const e=this.taskId++;return this.pendingTasks.add(e),e}remove(e){this.pendingTasks.delete(e),0===this.pendingTasks.size&&this.hasPendingTasks.next(!1)}ngOnDestroy(){this.pendingTasks.clear(),this.hasPendingTasks.next(!1)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class Qw{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}let Tg=(()=>{class n{compileModuleSync(e){return new qh(e)}compileModuleAsync(e){return Promise.resolve(this.compileModuleSync(e))}compileModuleAndAllComponentsSync(e){const i=this.compileModuleSync(e),l=ei(yt(e).declarations).reduce((a,o)=>{const s=le(o);return s&&a.push(new Ma(s)),a},[]);return new Qw(i,l)}compileModuleAndAllComponentsAsync(e){return Promise.resolve(this.compileModuleAndAllComponentsSync(e))}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function fg(...n){}class K{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:i=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new oe(!1),this.onMicrotaskEmpty=new oe(!1),this.onStable=new oe(!1),this.onError=new oe(!1),typeof Zone>"u")throw new U(908,!1);Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!i&&e,r.shouldCoalesceRunChangeDetection=i,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function _w(){const n="function"==typeof Fe.requestAnimationFrame;let t=Fe[n?"requestAnimationFrame":"setTimeout"],e=Fe[n?"cancelAnimationFrame":"clearTimeout"];if(typeof Zone<"u"&&t&&e){const i=t[Zone.__symbol__("OriginalDelegate")];i&&(t=i);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function eJ(n){const t=()=>{!function $w(n){n.isCheckStableRunning||-1!==n.lastRequestAnimationFrameId||(n.lastRequestAnimationFrameId=n.nativeRequestAnimationFrame.call(Fe,()=>{n.fakeTopEventTask||(n.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{n.lastRequestAnimationFrameId=-1,Fu(n),n.isCheckStableRunning=!0,Wu(n),n.isCheckStableRunning=!1},void 0,()=>{},()=>{})),n.fakeTopEventTask.invoke()}),Fu(n))}(n)};n._inner=n._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(e,i,r,l,a,o)=>{try{return Mg(n),e.invokeTask(r,l,a,o)}finally{(n.shouldCoalesceEventChangeDetection&&"eventTask"===l.type||n.shouldCoalesceRunChangeDetection)&&t(),kg(n)}},onInvoke:(e,i,r,l,a,o,s)=>{try{return Mg(n),e.invoke(r,l,a,o,s)}finally{n.shouldCoalesceRunChangeDetection&&t(),kg(n)}},onHasTask:(e,i,r,l)=>{e.hasTask(r,l),i===r&&("microTask"==l.change?(n._hasPendingMicrotasks=l.microTask,Fu(n),Wu(n)):"macroTask"==l.change&&(n.hasPendingMacrotasks=l.macroTask))},onHandleError:(e,i,r,l)=>(e.handleError(r,l),n.runOutsideAngular(()=>n.onError.emit(l)),!1)})}(r)}static isInAngularZone(){return typeof Zone<"u"&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!K.isInAngularZone())throw new U(909,!1)}static assertNotInAngularZone(){if(K.isInAngularZone())throw new U(909,!1)}run(t,e,i){return this._inner.run(t,e,i)}runTask(t,e,i,r){const l=this._inner,a=l.scheduleEventTask("NgZoneEvent: "+r,t,qw,fg,fg);try{return l.runTask(a,e,i)}finally{l.cancelTask(a)}}runGuarded(t,e,i){return this._inner.runGuarded(t,e,i)}runOutsideAngular(t){return this._outer.run(t)}}const qw={};function Wu(n){if(0==n._nesting&&!n.hasPendingMicrotasks&&!n.isStable)try{n._nesting++,n.onMicrotaskEmpty.emit(null)}finally{if(n._nesting--,!n.hasPendingMicrotasks)try{n.runOutsideAngular(()=>n.onStable.emit(null))}finally{n.isStable=!0}}}function Fu(n){n.hasPendingMicrotasks=!!(n._hasPendingMicrotasks||(n.shouldCoalesceEventChangeDetection||n.shouldCoalesceRunChangeDetection)&&-1!==n.lastRequestAnimationFrameId)}function Mg(n){n._nesting++,n.isStable&&(n.isStable=!1,n.onUnstable.emit(null))}function kg(n){n._nesting--,Wu(n)}class tJ{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new oe,this.onMicrotaskEmpty=new oe,this.onStable=new oe,this.onError=new oe}run(t,e,i){return t.apply(e,i)}runGuarded(t,e,i){return t.apply(e,i)}runOutsideAngular(t){return t()}runTask(t,e,i,r){return t.apply(e,i)}}const bg=new f("",{providedIn:"root",factory:Ng});function Ng(){const n=b(K);let t=!0;return zl(new fe(r=>{t=n.isStable&&!n.hasPendingMacrotasks&&!n.hasPendingMicrotasks,n.runOutsideAngular(()=>{r.next(t),r.complete()})}),new fe(r=>{let l;n.runOutsideAngular(()=>{l=n.onStable.subscribe(()=>{K.assertNotInAngularZone(),queueMicrotask(()=>{!t&&!n.hasPendingMacrotasks&&!n.hasPendingMicrotasks&&(t=!0,r.next(!0))})})});const a=n.onUnstable.subscribe(()=>{K.assertInAngularZone(),t&&(t=!1,n.runOutsideAngular(()=>{r.next(!1)}))});return()=>{l.unsubscribe(),a.unsubscribe()}}).pipe(Qd()))}const Eg=new f(""),$s=new f("");let Zu,Uu=(()=>{class n{constructor(e,i,r){this._ngZone=e,this.registry=i,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,Zu||(function nJ(n){Zu=n}(r),r.addToWindow(i)),this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone=typeof Zone>"u"?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{K.assertNotInAngularZone(),queueMicrotask(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())queueMicrotask(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(i=>!i.updateCb||!i.updateCb(e)||(clearTimeout(i.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,i,r){let l=-1;i&&i>0&&(l=setTimeout(()=>{this._callbacks=this._callbacks.filter(a=>a.timeoutId!==l),e(this._didWork,this.getPendingTasks())},i)),this._callbacks.push({doneCb:e,timeoutId:l,updateCb:r})}whenStable(e,i,r){if(r&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,i,r),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}registerApplication(e){this.registry.registerApplication(e,this)}unregisterApplication(e){this.registry.unregisterApplication(e)}findProviders(e,i,r){return[]}}return n.\u0275fac=function(e){return new(e||n)(T(K),T(Tu),T($s))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})(),Tu=(()=>{class n{constructor(){this._applications=new Map}registerApplication(e,i){this._applications.set(e,i)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,i=!0){return Zu?.findTestabilityInTree(this,e,i)??null}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})(),fi=null;const Sg=new f("AllowMultipleToken"),gu=new f("PlatformDestroyListeners"),fu=new f("appBootstrapListener");class yg{constructor(t,e){this.name=t,this.token=e}}function Cg(n,t,e=[]){const i=`Platform: ${t}`,r=new f(i);return(l=[])=>{let a=Mu();if(!a||a.injector.get(Sg,!1)){const o=[...e,...l,{provide:r,useValue:!0}];n?n(o):function lJ(n){if(fi&&!fi.get(Sg,!1))throw new U(400,!1);(function Gg(){!function sE(n){$m=n}(()=>{throw new U(600,!1)})})(),fi=n;const t=n.get(wg);(function Ig(n){n.get(PF,null)?.forEach(e=>e())})(n)}(function xg(n=[],t){return vt.create({name:t,providers:[{provide:nh,useValue:"platform"},{provide:gu,useValue:new Set([()=>fi=null])},...n]})}(o,i))}return function oJ(n){const t=Mu();if(!t)throw new U(401,!1);return t}()}}function Mu(){return fi?.get(wg)??null}let wg=(()=>{class n{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,i){const r=function sJ(n="zone.js",t){return"noop"===n?new tJ:"zone.js"===n?new K(t):n}(i?.ngZone,function Jg(n){return{enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:n?.eventCoalescing??!1,shouldCoalesceRunChangeDetection:n?.runCoalescing??!1}}({eventCoalescing:i?.ngZoneEventCoalescing,runCoalescing:i?.ngZoneRunCoalescing}));return r.run(()=>{const l=function Cx(n,t,e){return new _h(n,t,e)}(e.moduleType,this.injector,function Og(n){return[{provide:K,useFactory:n},{provide:pa,multi:!0,useFactory:()=>{const t=b(dJ,{optional:!0});return()=>t.initialize()}},{provide:Ag,useFactory:VJ},{provide:bg,useFactory:Ng}]}(()=>r)),a=l.injector.get($n,null);return r.runOutsideAngular(()=>{const o=r.onError.subscribe({next:s=>{a.handleError(s)}});l.onDestroy(()=>{eV(this._modules,l),o.unsubscribe()})}),function vg(n,t,e){try{const i=e();return Sa(i)?i.catch(r=>{throw t.runOutsideAngular(()=>n.handleError(r)),r}):i}catch(i){throw t.runOutsideAngular(()=>n.handleError(i)),i}}(a,r,()=>{const o=l.injector.get(mu);return o.runInitializers(),o.donePromise.then(()=>(function rZ(n){Bt(n,"Expected localeId to be defined"),"string"==typeof n&&(iZ=n.toLowerCase().replace(/_/g,"-"))}(l.injector.get(wn,sl)||sl),this._moduleDoBootstrap(l),l))})})}bootstrapModule(e,i=[]){const r=Yg({},i);return function iJ(n,t,e){const i=new qh(e);return Promise.resolve(i)}(0,0,e).then(l=>this.bootstrapModuleFactory(l,r))}_moduleDoBootstrap(e){const i=e.injector.get(Mi);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(r=>i.bootstrap(r));else{if(!e.instance.ngDoBootstrap)throw new U(-403,!1);e.instance.ngDoBootstrap(i)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new U(404,!1);this._modules.slice().forEach(i=>i.destroy()),this._destroyListeners.forEach(i=>i());const e=this._injector.get(gu,null);e&&(e.forEach(i=>i()),e.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}}return n.\u0275fac=function(e){return new(e||n)(T(vt))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();function Yg(n,t){return Array.isArray(t)?t.reduce(Yg,n):{...n,...t}}let Mi=(()=>{class n{constructor(){this._bootstrapListeners=[],this._runningTick=!1,this._destroyed=!1,this._destroyListeners=[],this._views=[],this.internalErrorHandler=b(Ag),this.zoneIsStable=b(bg),this.componentTypes=[],this.components=[],this.isStable=b(qs).hasPendingTasks.pipe(Ht(e=>e?x(!1):this.zoneIsStable),fm(),Qd()),this._injector=b(Gn)}get destroyed(){return this._destroyed}get injector(){return this._injector}bootstrap(e,i){const r=e instanceof $F;if(!this._injector.get(mu).done)throw!r&&function Zr(n){const t=le(n)||nt(n)||Zt(n);return null!==t&&t.standalone}(e),new U(405,!1);let a;a=r?e:this._injector.get(Fa).resolveComponentFactory(e),this.componentTypes.push(a.componentType);const o=function rJ(n){return n.isBoundToModule}(a)?void 0:this._injector.get(Vl),V=a.create(vt.NULL,[],i||a.selector,o),d=V.location.nativeElement,c=V.injector.get(Eg,null);return c?.registerApplication(d),V.onDestroy(()=>{this.detachView(V.hostView),eV(this.components,V),c?.unregisterApplication(d)}),this._loadComponent(V),V}tick(){if(this._runningTick)throw new U(101,!1);try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this.internalErrorHandler(e)}finally{this._runningTick=!1}}attachView(e){const i=e;this._views.push(i),i.attachToAppRef(this)}detachView(e){const i=e;eV(this._views,i),i.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e);const i=this._injector.get(fu,[]);i.push(...this._bootstrapListeners),i.forEach(r=>r(e))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(e=>e()),this._views.slice().forEach(e=>e.destroy())}finally{this._destroyed=!0,this._views=[],this._bootstrapListeners=[],this._destroyListeners=[]}}onDestroy(e){return this._destroyListeners.push(e),()=>eV(this._destroyListeners,e)}destroy(){if(this._destroyed)throw new U(406,!1);const e=this._injector;e.destroy&&!e.destroyed&&e.destroy()}get viewCount(){return this._views.length}warnIfDestroyed(){}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function eV(n,t){const e=n.indexOf(t);e>-1&&n.splice(e,1)}const Ag=new f("",{providedIn:"root",factory:()=>b($n).handleError.bind(void 0)});function VJ(){const n=b(K),t=b($n);return e=>n.runOutsideAngular(()=>t.handleError(e))}let dJ=(()=>{class n{constructor(){this.zone=b(K),this.applicationRef=b(Mi)}initialize(){this._onMicrotaskEmptySubscription||(this._onMicrotaskEmptySubscription=this.zone.onMicrotaskEmpty.subscribe({next:()=>{this.zone.run(()=>{this.applicationRef.tick()})}}))}ngOnDestroy(){this._onMicrotaskEmptySubscription?.unsubscribe()}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();let Jn=(()=>{class n{}return n.__NG_ELEMENT_ID__=hJ,n})();function hJ(n){return function uJ(n,t,e){if(Oi(n)&&!e){const i=xt(n.index,t);return new fa(i,i)}return 47&n.type?new fa(t[xe],t):null}(et(),g(),16==(16&n))}class Hg{constructor(){}supports(t){return Js(t)}create(t){return new UJ(t)}}const FJ=(n,t)=>t;class UJ{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||FJ}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,i=this._removalsHead,r=0,l=null;for(;e||i;){const a=!i||e&&e.currentIndex<Pg(i,r,l)?e:i,o=Pg(a,r,l),s=a.currentIndex;if(a===i)r--,i=i._nextRemoved;else if(e=e._next,null==a.previousIndex)r++;else{l||(l=[]);const V=o-r,d=s-r;if(V!=d){for(let h=0;h<V;h++){const u=h<l.length?l[h]:l[h]=0,p=u+h;d<=p&&p<V&&(l[h]=u+1)}l[a.previousIndex]=d-V}}o!==s&&t(a,o,s)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!Js(t))throw new U(900,!1);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let r,l,a,e=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let o=0;o<this.length;o++)l=t[o],a=this._trackByFn(o,l),null!==e&&Object.is(e.trackById,a)?(i&&(e=this._verifyReinsertion(e,l,a,o)),Object.is(e.item,l)||this._addIdentityChange(e,l)):(e=this._mismatch(e,l,a,o),i=!0),e=e._next}else r=0,function pI(n,t){if(Array.isArray(n))for(let e=0;e<n.length;e++)t(n[e]);else{const e=n[Symbol.iterator]();let i;for(;!(i=e.next()).done;)t(i.value)}}(t,o=>{a=this._trackByFn(r,o),null!==e&&Object.is(e.trackById,a)?(i&&(e=this._verifyReinsertion(e,o,a,r)),Object.is(e.item,o)||this._addIdentityChange(e,o)):(e=this._mismatch(e,o,a,r),i=!0),e=e._next,r++}),this.length=r;return this._truncate(e),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,i,r){let l;return null===t?l=this._itTail:(l=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(i,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,l,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(i,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,l,r)):t=this._addAfter(new TJ(e,i),l,r),t}_verifyReinsertion(t,e,i,r){let l=null===this._unlinkedRecords?null:this._unlinkedRecords.get(i,null);return null!==l?t=this._reinsertAfter(l,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,i){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,l=t._nextRemoved;return null===r?this._removalsHead=l:r._nextRemoved=l,null===l?this._removalsTail=r:l._prevRemoved=r,this._insertAfter(t,e,i),this._addToMoves(t,i),t}_moveAfter(t,e,i){return this._unlink(t),this._insertAfter(t,e,i),this._addToMoves(t,i),t}_addAfter(t,e,i){return this._insertAfter(t,e,i),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,i){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new Bg),this._linkedRecords.put(t),t.currentIndex=i,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,i=t._next;return null===e?this._itHead=i:e._next=i,null===i?this._itTail=e:i._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Bg),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class TJ{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class ZJ{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let i;for(i=this._head;null!==i;i=i._nextDup)if((null===e||e<=i.currentIndex)&&Object.is(i.trackById,t))return i;return null}remove(t){const e=t._prevDup,i=t._nextDup;return null===e?this._head=i:e._nextDup=i,null===i?this._tail=e:i._prevDup=e,null===this._head}}class Bg{constructor(){this.map=new Map}put(t){const e=t.trackById;let i=this.map.get(e);i||(i=new ZJ,this.map.set(e,i)),i.add(t)}get(t,e){const r=this.map.get(t);return r?r.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Pg(n,t,e){const i=n.previousIndex;if(null===i)return i;let r=0;return e&&i<e.length&&(r=e[i]),i+t+r}class Qg{constructor(){}supports(t){return t instanceof Map||Ih(t)}create(){return new gJ}}class gJ{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||Ih(t)))throw new U(900,!1)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(i,r)=>{if(e&&e.key===r)this._maybeAddToChanges(e,i),this._appendAfter=e,e=e._next;else{const l=this._getOrCreateRecordForKey(r,i);e=this._insertBeforeOrAppend(e,l)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let i=e;null!==i;i=i._nextRemoved)i===this._mapHead&&(this._mapHead=null),this._records.delete(i.key),i._nextRemoved=i._next,i.previousValue=i.currentValue,i.currentValue=null,i._prev=null,i._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const i=t._prev;return e._next=t,e._prev=i,t._prev=e,i&&(i._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const r=this._records.get(t);this._maybeAddToChanges(r,e);const l=r._prev,a=r._next;return l&&(l._next=a),a&&(a._prev=l),r._next=null,r._prev=null,r}const i=new fJ(t);return this._records.set(t,i),i.currentValue=e,this._addToAdditions(i),i}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(i=>e(t[i],i))}}class fJ{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Lg(){return new iV([new Hg])}let iV=(()=>{class n{constructor(e){this.factories=e}static create(e,i){if(null!=i){const r=i.factories.slice();e=e.concat(r)}return new n(e)}static extend(e){return{provide:n,useFactory:i=>n.create(e,i||Lg()),deps:[[n,new la,new Hi]]}}find(e){const i=this.factories.find(r=>r.supports(e));if(null!=i)return i;throw new U(901,!1)}}return n.\u0275prov=k({token:n,providedIn:"root",factory:Lg}),n})();function Kg(){return new Aa([new Qg])}let Aa=(()=>{class n{constructor(e){this.factories=e}static create(e,i){if(i){const r=i.factories.slice();e=e.concat(r)}return new n(e)}static extend(e){return{provide:n,useFactory:i=>n.create(e,i||Kg()),deps:[[n,new la,new Hi]]}}find(e){const i=this.factories.find(r=>r.supports(e));if(i)return i;throw new U(901,!1)}}return n.\u0275prov=k({token:n,providedIn:"root",factory:Kg}),n})();const bJ=Cg(null,"core",[]);let NJ=(()=>{class n{constructor(e){}}return n.\u0275fac=function(e){return new(e||n)(T(Mi))},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})();function pl(n){return"boolean"==typeof n?n:null!=n&&"false"!==n}let yu=null;function ki(){return yu}class DJ{}const L=new f("DocumentToken");let Iu=(()=>{class n{historyGo(e){throw new Error("Not implemented")}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return b(OJ)},providedIn:"platform"}),n})();const AJ=new f("Location Initialized");let OJ=(()=>{class n extends Iu{constructor(){super(),this._doc=b(L),this._location=window.location,this._history=window.history}getBaseHrefFromDOM(){return ki().getBaseHref(this._doc)}onPopState(e){const i=ki().getGlobalEventTarget(this._doc,"window");return i.addEventListener("popstate",e,!1),()=>i.removeEventListener("popstate",e)}onHashChange(e){const i=ki().getGlobalEventTarget(this._doc,"window");return i.addEventListener("hashchange",e,!1),()=>i.removeEventListener("hashchange",e)}get href(){return this._location.href}get protocol(){return this._location.protocol}get hostname(){return this._location.hostname}get port(){return this._location.port}get pathname(){return this._location.pathname}get search(){return this._location.search}get hash(){return this._location.hash}set pathname(e){this._location.pathname=e}pushState(e,i,r){this._history.pushState(e,i,r)}replaceState(e,i,r){this._history.replaceState(e,i,r)}forward(){this._history.forward()}back(){this._history.back()}historyGo(e=0){this._history.go(e)}getState(){return this._history.state}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return new n},providedIn:"platform"}),n})();function Cu(n,t){if(0==n.length)return t;if(0==t.length)return n;let e=0;return n.endsWith("/")&&e++,t.startsWith("/")&&e++,2==e?n+t.substring(1):1==e?n+t:n+"/"+t}function rf(n){const t=n.match(/#|\?|$/),e=t&&t.index||n.length;return n.slice(0,e-("/"===n[e-1]?1:0))+n.slice(e)}function ii(n){return n&&"?"!==n[0]?"?"+n:n}let tr=(()=>{class n{historyGo(e){throw new Error("Not implemented")}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return b(af)},providedIn:"root"}),n})();const lf=new f("appBaseHref");let af=(()=>{class n extends tr{constructor(e,i){super(),this._platformLocation=e,this._removeListenerFns=[],this._baseHref=i??this._platformLocation.getBaseHrefFromDOM()??b(L).location?.origin??""}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return Cu(this._baseHref,e)}path(e=!1){const i=this._platformLocation.pathname+ii(this._platformLocation.search),r=this._platformLocation.hash;return r&&e?`${i}${r}`:i}pushState(e,i,r,l){const a=this.prepareExternalUrl(r+ii(l));this._platformLocation.pushState(e,i,a)}replaceState(e,i,r,l){const a=this.prepareExternalUrl(r+ii(l));this._platformLocation.replaceState(e,i,a)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}getState(){return this._platformLocation.getState()}historyGo(e=0){this._platformLocation.historyGo?.(e)}}return n.\u0275fac=function(e){return new(e||n)(T(Iu),T(lf,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),XJ=(()=>{class n extends tr{constructor(e,i){super(),this._platformLocation=e,this._baseHref="",this._removeListenerFns=[],null!=i&&(this._baseHref=i)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}path(e=!1){let i=this._platformLocation.hash;return null==i&&(i="#"),i.length>0?i.substring(1):i}prepareExternalUrl(e){const i=Cu(this._baseHref,e);return i.length>0?"#"+i:i}pushState(e,i,r,l){let a=this.prepareExternalUrl(r+ii(l));0==a.length&&(a=this._platformLocation.pathname),this._platformLocation.pushState(e,i,a)}replaceState(e,i,r,l){let a=this.prepareExternalUrl(r+ii(l));0==a.length&&(a=this._platformLocation.pathname),this._platformLocation.replaceState(e,i,a)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}getState(){return this._platformLocation.getState()}historyGo(e=0){this._platformLocation.historyGo?.(e)}}return n.\u0275fac=function(e){return new(e||n)(T(Iu),T(lf,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})(),lV=(()=>{class n{constructor(e){this._subject=new oe,this._urlChangeListeners=[],this._urlChangeSubscription=null,this._locationStrategy=e;const i=this._locationStrategy.getBaseHref();this._basePath=function HJ(n){if(new RegExp("^(https?:)?//").test(n)){const[,e]=n.split(/\/\/[^\/]+/);return e}return n}(rf(sf(i))),this._locationStrategy.onPopState(r=>{this._subject.emit({url:this.path(!0),pop:!0,state:r.state,type:r.type})})}ngOnDestroy(){this._urlChangeSubscription?.unsubscribe(),this._urlChangeListeners=[]}path(e=!1){return this.normalize(this._locationStrategy.path(e))}getState(){return this._locationStrategy.getState()}isCurrentPathEqualTo(e,i=""){return this.path()==this.normalize(e+ii(i))}normalize(e){return n.stripTrailingSlash(function zJ(n,t){if(!n||!t.startsWith(n))return t;const e=t.substring(n.length);return""===e||["/",";","?","#"].includes(e[0])?e:t}(this._basePath,sf(e)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._locationStrategy.prepareExternalUrl(e)}go(e,i="",r=null){this._locationStrategy.pushState(r,"",e,i),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+ii(i)),r)}replaceState(e,i="",r=null){this._locationStrategy.replaceState(r,"",e,i),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+ii(i)),r)}forward(){this._locationStrategy.forward()}back(){this._locationStrategy.back()}historyGo(e=0){this._locationStrategy.historyGo?.(e)}onUrlChange(e){return this._urlChangeListeners.push(e),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(i=>{this._notifyUrlChangeListeners(i.url,i.state)})),()=>{const i=this._urlChangeListeners.indexOf(e);this._urlChangeListeners.splice(i,1),0===this._urlChangeListeners.length&&(this._urlChangeSubscription?.unsubscribe(),this._urlChangeSubscription=null)}}_notifyUrlChangeListeners(e="",i){this._urlChangeListeners.forEach(r=>r(e,i))}subscribe(e,i,r){return this._subject.subscribe({next:e,error:i,complete:r})}}return n.normalizeQueryParams=ii,n.joinWithSlash=Cu,n.stripTrailingSlash=rf,n.\u0275fac=function(e){return new(e||n)(T(tr))},n.\u0275prov=k({token:n,factory:function(){return function jJ(){return new lV(T(tr))}()},providedIn:"root"}),n})();function sf(n){return n.replace(/\/index.html$/,"")}function Wf(n,t){t=encodeURIComponent(t);for(const e of n.split(";")){const i=e.indexOf("="),[r,l]=-1==i?[e,""]:[e.slice(0,i),e.slice(i+1)];if(r.trim()===t)return decodeURIComponent(l)}return null}const ju=/\s+/,Ff=[];let zu=(()=>{class n{constructor(e,i,r,l){this._iterableDiffers=e,this._keyValueDiffers=i,this._ngEl=r,this._renderer=l,this.initialClasses=Ff,this.stateMap=new Map}set klass(e){this.initialClasses=null!=e?e.trim().split(ju):Ff}set ngClass(e){this.rawClass="string"==typeof e?e.trim().split(ju):e}ngDoCheck(){for(const i of this.initialClasses)this._updateState(i,!0);const e=this.rawClass;if(Array.isArray(e)||e instanceof Set)for(const i of e)this._updateState(i,!0);else if(null!=e)for(const i of Object.keys(e))this._updateState(i,!!e[i]);this._applyStateDiff()}_updateState(e,i){const r=this.stateMap.get(e);void 0!==r?(r.enabled!==i&&(r.changed=!0,r.enabled=i),r.touched=!0):this.stateMap.set(e,{enabled:i,changed:!0,touched:!0})}_applyStateDiff(){for(const e of this.stateMap){const i=e[0],r=e[1];r.changed?(this._toggleClass(i,r.enabled),r.changed=!1):r.touched||(r.enabled&&this._toggleClass(i,!1),this.stateMap.delete(i)),r.touched=!1}}_toggleClass(e,i){(e=e.trim()).length>0&&e.split(ju).forEach(r=>{i?this._renderer.addClass(this._ngEl.nativeElement,r):this._renderer.removeClass(this._ngEl.nativeElement,r)})}}return n.\u0275fac=function(e){return new(e||n)(F(iV),F(Aa),F(Ue),F(qn))},n.\u0275dir=I({type:n,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"},standalone:!0}),n})();class Gv{constructor(t,e,i,r){this.$implicit=t,this.ngForOf=e,this.index=i,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let Tf=(()=>{class n{set ngForOf(e){this._ngForOf=e,this._ngForOfDirty=!0}set ngForTrackBy(e){this._trackByFn=e}get ngForTrackBy(){return this._trackByFn}constructor(e,i,r){this._viewContainer=e,this._template=i,this._differs=r,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForTemplate(e){e&&(this._template=e)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const e=this._ngForOf;!this._differ&&e&&(this._differ=this._differs.find(e).create(this.ngForTrackBy))}if(this._differ){const e=this._differ.diff(this._ngForOf);e&&this._applyChanges(e)}}_applyChanges(e){const i=this._viewContainer;e.forEachOperation((r,l,a)=>{if(null==r.previousIndex)i.createEmbeddedView(this._template,new Gv(r.item,this._ngForOf,-1,-1),null===a?void 0:a);else if(null==a)i.remove(null===l?void 0:l);else if(null!==l){const o=i.get(l);i.move(o,a),Zf(o,r)}});for(let r=0,l=i.length;r<l;r++){const o=i.get(r).context;o.index=r,o.count=l,o.ngForOf=this._ngForOf}e.forEachIdentityChange(r=>{Zf(i.get(r.currentIndex),r)})}static ngTemplateContextGuard(e,i){return!0}}return n.\u0275fac=function(e){return new(e||n)(F(qt),F(ni),F(iV))},n.\u0275dir=I({type:n,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"},standalone:!0}),n})();function Zf(n,t){n.context.$implicit=t.item}let ml=(()=>{class n{constructor(e,i){this._viewContainer=e,this._context=new yv,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=i}set ngIf(e){this._context.$implicit=this._context.ngIf=e,this._updateView()}set ngIfThen(e){gf("ngIfThen",e),this._thenTemplateRef=e,this._thenViewRef=null,this._updateView()}set ngIfElse(e){gf("ngIfElse",e),this._elseTemplateRef=e,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(e,i){return!0}}return n.\u0275fac=function(e){return new(e||n)(F(qt),F(ni))},n.\u0275dir=I({type:n,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"},standalone:!0}),n})();class yv{constructor(){this.$implicit=null,this.ngIf=null}}function gf(n,t){if(t&&!t.createEmbeddedView)throw new Error(`${n} must be a TemplateRef, but received '${ze(t)}'.`)}let WV=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})();const bf="browser";function Nf(n){return"server"===n}let lY=(()=>{class n{}return n.\u0275prov=k({token:n,providedIn:"root",factory:()=>new aY(T(L),window)}),n})();class aY{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function oY(n,t){const e=n.getElementById(t)||n.getElementsByName(t)[0];if(e)return e;if("function"==typeof n.createTreeWalker&&n.body&&"function"==typeof n.body.attachShadow){const i=n.createTreeWalker(n.body,NodeFilter.SHOW_ELEMENT);let r=i.currentNode;for(;r;){const l=r.shadowRoot;if(l){const a=l.getElementById(t)||l.querySelector(`[name="${t}"]`);if(a)return a}r=i.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),e.focus())}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),i=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,l=this.offset();this.window.scrollTo(i-l[0],r-l[1])}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=Ef(this.window.history)||Ef(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch{return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch{return!1}}}function Ef(n){return Object.getOwnPropertyDescriptor(n,"scrollRestoration")}class Sf{}class GY extends DJ{constructor(){super(...arguments),this.supportsDOMEvents=!0}}class Ku extends GY{static makeCurrent(){!function YJ(n){yu||(yu=n)}(new Ku)}onAndCancel(t,e,i){return t.addEventListener(e,i),()=>{t.removeEventListener(e,i)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=function yY(){return za=za||document.querySelector("base"),za?za.getAttribute("href"):null}();return null==e?null:function IY(n){TV=TV||document.createElement("a"),TV.setAttribute("href",n);const t=TV.pathname;return"/"===t.charAt(0)?t:`/${t}`}(e)}resetBaseElement(){za=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return Wf(document.cookie,t)}}let TV,za=null,xY=(()=>{class n{build(){return new XMLHttpRequest}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const _u=new f("EventManagerPlugins");let xf=(()=>{class n{constructor(e,i){this._zone=i,this._eventNameToPlugin=new Map,e.forEach(r=>{r.manager=this}),this._plugins=e.slice().reverse()}addEventListener(e,i,r){return this._findPluginFor(i).addEventListener(e,i,r)}getZone(){return this._zone}_findPluginFor(e){let i=this._eventNameToPlugin.get(e);if(i)return i;if(i=this._plugins.find(l=>l.supports(e)),!i)throw new U(5101,!1);return this._eventNameToPlugin.set(e,i),i}}return n.\u0275fac=function(e){return new(e||n)(T(_u),T(K))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();class wf{constructor(t){this._doc=t}}const qu="ng-app-id";let Jf=(()=>{class n{constructor(e,i,r,l={}){this.doc=e,this.appId=i,this.nonce=r,this.platformId=l,this.styleRef=new Map,this.hostNodes=new Set,this.styleNodesInDOM=this.collectServerRenderedStyles(),this.platformIsServer=Nf(l),this.resetHostNodes()}addStyles(e){for(const i of e)1===this.changeUsageCount(i,1)&&this.onStyleAdded(i)}removeStyles(e){for(const i of e)this.changeUsageCount(i,-1)<=0&&this.onStyleRemoved(i)}ngOnDestroy(){const e=this.styleNodesInDOM;e&&(e.forEach(i=>i.remove()),e.clear());for(const i of this.getAllStyles())this.onStyleRemoved(i);this.resetHostNodes()}addHost(e){this.hostNodes.add(e);for(const i of this.getAllStyles())this.addStyleToHost(e,i)}removeHost(e){this.hostNodes.delete(e)}getAllStyles(){return this.styleRef.keys()}onStyleAdded(e){for(const i of this.hostNodes)this.addStyleToHost(i,e)}onStyleRemoved(e){const i=this.styleRef;i.get(e)?.elements?.forEach(r=>r.remove()),i.delete(e)}collectServerRenderedStyles(){const e=this.doc.head?.querySelectorAll(`style[${qu}="${this.appId}"]`);if(e?.length){const i=new Map;return e.forEach(r=>{null!=r.textContent&&i.set(r.textContent,r)}),i}return null}changeUsageCount(e,i){const r=this.styleRef;if(r.has(e)){const l=r.get(e);return l.usage+=i,l.usage}return r.set(e,{usage:i,elements:[]}),i}getStyleElement(e,i){const r=this.styleNodesInDOM,l=r?.get(i);if(l?.parentNode===e)return r.delete(i),l.removeAttribute(qu),l;{const a=this.doc.createElement("style");return this.nonce&&a.setAttribute("nonce",this.nonce),a.textContent=i,this.platformIsServer&&a.setAttribute(qu,this.appId),a}}addStyleToHost(e,i){const r=this.getStyleElement(e,i);e.appendChild(r);const l=this.styleRef,a=l.get(i)?.elements;a?a.push(r):l.set(i,{elements:[r],usage:1})}resetHostNodes(){const e=this.hostNodes;e.clear(),e.add(this.doc.head)}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(Ra),T(oh,8),T(Ui))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const $u={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/MathML/"},ep=/%COMP%/g,YY=new f("RemoveStylesOnCompDestroy",{providedIn:"root",factory:()=>!1});function Yf(n,t){return t.map(e=>e.replace(ep,n))}let tp=(()=>{class n{constructor(e,i,r,l,a,o,s,V=null){this.eventManager=e,this.sharedStylesHost=i,this.appId=r,this.removeStylesOnCompDestroy=l,this.doc=a,this.platformId=o,this.ngZone=s,this.nonce=V,this.rendererByCompId=new Map,this.platformIsServer=Nf(o),this.defaultRenderer=new np(e,a,s,this.platformIsServer)}createRenderer(e,i){if(!e||!i)return this.defaultRenderer;this.platformIsServer&&i.encapsulation===Pt.ShadowDom&&(i={...i,encapsulation:Pt.Emulated});const r=this.getOrCreateRenderer(e,i);return r instanceof Af?r.applyToHost(e):r instanceof ip&&r.applyStyles(),r}getOrCreateRenderer(e,i){const r=this.rendererByCompId;let l=r.get(i.id);if(!l){const a=this.doc,o=this.ngZone,s=this.eventManager,V=this.sharedStylesHost,d=this.removeStylesOnCompDestroy,c=this.platformIsServer;switch(i.encapsulation){case Pt.Emulated:l=new Af(s,V,i,this.appId,d,a,o,c);break;case Pt.ShadowDom:return new XY(s,V,e,i,a,o,this.nonce,c);default:l=new ip(s,V,i,d,a,o,c)}r.set(i.id,l)}return l}ngOnDestroy(){this.rendererByCompId.clear()}}return n.\u0275fac=function(e){return new(e||n)(T(xf),T(Jf),T(Ra),T(YY),T(L),T(Ui),T(K),T(oh))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();class np{constructor(t,e,i,r){this.eventManager=t,this.doc=e,this.ngZone=i,this.platformIsServer=r,this.data=Object.create(null),this.destroyNode=null}destroy(){}createElement(t,e){return e?this.doc.createElementNS($u[e]||e,t):this.doc.createElement(t)}createComment(t){return this.doc.createComment(t)}createText(t){return this.doc.createTextNode(t)}appendChild(t,e){(Df(t)?t.content:t).appendChild(e)}insertBefore(t,e,i){t&&(Df(t)?t.content:t).insertBefore(e,i)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let i="string"==typeof t?this.doc.querySelector(t):t;if(!i)throw new U(-5104,!1);return e||(i.textContent=""),i}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,i,r){if(r){e=r+":"+e;const l=$u[r];l?t.setAttributeNS(l,e,i):t.setAttribute(e,i)}else t.setAttribute(e,i)}removeAttribute(t,e,i){if(i){const r=$u[i];r?t.removeAttributeNS(r,e):t.removeAttribute(`${i}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,i,r){r&(Fi.DashCase|Fi.Important)?t.style.setProperty(e,i,r&Fi.Important?"important":""):t.style[e]=i}removeStyle(t,e,i){i&Fi.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,i){t[e]=i}setValue(t,e){t.nodeValue=e}listen(t,e,i){if("string"==typeof t&&!(t=ki().getGlobalEventTarget(this.doc,t)))throw new Error(`Unsupported event target ${t} for event ${e}`);return this.eventManager.addEventListener(t,e,this.decoratePreventDefault(i))}decoratePreventDefault(t){return e=>{if("__ngUnwrap__"===e)return t;!1===(this.platformIsServer?this.ngZone.runGuarded(()=>t(e)):t(e))&&e.preventDefault()}}}function Df(n){return"TEMPLATE"===n.tagName&&void 0!==n.content}class XY extends np{constructor(t,e,i,r,l,a,o,s){super(t,l,a,s),this.sharedStylesHost=e,this.hostEl=i,this.shadowRoot=i.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const V=Yf(r.id,r.styles);for(const d of V){const c=document.createElement("style");o&&c.setAttribute("nonce",o),c.textContent=d,this.shadowRoot.appendChild(c)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,i){return super.insertBefore(this.nodeOrShadowRoot(t),e,i)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}}class ip extends np{constructor(t,e,i,r,l,a,o,s){super(t,l,a,o),this.sharedStylesHost=e,this.removeStylesOnCompDestroy=r,this.styles=s?Yf(s,i.styles):i.styles}applyStyles(){this.sharedStylesHost.addStyles(this.styles)}destroy(){this.removeStylesOnCompDestroy&&this.sharedStylesHost.removeStyles(this.styles)}}class Af extends ip{constructor(t,e,i,r,l,a,o,s){const V=r+"-"+i.id;super(t,e,i,l,a,o,s,V),this.contentAttr=function DY(n){return"_ngcontent-%COMP%".replace(ep,n)}(V),this.hostAttr=function AY(n){return"_nghost-%COMP%".replace(ep,n)}(V)}applyToHost(t){this.applyStyles(),this.setAttribute(t,this.hostAttr,"")}createElement(t,e){const i=super.createElement(t,e);return super.setAttribute(i,this.contentAttr,""),i}}let jY=(()=>{class n extends wf{constructor(e){super(e)}supports(e){return!0}addEventListener(e,i,r){return e.addEventListener(i,r,!1),()=>this.removeEventListener(e,i,r)}removeEventListener(e,i,r){return e.removeEventListener(i,r)}}return n.\u0275fac=function(e){return new(e||n)(T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const Of=["alt","control","meta","shift"],zY={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},HY={alt:n=>n.altKey,control:n=>n.ctrlKey,meta:n=>n.metaKey,shift:n=>n.shiftKey};let BY=(()=>{class n extends wf{constructor(e){super(e)}supports(e){return null!=n.parseEventName(e)}addEventListener(e,i,r){const l=n.parseEventName(i),a=n.eventCallback(l.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>ki().onAndCancel(e,l.domEventName,a))}static parseEventName(e){const i=e.toLowerCase().split("."),r=i.shift();if(0===i.length||"keydown"!==r&&"keyup"!==r)return null;const l=n._normalizeKey(i.pop());let a="",o=i.indexOf("code");if(o>-1&&(i.splice(o,1),a="code."),Of.forEach(V=>{const d=i.indexOf(V);d>-1&&(i.splice(d,1),a+=V+".")}),a+=l,0!=i.length||0===l.length)return null;const s={};return s.domEventName=r,s.fullKey=a,s}static matchEventFullKeyCode(e,i){let r=zY[e.key]||e.key,l="";return i.indexOf("code.")>-1&&(r=e.code,l="code."),!(null==r||!r)&&(r=r.toLowerCase()," "===r?r="space":"."===r&&(r="dot"),Of.forEach(a=>{a!==r&&(0,HY[a])(e)&&(l+=a+".")}),l+=r,l===i)}static eventCallback(e,i,r){return l=>{n.matchEventFullKeyCode(l,e)&&r.runGuarded(()=>i(l))}}static _normalizeKey(e){return"esc"===e?"escape":e}}return n.\u0275fac=function(e){return new(e||n)(T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const KY=Cg(bJ,"browser",[{provide:Ui,useValue:bf},{provide:PF,useValue:function PY(){Ku.makeCurrent()},multi:!0},{provide:L,useFactory:function LY(){return function lG(n){Pc=n}(document),document},deps:[]}]),_Y=new f(""),zf=[{provide:$s,useClass:class CY{addToWindow(t){Fe.getAngularTestability=(i,r=!0)=>{const l=t.findTestabilityInTree(i,r);if(null==l)throw new U(5103,!1);return l},Fe.getAllAngularTestabilities=()=>t.getAllTestabilities(),Fe.getAllAngularRootElements=()=>t.getAllRootElements(),Fe.frameworkStabilizers||(Fe.frameworkStabilizers=[]),Fe.frameworkStabilizers.push(i=>{const r=Fe.getAllAngularTestabilities();let l=r.length,a=!1;const o=function(s){a=a||s,l--,0==l&&i(a)};r.forEach(s=>{s.whenStable(o)})})}findTestabilityInTree(t,e,i){return null==e?null:t.getTestability(e)??(i?ki().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null)}},deps:[]},{provide:Eg,useClass:Uu,deps:[K,Tu,$s]},{provide:Uu,useClass:Uu,deps:[K,Tu,$s]}],Hf=[{provide:nh,useValue:"root"},{provide:$n,useFactory:function QY(){return new $n},deps:[]},{provide:_u,useClass:jY,multi:!0,deps:[L,K,Ui]},{provide:_u,useClass:BY,multi:!0,deps:[L]},tp,Jf,xf,{provide:Ua,useExisting:tp},{provide:Sf,useClass:xY,deps:[]},[]];let op,Bf=(()=>{class n{constructor(e){}static withServerTransition(e){return{ngModule:n,providers:[{provide:Ra,useValue:e.appId}]}}}return n.\u0275fac=function(e){return new(e||n)(T(_Y,12))},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[...Hf,...zf],imports:[WV,NJ]}),n})(),Pf=(()=>{class n{constructor(e){this._doc=e}getTitle(){return this._doc.title}setTitle(e){this._doc.title=e||""}}return n.\u0275fac=function(e){return new(e||n)(T(L))},n.\u0275prov=k({token:n,factory:function(e){let i=null;return i=e?new e:function $Y(){return new Pf(T(L))}(),i},providedIn:"root"}),n})();function _e(n){return null!=n&&"false"!=`${n}`}function ap(n,t=0){return function rD(n){return!isNaN(parseFloat(n))&&!isNaN(Number(n))}(n)?Number(n):t}function ZV(n){return Array.isArray(n)?n:[n]}function Xe(n){return null==n?"":"string"==typeof n?n:`${n}px`}function Wl(n){return n instanceof Ue?n.nativeElement:n}typeof window<"u"&&window;try{op=typeof Intl<"u"&&Intl.v8BreakIterator}catch{op=!1}let Ha,nr,sp,nn=(()=>{class n{constructor(e){this._platformId=e,this.isBrowser=this._platformId?function rY(n){return n===bf}(this._platformId):"object"==typeof document&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!(!window.chrome&&!op)&&typeof CSS<"u"&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}}return n.\u0275fac=function(e){return new(e||n)(T(Ui))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Ul(n){return function lD(){if(null==Ha&&typeof window<"u")try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:()=>Ha=!0}))}finally{Ha=Ha||!1}return Ha}()?n:!!n.capture}function aD(){if(null==nr){if("object"!=typeof document||!document||"function"!=typeof Element||!Element)return nr=!1,nr;if("scrollBehavior"in document.documentElement.style)nr=!0;else{const n=Element.prototype.scrollTo;nr=!!n&&!/\{\s*\[native code\]\s*\}/.test(n.toString())}}return nr}function Ni(n){return n.composedPath?n.composedPath()[0]:n.target}function Vp(){return typeof __karma__<"u"&&!!__karma__||typeof jasmine<"u"&&!!jasmine||typeof jest<"u"&&!!jest||typeof Mocha<"u"&&!!Mocha}function Qe(n,t,e){const i=q(n)||t||e?{next:n,error:t,complete:e}:n;return i?Ie((r,l)=>{var a;null===(a=i.subscribe)||void 0===a||a.call(i);let o=!0;r.subscribe(Ne(l,s=>{var V;null===(V=i.next)||void 0===V||V.call(i,s),l.next(s)},()=>{var s;o=!1,null===(s=i.complete)||void 0===s||s.call(i),l.complete()},s=>{var V;o=!1,null===(V=i.error)||void 0===V||V.call(i,s),l.error(s)},()=>{var s,V;o&&(null===(s=i.unsubscribe)||void 0===s||s.call(i)),null===(V=i.finalize)||void 0===V||V.call(i)}))}):hi}class ED extends $e{constructor(t,e){super()}schedule(t,e=0){return this}}const kV={setInterval(n,t,...e){const{delegate:i}=kV;return i?.setInterval?i.setInterval(n,t,...e):setInterval(n,t,...e)},clearInterval(n){const{delegate:t}=kV;return(t?.clearInterval||clearInterval)(n)},delegate:void 0};class hp extends ED{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){var i;if(this.closed)return this;this.state=t;const r=this.id,l=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(l,r,e)),this.pending=!0,this.delay=e,this.id=null!==(i=this.id)&&void 0!==i?i:this.requestAsyncId(l,this.id,e),this}requestAsyncId(t,e,i=0){return kV.setInterval(t.flush.bind(t,this),i)}recycleAsyncId(t,e,i=0){if(null!=i&&this.delay===i&&!1===this.pending)return e;null!=e&&kV.clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const i=this._execute(t,e);if(i)return i;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let r,i=!1;try{this.work(t)}catch(l){i=!0,r=l||new Error("Scheduled action threw falsy error")}if(i)return this.unsubscribe(),r}unsubscribe(){if(!this.closed){const{id:t,scheduler:e}=this,{actions:i}=e;this.work=this.state=this.scheduler=null,this.pending=!1,Fr(i,this),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null,super.unsubscribe()}}}const eM={now:()=>(eM.delegate||Date).now(),delegate:void 0};class Ba{constructor(t,e=Ba.now){this.schedulerActionCtor=t,this.now=e}schedule(t,e=0,i){return new this.schedulerActionCtor(this,t).schedule(i,e)}}Ba.now=eM.now;class up extends Ba{constructor(t,e=Ba.now){super(t,e),this.actions=[],this._active=!1}flush(t){const{actions:e}=this;if(this._active)return void e.push(t);let i;this._active=!0;do{if(i=t.execute(t.state,t.delay))break}while(t=e.shift());if(this._active=!1,i){for(;t=e.shift();)t.unsubscribe();throw i}}}const pp=new up(hp),SD=pp;function Ot(n,t){return Ie((e,i)=>{let r=0;e.subscribe(Ne(i,l=>n.call(t,l,r++)&&i.next(l)))})}function nM(n){return Ot((t,e)=>n<=e)}function De(n){return Ie((t,e)=>{ht(n).subscribe(Ne(e,()=>e.complete(),Jd)),!e.closed&&t.subscribe(e)})}let GD=(()=>{class n{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),yD=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[GD]}),n})();const{isArray:ID}=Array,{getPrototypeOf:CD,prototype:xD,keys:wD}=Object;const{isArray:vD}=Array;function Rp(n){return P(t=>function YD(n,t){return vD(t)?n(...t):n(t)}(n,t))}function bV(...n){const t=jl(n),e=function Um(n){return q(Pd(n))?n.pop():void 0}(n),{args:i,keys:r}=function iM(n){if(1===n.length){const t=n[0];if(ID(t))return{args:t,keys:null};if(function JD(n){return n&&"object"==typeof n&&CD(n)===xD}(t)){const e=wD(t);return{args:e.map(i=>t[i]),keys:e}}}return{args:n,keys:null}}(n);if(0===i.length)return je([],t);const l=new fe(function DD(n,t,e=hi){return i=>{lM(t,()=>{const{length:r}=n,l=new Array(r);let a=r,o=r;for(let s=0;s<r;s++)lM(t,()=>{const V=je(n[s],t);let d=!1;V.subscribe(Ne(i,c=>{l[s]=c,d||(d=!0,o--),o||i.next(e(l.slice()))},()=>{--a||i.complete()}))},i)},i)}}(i,t,r?a=>function rM(n,t){return n.reduce((e,i,r)=>(e[i]=t[r],e),{})}(r,a):hi));return e?l.pipe(Rp(e)):l}function lM(n,t,e){n?zn(e,n,t):t()}function NV(...n){return function AD(){return Ur(1)}()(je(n,jl(n)))}function vn(n){return n<=0?()=>Zn:Ie((t,e)=>{let i=0;t.subscribe(Ne(e,r=>{++i<=n&&(e.next(r),n<=i&&e.complete())}))})}function Tl(...n){const t=jl(n);return Ie((e,i)=>{(t?NV(n,e,t):NV(n,e)).subscribe(i)})}const aM=new Set;let ir,OD=(()=>{class n{constructor(e,i){this._platform=e,this._nonce=i,this._matchMedia=this._platform.isBrowser&&window.matchMedia?window.matchMedia.bind(window):jD}matchMedia(e){return(this._platform.WEBKIT||this._platform.BLINK)&&function XD(n,t){if(!aM.has(n))try{ir||(ir=document.createElement("style"),t&&(ir.nonce=t),ir.setAttribute("type","text/css"),document.head.appendChild(ir)),ir.sheet&&(ir.sheet.insertRule(`@media ${n} {body{ }}`,0),aM.add(n))}catch(e){console.error(e)}}(e,this._nonce),this._matchMedia(e)}}return n.\u0275fac=function(e){return new(e||n)(T(nn),T(oh,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function jD(n){return{matches:"all"===n||""===n,media:n,addListener:()=>{},removeListener:()=>{}}}let zD=(()=>{class n{constructor(e,i){this._mediaMatcher=e,this._zone=i,this._queries=new Map,this._destroySubject=new he}ngOnDestroy(){this._destroySubject.next(),this._destroySubject.complete()}isMatched(e){return oM(ZV(e)).some(r=>this._registerQuery(r).mql.matches)}observe(e){let l=bV(oM(ZV(e)).map(a=>this._registerQuery(a).observable));return l=NV(l.pipe(vn(1)),l.pipe(nM(1),function tM(n,t=pp){return Ie((e,i)=>{let r=null,l=null,a=null;const o=()=>{if(r){r.unsubscribe(),r=null;const V=l;l=null,i.next(V)}};function s(){const V=a+n,d=t.now();if(d<V)return r=this.schedule(void 0,V-d),void i.add(r);o()}e.subscribe(Ne(i,V=>{l=V,a=t.now(),r||(r=t.schedule(s,n),i.add(r))},()=>{o(),i.complete()},void 0,()=>{l=r=null}))})}(0))),l.pipe(P(a=>{const o={matches:!1,breakpoints:{}};return a.forEach(({matches:s,query:V})=>{o.matches=o.matches||s,o.breakpoints[V]=s}),o}))}_registerQuery(e){if(this._queries.has(e))return this._queries.get(e);const i=this._mediaMatcher.matchMedia(e),l={observable:new fe(a=>{const o=s=>this._zone.run(()=>a.next(s));return i.addListener(o),()=>{i.removeListener(o)}}).pipe(Tl(i),P(({matches:a})=>({query:e,matches:a})),De(this._destroySubject)),mql:i};return this._queries.set(e,l),l}}return n.\u0275fac=function(e){return new(e||n)(T(OD),T(K))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function oM(n){return n.map(t=>t.split(",")).reduce((t,e)=>t.concat(e)).map(t=>t.trim())}function EV(n,t){return(n.getAttribute(t)||"").match(/\S+/g)||[]}const VM="cdk-describedby-message",SV="cdk-describedby-host";let mp=0,PD=(()=>{class n{constructor(e,i){this._platform=i,this._messageRegistry=new Map,this._messagesContainer=null,this._id=""+mp++,this._document=e,this._id=b(Ra)+"-"+mp++}describe(e,i,r){if(!this._canBeDescribed(e,i))return;const l=Wp(i,r);"string"!=typeof i?(dM(i,this._id),this._messageRegistry.set(l,{messageElement:i,referenceCount:0})):this._messageRegistry.has(l)||this._createMessageElement(i,r),this._isElementDescribedByMessage(e,l)||this._addMessageReference(e,l)}removeDescription(e,i,r){if(!i||!this._isElementNode(e))return;const l=Wp(i,r);if(this._isElementDescribedByMessage(e,l)&&this._removeMessageReference(e,l),"string"==typeof i){const a=this._messageRegistry.get(l);a&&0===a.referenceCount&&this._deleteMessageElement(l)}0===this._messagesContainer?.childNodes.length&&(this._messagesContainer.remove(),this._messagesContainer=null)}ngOnDestroy(){const e=this._document.querySelectorAll(`[${SV}="${this._id}"]`);for(let i=0;i<e.length;i++)this._removeCdkDescribedByReferenceIds(e[i]),e[i].removeAttribute(SV);this._messagesContainer?.remove(),this._messagesContainer=null,this._messageRegistry.clear()}_createMessageElement(e,i){const r=this._document.createElement("div");dM(r,this._id),r.textContent=e,i&&r.setAttribute("role",i),this._createMessagesContainer(),this._messagesContainer.appendChild(r),this._messageRegistry.set(Wp(e,i),{messageElement:r,referenceCount:0})}_deleteMessageElement(e){this._messageRegistry.get(e)?.messageElement?.remove(),this._messageRegistry.delete(e)}_createMessagesContainer(){if(this._messagesContainer)return;const e="cdk-describedby-message-container",i=this._document.querySelectorAll(`.${e}[platform="server"]`);for(let l=0;l<i.length;l++)i[l].remove();const r=this._document.createElement("div");r.style.visibility="hidden",r.classList.add(e),r.classList.add("cdk-visually-hidden"),this._platform&&!this._platform.isBrowser&&r.setAttribute("platform","server"),this._document.body.appendChild(r),this._messagesContainer=r}_removeCdkDescribedByReferenceIds(e){const i=EV(e,"aria-describedby").filter(r=>0!=r.indexOf(VM));e.setAttribute("aria-describedby",i.join(" "))}_addMessageReference(e,i){const r=this._messageRegistry.get(i);(function HD(n,t,e){const i=EV(n,t);i.some(r=>r.trim()==e.trim())||(i.push(e.trim()),n.setAttribute(t,i.join(" ")))})(e,"aria-describedby",r.messageElement.id),e.setAttribute(SV,this._id),r.referenceCount++}_removeMessageReference(e,i){const r=this._messageRegistry.get(i);r.referenceCount--,function BD(n,t,e){const r=EV(n,t).filter(l=>l!=e.trim());r.length?n.setAttribute(t,r.join(" ")):n.removeAttribute(t)}(e,"aria-describedby",r.messageElement.id),e.removeAttribute(SV)}_isElementDescribedByMessage(e,i){const r=EV(e,"aria-describedby"),l=this._messageRegistry.get(i),a=l&&l.messageElement.id;return!!a&&-1!=r.indexOf(a)}_canBeDescribed(e,i){if(!this._isElementNode(e))return!1;if(i&&"object"==typeof i)return!0;const r=null==i?"":`${i}`.trim(),l=e.getAttribute("aria-label");return!(!r||l&&l.trim()===r)}_isElementNode(e){return e.nodeType===this._document.ELEMENT_NODE}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(nn))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Wp(n,t){return"string"==typeof n?`${t||""}/${n}`:n}function dM(n,t){n.id||(n.id=`${VM}-${t}-${mp++}`)}function hM(n){return 0===n.buttons||0===n.offsetX&&0===n.offsetY}function uM(n){const t=n.touches&&n.touches[0]||n.changedTouches&&n.changedTouches[0];return!(!t||-1!==t.identifier||null!=t.radiusX&&1!==t.radiusX||null!=t.radiusY&&1!==t.radiusY)}const tA=new f("cdk-input-modality-detector-options"),nA={ignoreKeys:[18,17,224,91,16]},Zl=Ul({passive:!0,capture:!0});let iA=(()=>{class n{get mostRecentModality(){return this._modality.value}constructor(e,i,r,l){this._platform=e,this._mostRecentTarget=null,this._modality=new St(null),this._lastTouchMs=0,this._onKeydown=a=>{this._options?.ignoreKeys?.some(o=>o===a.keyCode)||(this._modality.next("keyboard"),this._mostRecentTarget=Ni(a))},this._onMousedown=a=>{Date.now()-this._lastTouchMs<650||(this._modality.next(hM(a)?"keyboard":"mouse"),this._mostRecentTarget=Ni(a))},this._onTouchstart=a=>{uM(a)?this._modality.next("keyboard"):(this._lastTouchMs=Date.now(),this._modality.next("touch"),this._mostRecentTarget=Ni(a))},this._options={...nA,...l},this.modalityDetected=this._modality.pipe(nM(1)),this.modalityChanged=this.modalityDetected.pipe(fm()),e.isBrowser&&i.runOutsideAngular(()=>{r.addEventListener("keydown",this._onKeydown,Zl),r.addEventListener("mousedown",this._onMousedown,Zl),r.addEventListener("touchstart",this._onTouchstart,Zl)})}ngOnDestroy(){this._modality.complete(),this._platform.isBrowser&&(document.removeEventListener("keydown",this._onKeydown,Zl),document.removeEventListener("mousedown",this._onMousedown,Zl),document.removeEventListener("touchstart",this._onTouchstart,Zl))}}return n.\u0275fac=function(e){return new(e||n)(T(nn),T(K),T(L),T(tA,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const lA=new f("cdk-focus-monitor-default-options"),GV=Ul({passive:!0,capture:!0});let Fp=(()=>{class n{constructor(e,i,r,l,a){this._ngZone=e,this._platform=i,this._inputModalityDetector=r,this._origin=null,this._windowFocused=!1,this._originFromTouchInteraction=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._rootNodeFocusListenerCount=new Map,this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=window.setTimeout(()=>this._windowFocused=!1)},this._stopInputModalityDetector=new he,this._rootNodeFocusAndBlurListener=o=>{for(let V=Ni(o);V;V=V.parentElement)"focus"===o.type?this._onFocus(o,V):this._onBlur(o,V)},this._document=l,this._detectionMode=a?.detectionMode||0}monitor(e,i=!1){const r=Wl(e);if(!this._platform.isBrowser||1!==r.nodeType)return x();const l=function sD(n){if(function oD(){if(null==sp){const n=typeof document<"u"?document.head:null;sp=!(!n||!n.createShadowRoot&&!n.attachShadow)}return sp}()){const t=n.getRootNode?n.getRootNode():null;if(typeof ShadowRoot<"u"&&ShadowRoot&&t instanceof ShadowRoot)return t}return null}(r)||this._getDocument(),a=this._elementInfo.get(r);if(a)return i&&(a.checkChildren=!0),a.subject;const o={checkChildren:i,subject:new he,rootNode:l};return this._elementInfo.set(r,o),this._registerGlobalListeners(o),o.subject}stopMonitoring(e){const i=Wl(e),r=this._elementInfo.get(i);r&&(r.subject.complete(),this._setClasses(i),this._elementInfo.delete(i),this._removeGlobalListeners(r))}focusVia(e,i,r){const l=Wl(e);l===this._getDocument().activeElement?this._getClosestElementsInfo(l).forEach(([o,s])=>this._originChanged(o,i,s)):(this._setOrigin(i),"function"==typeof l.focus&&l.focus(r))}ngOnDestroy(){this._elementInfo.forEach((e,i)=>this.stopMonitoring(i))}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_getFocusOrigin(e){return this._origin?this._originFromTouchInteraction?this._shouldBeAttributedToTouch(e)?"touch":"program":this._origin:this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:e&&this._isLastInteractionFromInputLabel(e)?"mouse":"program"}_shouldBeAttributedToTouch(e){return 1===this._detectionMode||!!e?.contains(this._inputModalityDetector._mostRecentTarget)}_setClasses(e,i){e.classList.toggle("cdk-focused",!!i),e.classList.toggle("cdk-touch-focused","touch"===i),e.classList.toggle("cdk-keyboard-focused","keyboard"===i),e.classList.toggle("cdk-mouse-focused","mouse"===i),e.classList.toggle("cdk-program-focused","program"===i)}_setOrigin(e,i=!1){this._ngZone.runOutsideAngular(()=>{this._origin=e,this._originFromTouchInteraction="touch"===e&&i,0===this._detectionMode&&(clearTimeout(this._originTimeoutId),this._originTimeoutId=setTimeout(()=>this._origin=null,this._originFromTouchInteraction?650:1))})}_onFocus(e,i){const r=this._elementInfo.get(i),l=Ni(e);!r||!r.checkChildren&&i!==l||this._originChanged(i,this._getFocusOrigin(l),r)}_onBlur(e,i){const r=this._elementInfo.get(i);!r||r.checkChildren&&e.relatedTarget instanceof Node&&i.contains(e.relatedTarget)||(this._setClasses(i),this._emitOrigin(r,null))}_emitOrigin(e,i){e.subject.observers.length&&this._ngZone.run(()=>e.subject.next(i))}_registerGlobalListeners(e){if(!this._platform.isBrowser)return;const i=e.rootNode,r=this._rootNodeFocusListenerCount.get(i)||0;r||this._ngZone.runOutsideAngular(()=>{i.addEventListener("focus",this._rootNodeFocusAndBlurListener,GV),i.addEventListener("blur",this._rootNodeFocusAndBlurListener,GV)}),this._rootNodeFocusListenerCount.set(i,r+1),1==++this._monitoredElementCount&&(this._ngZone.runOutsideAngular(()=>{this._getWindow().addEventListener("focus",this._windowFocusListener)}),this._inputModalityDetector.modalityDetected.pipe(De(this._stopInputModalityDetector)).subscribe(l=>{this._setOrigin(l,!0)}))}_removeGlobalListeners(e){const i=e.rootNode;if(this._rootNodeFocusListenerCount.has(i)){const r=this._rootNodeFocusListenerCount.get(i);r>1?this._rootNodeFocusListenerCount.set(i,r-1):(i.removeEventListener("focus",this._rootNodeFocusAndBlurListener,GV),i.removeEventListener("blur",this._rootNodeFocusAndBlurListener,GV),this._rootNodeFocusListenerCount.delete(i))}--this._monitoredElementCount||(this._getWindow().removeEventListener("focus",this._windowFocusListener),this._stopInputModalityDetector.next(),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._originTimeoutId))}_originChanged(e,i,r){this._setClasses(e,i),this._emitOrigin(r,i),this._lastFocusOrigin=i}_getClosestElementsInfo(e){const i=[];return this._elementInfo.forEach((r,l)=>{(l===e||r.checkChildren&&l.contains(e))&&i.push([l,r])}),i}_isLastInteractionFromInputLabel(e){const{_mostRecentTarget:i,mostRecentModality:r}=this._inputModalityDetector;if("mouse"!==r||!i||i===e||"INPUT"!==e.nodeName&&"TEXTAREA"!==e.nodeName||e.disabled)return!1;const l=e.labels;if(l)for(let a=0;a<l.length;a++)if(l[a].contains(i))return!0;return!1}}return n.\u0275fac=function(e){return new(e||n)(T(K),T(nn),T(iA),T(L,8),T(lA,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const RM="cdk-high-contrast-black-on-white",mM="cdk-high-contrast-white-on-black",Up="cdk-high-contrast-active";let WM=(()=>{class n{constructor(e,i){this._platform=e,this._document=i,this._breakpointSubscription=b(zD).observe("(forced-colors: active)").subscribe(()=>{this._hasCheckedHighContrastMode&&(this._hasCheckedHighContrastMode=!1,this._applyBodyHighContrastModeCssClasses())})}getHighContrastMode(){if(!this._platform.isBrowser)return 0;const e=this._document.createElement("div");e.style.backgroundColor="rgb(1,2,3)",e.style.position="absolute",this._document.body.appendChild(e);const i=this._document.defaultView||window,r=i&&i.getComputedStyle?i.getComputedStyle(e):null,l=(r&&r.backgroundColor||"").replace(/ /g,"");switch(e.remove(),l){case"rgb(0,0,0)":case"rgb(45,50,54)":case"rgb(32,32,32)":return 2;case"rgb(255,255,255)":case"rgb(255,250,239)":return 1}return 0}ngOnDestroy(){this._breakpointSubscription.unsubscribe()}_applyBodyHighContrastModeCssClasses(){if(!this._hasCheckedHighContrastMode&&this._platform.isBrowser&&this._document.body){const e=this._document.body.classList;e.remove(Up,RM,mM),this._hasCheckedHighContrastMode=!0;const i=this.getHighContrastMode();1===i?e.add(Up,RM):2===i&&e.add(Up,mM)}}}return n.\u0275fac=function(e){return new(e||n)(T(nn),T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),aA=(()=>{class n{constructor(e){e._applyBodyHighContrastModeCssClasses()}}return n.\u0275fac=function(e){return new(e||n)(T(WM))},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[yD]}),n})();const oA=new f("cdk-dir-doc",{providedIn:"root",factory:function sA(){return b(L)}}),VA=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;let yV=(()=>{class n{constructor(e){this.value="ltr",this.change=new oe,e&&(this.value=function dA(n){const t=n?.toLowerCase()||"";return"auto"===t&&typeof navigator<"u"&&navigator?.language?VA.test(navigator.language)?"rtl":"ltr":"rtl"===t?"rtl":"ltr"}((e.body?e.body.dir:null)||(e.documentElement?e.documentElement.dir:null)||"ltr"))}ngOnDestroy(){this.change.complete()}}return n.\u0275fac=function(e){return new(e||n)(T(oA,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Pa=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})();const hA=new f("mat-sanity-checks",{providedIn:"root",factory:function cA(){return!0}});let Yn=(()=>{class n{constructor(e,i,r){this._sanityChecks=i,this._document=r,this._hasDoneGlobalChecks=!1,e._applyBodyHighContrastModeCssClasses(),this._hasDoneGlobalChecks||(this._hasDoneGlobalChecks=!0)}_checkIsEnabled(e){return!Vp()&&("boolean"==typeof this._sanityChecks?this._sanityChecks:!!this._sanityChecks[e])}}return n.\u0275fac=function(e){return new(e||n)(T(WM),T(hA,8),T(L))},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[Pa,Pa]}),n})(),TM=(()=>{class n{isErrorState(e,i){return!!(e&&e.invalid&&(e.touched||i&&i.submitted))}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class FA{constructor(t,e,i,r=!1){this._renderer=t,this.element=e,this.config=i,this._animationForciblyDisabledThroughCss=r,this.state=3}fadeOut(){this._renderer.fadeOutRipple(this)}}const ZM=Ul({passive:!0,capture:!0});class UA{constructor(){this._events=new Map,this._delegateEventHandler=t=>{const e=Ni(t);e&&this._events.get(t.type)?.forEach((i,r)=>{(r===e||r.contains(e))&&i.forEach(l=>l.handleEvent(t))})}}addHandler(t,e,i,r){const l=this._events.get(e);if(l){const a=l.get(i);a?a.add(r):l.set(i,new Set([r]))}else this._events.set(e,new Map([[i,new Set([r])]])),t.runOutsideAngular(()=>{document.addEventListener(e,this._delegateEventHandler,ZM)})}removeHandler(t,e,i){const r=this._events.get(t);if(!r)return;const l=r.get(e);l&&(l.delete(i),0===l.size&&r.delete(e),0===r.size&&(this._events.delete(t),document.removeEventListener(t,this._delegateEventHandler,ZM)))}}const gM={enterDuration:225,exitDuration:150},fM=Ul({passive:!0,capture:!0}),MM=["mousedown","touchstart"],kM=["mouseup","mouseleave","touchend","touchcancel"];class La{constructor(t,e,i,r){this._target=t,this._ngZone=e,this._platform=r,this._isPointerDown=!1,this._activeRipples=new Map,this._pointerUpEventsRegistered=!1,r.isBrowser&&(this._containerElement=Wl(i))}fadeInRipple(t,e,i={}){const r=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),l={...gM,...i.animation};i.centered&&(t=r.left+r.width/2,e=r.top+r.height/2);const a=i.radius||function ZA(n,t,e){const i=Math.max(Math.abs(n-e.left),Math.abs(n-e.right)),r=Math.max(Math.abs(t-e.top),Math.abs(t-e.bottom));return Math.sqrt(i*i+r*r)}(t,e,r),o=t-r.left,s=e-r.top,V=l.enterDuration,d=document.createElement("div");d.classList.add("mat-ripple-element"),d.style.left=o-a+"px",d.style.top=s-a+"px",d.style.height=2*a+"px",d.style.width=2*a+"px",null!=i.color&&(d.style.backgroundColor=i.color),d.style.transitionDuration=`${V}ms`,this._containerElement.appendChild(d);const c=window.getComputedStyle(d),u=c.transitionDuration,p="none"===c.transitionProperty||"0s"===u||"0s, 0s"===u||0===r.width&&0===r.height,R=new FA(this,d,i,p);d.style.transform="scale3d(1, 1, 1)",R.state=0,i.persistent||(this._mostRecentTransientRipple=R);let W=null;return!p&&(V||l.exitDuration)&&this._ngZone.runOutsideAngular(()=>{const Z=()=>this._finishRippleTransition(R),m=()=>this._destroyRipple(R);d.addEventListener("transitionend",Z),d.addEventListener("transitioncancel",m),W={onTransitionEnd:Z,onTransitionCancel:m}}),this._activeRipples.set(R,W),(p||!V)&&this._finishRippleTransition(R),R}fadeOutRipple(t){if(2===t.state||3===t.state)return;const e=t.element,i={...gM,...t.config.animation};e.style.transitionDuration=`${i.exitDuration}ms`,e.style.opacity="0",t.state=2,(t._animationForciblyDisabledThroughCss||!i.exitDuration)&&this._finishRippleTransition(t)}fadeOutAll(){this._getActiveRipples().forEach(t=>t.fadeOut())}fadeOutAllNonPersistent(){this._getActiveRipples().forEach(t=>{t.config.persistent||t.fadeOut()})}setupTriggerEvents(t){const e=Wl(t);!this._platform.isBrowser||!e||e===this._triggerElement||(this._removeTriggerEvents(),this._triggerElement=e,MM.forEach(i=>{La._eventManager.addHandler(this._ngZone,i,e,this)}))}handleEvent(t){"mousedown"===t.type?this._onMousedown(t):"touchstart"===t.type?this._onTouchStart(t):this._onPointerUp(),this._pointerUpEventsRegistered||(this._ngZone.runOutsideAngular(()=>{kM.forEach(e=>{this._triggerElement.addEventListener(e,this,fM)})}),this._pointerUpEventsRegistered=!0)}_finishRippleTransition(t){0===t.state?this._startFadeOutTransition(t):2===t.state&&this._destroyRipple(t)}_startFadeOutTransition(t){const e=t===this._mostRecentTransientRipple,{persistent:i}=t.config;t.state=1,!i&&(!e||!this._isPointerDown)&&t.fadeOut()}_destroyRipple(t){const e=this._activeRipples.get(t)??null;this._activeRipples.delete(t),this._activeRipples.size||(this._containerRect=null),t===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),t.state=3,null!==e&&(t.element.removeEventListener("transitionend",e.onTransitionEnd),t.element.removeEventListener("transitioncancel",e.onTransitionCancel)),t.element.remove()}_onMousedown(t){const e=hM(t),i=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+800;!this._target.rippleDisabled&&!e&&!i&&(this._isPointerDown=!0,this.fadeInRipple(t.clientX,t.clientY,this._target.rippleConfig))}_onTouchStart(t){if(!this._target.rippleDisabled&&!uM(t)){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;const e=t.changedTouches;if(e)for(let i=0;i<e.length;i++)this.fadeInRipple(e[i].clientX,e[i].clientY,this._target.rippleConfig)}}_onPointerUp(){this._isPointerDown&&(this._isPointerDown=!1,this._getActiveRipples().forEach(t=>{!t.config.persistent&&(1===t.state||t.config.terminateOnPointerUp&&0===t.state)&&t.fadeOut()}))}_getActiveRipples(){return Array.from(this._activeRipples.keys())}_removeTriggerEvents(){const t=this._triggerElement;t&&(MM.forEach(e=>La._eventManager.removeHandler(e,t,this)),this._pointerUpEventsRegistered&&kM.forEach(e=>t.removeEventListener(e,this,fM)))}}La._eventManager=new UA;let bM=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[Yn,Yn]}),n})();class yk{}class g5{}const oi="*";function Ik(n,t=null){return{type:2,steps:n,options:t}}function mn(n){return{type:6,styles:n,offset:null}}class no{constructor(t=0,e=0){this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._originalOnDoneFns=[],this._originalOnStartFns=[],this._started=!1,this._destroyed=!1,this._finished=!1,this._position=0,this.parentPlayer=null,this.totalTime=t+e}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}onStart(t){this._originalOnStartFns.push(t),this._onStartFns.push(t)}onDone(t){this._originalOnDoneFns.push(t),this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0}triggerMicrotask(){queueMicrotask(()=>this._onFinish())}_onStart(){this._onStartFns.forEach(t=>t()),this._onStartFns=[]}pause(){}restart(){}finish(){this._onFinish()}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}reset(){this._started=!1,this._finished=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}setPosition(t){this._position=this.totalTime?t*this.totalTime:1}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}class Ck{constructor(t){this._onDoneFns=[],this._onStartFns=[],this._finished=!1,this._started=!1,this._destroyed=!1,this._onDestroyFns=[],this.parentPlayer=null,this.totalTime=0,this.players=t;let e=0,i=0,r=0;const l=this.players.length;0==l?queueMicrotask(()=>this._onFinish()):this.players.forEach(a=>{a.onDone(()=>{++e==l&&this._onFinish()}),a.onDestroy(()=>{++i==l&&this._onDestroy()}),a.onStart(()=>{++r==l&&this._onStart()})}),this.totalTime=this.players.reduce((a,o)=>Math.max(a,o.totalTime),0)}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}init(){this.players.forEach(t=>t.init())}onStart(t){this._onStartFns.push(t)}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach(t=>t()),this._onStartFns=[])}onDone(t){this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach(t=>t.play())}pause(){this.players.forEach(t=>t.pause())}restart(){this.players.forEach(t=>t.restart())}finish(){this._onFinish(),this.players.forEach(t=>t.finish())}destroy(){this._onDestroy()}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach(t=>t.destroy()),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}reset(){this.players.forEach(t=>t.reset()),this._destroyed=!1,this._finished=!1,this._started=!1}setPosition(t){const e=t*this.totalTime;this.players.forEach(i=>{const r=i.totalTime?Math.min(1,e/i.totalTime):1;i.setPosition(r)})}getPosition(){const t=this.players.reduce((e,i)=>null===e||i.totalTime>e.totalTime?i:e,null);return null!=t?t.getPosition():0}beforeDestroy(){this.players.forEach(t=>{t.beforeDestroy&&t.beforeDestroy()})}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}const HV=new f("mat-chips-default-options");let o2=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[TM,{provide:HV,useValue:{separatorKeyCodes:[13]}}],imports:[Yn,WV,bM,Yn]}),n})();function Nl(n,t){const e=q(n)?n:()=>n,i=r=>r.error(e());return new fe(t?r=>t.schedule(i,0,r):i)}function Gi(n){return Ie((t,e)=>{let l,i=null,r=!1;i=t.subscribe(Ne(e,void 0,void 0,a=>{l=ht(n(a,Gi(n)(t))),i?(i.unsubscribe(),i=null,l.subscribe(e)):r=!0})),r&&(i.unsubscribe(),i=null,l.subscribe(e))})}function El(n){return Ie((t,e)=>{try{t.subscribe(e)}finally{e.add(n)}})}function Sl(n,t){return q(t)?Le(n,t,1):Le(n,1)}class QV{}class LV{}class Dn{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?"string"==typeof t?this.lazyInit=()=>{this.headers=new Map,t.split("\n").forEach(e=>{const i=e.indexOf(":");if(i>0){const r=e.slice(0,i),l=r.toLowerCase(),a=e.slice(i+1).trim();this.maybeSetNormalizedName(r,l),this.headers.has(l)?this.headers.get(l).push(a):this.headers.set(l,[a])}})}:typeof Headers<"u"&&t instanceof Headers?(this.headers=new Map,t.forEach((e,i)=>{this.setHeaderEntries(i,e)})):this.lazyInit=()=>{this.headers=new Map,Object.entries(t).forEach(([e,i])=>{this.setHeaderEntries(e,i)})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof Dn?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new Dn;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof Dn?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let i=t.value;if("string"==typeof i&&(i=[i]),0===i.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...i),this.headers.set(e,r);break;case"d":const l=t.value;if(l){let a=this.headers.get(e);if(!a)return;a=a.filter(o=>-1===l.indexOf(o)),0===a.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,a)}else this.headers.delete(e),this.normalizedNames.delete(e)}}setHeaderEntries(t,e){const i=(Array.isArray(e)?e:[e]).map(l=>l.toString()),r=t.toLowerCase();this.headers.set(r,i),this.maybeSetNormalizedName(t,r)}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class s2{encodeKey(t){return Ok(t)}encodeValue(t){return Ok(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}const d2=/%(\d[a-f0-9])/gi,c2={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function Ok(n){return encodeURIComponent(n).replace(d2,(t,e)=>c2[e]??t)}function KV(n){return`${n}`}class yi{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new s2,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function V2(n,t){const e=new Map;return n.length>0&&n.replace(/^\?/,"").split("&").forEach(r=>{const l=r.indexOf("="),[a,o]=-1==l?[t.decodeKey(r),""]:[t.decodeKey(r.slice(0,l)),t.decodeValue(r.slice(l+1))],s=e.get(a)||[];s.push(o),e.set(a,s)}),e}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const i=t.fromObject[e],r=Array.isArray(i)?i.map(KV):[KV(i)];this.map.set(e,r)})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(i=>{const r=t[i];Array.isArray(r)?r.forEach(l=>{e.push({param:i,value:l,op:"a"})}):e.push({param:i,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(i=>e+"="+this.encoder.encodeValue(i)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new yi({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(KV(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let i=this.map.get(t.param)||[];const r=i.indexOf(KV(t.value));-1!==r&&i.splice(r,1),i.length>0?this.map.set(t.param,i):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class h2{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}has(t){return this.map.has(t)}keys(){return this.map.keys()}}function Xk(n){return typeof ArrayBuffer<"u"&&n instanceof ArrayBuffer}function jk(n){return typeof Blob<"u"&&n instanceof Blob}function zk(n){return typeof FormData<"u"&&n instanceof FormData}class io{constructor(t,e,i,r){let l;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function u2(n){switch(n){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==i?i:null,l=r):l=i,l&&(this.reportProgress=!!l.reportProgress,this.withCredentials=!!l.withCredentials,l.responseType&&(this.responseType=l.responseType),l.headers&&(this.headers=l.headers),l.context&&(this.context=l.context),l.params&&(this.params=l.params)),this.headers||(this.headers=new Dn),this.context||(this.context=new h2),this.params){const a=this.params.toString();if(0===a.length)this.urlWithParams=e;else{const o=e.indexOf("?");this.urlWithParams=e+(-1===o?"?":o<e.length-1?"&":"")+a}}else this.params=new yi,this.urlWithParams=e}serializeBody(){return null===this.body?null:Xk(this.body)||jk(this.body)||zk(this.body)||function p2(n){return typeof URLSearchParams<"u"&&n instanceof URLSearchParams}(this.body)||"string"==typeof this.body?this.body:this.body instanceof yi?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||zk(this.body)?null:jk(this.body)?this.body.type||null:Xk(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof yi?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){const e=t.method||this.method,i=t.url||this.url,r=t.responseType||this.responseType,l=void 0!==t.body?t.body:this.body,a=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,o=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let s=t.headers||this.headers,V=t.params||this.params;const d=t.context??this.context;return void 0!==t.setHeaders&&(s=Object.keys(t.setHeaders).reduce((c,h)=>c.set(h,t.setHeaders[h]),s)),t.setParams&&(V=Object.keys(t.setParams).reduce((c,h)=>c.set(h,t.setParams[h]),V)),new io(e,i,l,{params:V,headers:s,context:d,reportProgress:o,responseType:r,withCredentials:a})}}var Gl=function(n){return n[n.Sent=0]="Sent",n[n.UploadProgress=1]="UploadProgress",n[n.ResponseHeader=2]="ResponseHeader",n[n.DownloadProgress=3]="DownloadProgress",n[n.Response=4]="Response",n[n.User=5]="User",n}(Gl||{});class Pp{constructor(t,e=200,i="OK"){this.headers=t.headers||new Dn,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||i,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class Qp extends Pp{constructor(t={}){super(t),this.type=Gl.ResponseHeader}clone(t={}){return new Qp({headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class yl extends Pp{constructor(t={}){super(t),this.type=Gl.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new yl({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class Hk extends Pp{constructor(t){super(t,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${t.url||"(unknown url)"}`:`Http failure response for ${t.url||"(unknown url)"}: ${t.status} ${t.statusText}`,this.error=t.error||null}}function Lp(n,t){return{body:t,headers:n.headers,context:n.context,observe:n.observe,params:n.params,reportProgress:n.reportProgress,responseType:n.responseType,withCredentials:n.withCredentials}}let Kp=(()=>{class n{constructor(e){this.handler=e}request(e,i,r={}){let l;if(e instanceof io)l=e;else{let s,V;s=r.headers instanceof Dn?r.headers:new Dn(r.headers),r.params&&(V=r.params instanceof yi?r.params:new yi({fromObject:r.params})),l=new io(e,i,void 0!==r.body?r.body:null,{headers:s,context:r.context,params:V,reportProgress:r.reportProgress,responseType:r.responseType||"json",withCredentials:r.withCredentials})}const a=x(l).pipe(Sl(s=>this.handler.handle(s)));if(e instanceof io||"events"===r.observe)return a;const o=a.pipe(Ot(s=>s instanceof yl));switch(r.observe||"body"){case"body":switch(l.responseType){case"arraybuffer":return o.pipe(P(s=>{if(null!==s.body&&!(s.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return s.body}));case"blob":return o.pipe(P(s=>{if(null!==s.body&&!(s.body instanceof Blob))throw new Error("Response is not a Blob.");return s.body}));case"text":return o.pipe(P(s=>{if(null!==s.body&&"string"!=typeof s.body)throw new Error("Response is not a string.");return s.body}));default:return o.pipe(P(s=>s.body))}case"response":return o;default:throw new Error(`Unreachable: unhandled observe type ${r.observe}}`)}}delete(e,i={}){return this.request("DELETE",e,i)}get(e,i={}){return this.request("GET",e,i)}head(e,i={}){return this.request("HEAD",e,i)}jsonp(e,i){return this.request("JSONP",e,{params:(new yi).append(i,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,i={}){return this.request("OPTIONS",e,i)}patch(e,i,r={}){return this.request("PATCH",e,Lp(r,i))}post(e,i,r={}){return this.request("POST",e,Lp(r,i))}put(e,i,r={}){return this.request("PUT",e,Lp(r,i))}}return n.\u0275fac=function(e){return new(e||n)(T(QV))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();function Qk(n,t){return t(n)}function m2(n,t){return(e,i)=>t.intercept(e,{handle:r=>n(r,i)})}const F2=new f(""),ro=new f(""),Lk=new f("");function U2(){let n=null;return(t,e)=>{null===n&&(n=(b(F2,{optional:!0})??[]).reduceRight(m2,Qk));const i=b(qs),r=i.add();return n(t,e).pipe(El(()=>i.remove(r)))}}let Kk=(()=>{class n extends QV{constructor(e,i){super(),this.backend=e,this.injector=i,this.chain=null,this.pendingTasks=b(qs)}handle(e){if(null===this.chain){const r=Array.from(new Set([...this.injector.get(ro),...this.injector.get(Lk,[])]));this.chain=r.reduceRight((l,a)=>function W2(n,t,e){return(i,r)=>e.runInContext(()=>t(i,l=>n(l,r)))}(l,a,this.injector),Qk)}const i=this.pendingTasks.add();return this.chain(e,r=>this.backend.handle(r)).pipe(El(()=>this.pendingTasks.remove(i)))}}return n.\u0275fac=function(e){return new(e||n)(T(LV),T(Gn))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const f2=/^\)\]\}',?\n/;let qk=(()=>{class n{constructor(e){this.xhrFactory=e}handle(e){if("JSONP"===e.method)throw new U(-2800,!1);const i=this.xhrFactory;return(i.\u0275loadImpl?je(i.\u0275loadImpl()):x(null)).pipe(Ht(()=>new fe(l=>{const a=i.build();if(a.open(e.method,e.urlWithParams),e.withCredentials&&(a.withCredentials=!0),e.headers.forEach((R,W)=>a.setRequestHeader(R,W.join(","))),e.headers.has("Accept")||a.setRequestHeader("Accept","application/json, text/plain, */*"),!e.headers.has("Content-Type")){const R=e.detectContentTypeHeader();null!==R&&a.setRequestHeader("Content-Type",R)}if(e.responseType){const R=e.responseType.toLowerCase();a.responseType="json"!==R?R:"text"}const o=e.serializeBody();let s=null;const V=()=>{if(null!==s)return s;const R=a.statusText||"OK",W=new Dn(a.getAllResponseHeaders()),Z=function M2(n){return"responseURL"in n&&n.responseURL?n.responseURL:/^X-Request-URL:/m.test(n.getAllResponseHeaders())?n.getResponseHeader("X-Request-URL"):null}(a)||e.url;return s=new Qp({headers:W,status:a.status,statusText:R,url:Z}),s},d=()=>{let{headers:R,status:W,statusText:Z,url:m}=V(),M=null;204!==W&&(M=typeof a.response>"u"?a.responseText:a.response),0===W&&(W=M?200:0);let S=W>=200&&W<300;if("json"===e.responseType&&"string"==typeof M){const J=M;M=M.replace(f2,"");try{M=""!==M?JSON.parse(M):null}catch(de){M=J,S&&(S=!1,M={error:de,text:M})}}S?(l.next(new yl({body:M,headers:R,status:W,statusText:Z,url:m||void 0})),l.complete()):l.error(new Hk({error:M,headers:R,status:W,statusText:Z,url:m||void 0}))},c=R=>{const{url:W}=V(),Z=new Hk({error:R,status:a.status||0,statusText:a.statusText||"Unknown Error",url:W||void 0});l.error(Z)};let h=!1;const u=R=>{h||(l.next(V()),h=!0);let W={type:Gl.DownloadProgress,loaded:R.loaded};R.lengthComputable&&(W.total=R.total),"text"===e.responseType&&a.responseText&&(W.partialText=a.responseText),l.next(W)},p=R=>{let W={type:Gl.UploadProgress,loaded:R.loaded};R.lengthComputable&&(W.total=R.total),l.next(W)};return a.addEventListener("load",d),a.addEventListener("error",c),a.addEventListener("timeout",c),a.addEventListener("abort",c),e.reportProgress&&(a.addEventListener("progress",u),null!==o&&a.upload&&a.upload.addEventListener("progress",p)),a.send(o),l.next({type:Gl.Sent}),()=>{a.removeEventListener("error",c),a.removeEventListener("abort",c),a.removeEventListener("load",d),a.removeEventListener("timeout",c),e.reportProgress&&(a.removeEventListener("progress",u),null!==o&&a.upload&&a.upload.removeEventListener("progress",p)),a.readyState!==a.DONE&&a.abort()}})))}}return n.\u0275fac=function(e){return new(e||n)(T(Sf))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();const _p=new f("XSRF_ENABLED"),$k=new f("XSRF_COOKIE_NAME",{providedIn:"root",factory:()=>"XSRF-TOKEN"}),eb=new f("XSRF_HEADER_NAME",{providedIn:"root",factory:()=>"X-XSRF-TOKEN"});class tb{}let N2=(()=>{class n{constructor(e,i,r){this.doc=e,this.platform=i,this.cookieName=r,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const e=this.doc.cookie||"";return e!==this.lastCookieString&&(this.parseCount++,this.lastToken=Wf(e,this.cookieName),this.lastCookieString=e),this.lastToken}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(Ui),T($k))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();function E2(n,t){const e=n.url.toLowerCase();if(!b(_p)||"GET"===n.method||"HEAD"===n.method||e.startsWith("http://")||e.startsWith("https://"))return t(n);const i=b(tb).getToken(),r=b(eb);return null!=i&&!n.headers.has(r)&&(n=n.clone({headers:n.headers.set(r,i)})),t(n)}var Ii=function(n){return n[n.Interceptors=0]="Interceptors",n[n.LegacyInterceptors=1]="LegacyInterceptors",n[n.CustomXsrfConfiguration=2]="CustomXsrfConfiguration",n[n.NoXsrfProtection=3]="NoXsrfProtection",n[n.JsonpSupport=4]="JsonpSupport",n[n.RequestsMadeViaParent=5]="RequestsMadeViaParent",n[n.Fetch=6]="Fetch",n}(Ii||{});function ar(n,t){return{\u0275kind:n,\u0275providers:t}}function S2(...n){const t=[Kp,qk,Kk,{provide:QV,useExisting:Kk},{provide:LV,useExisting:qk},{provide:ro,useValue:E2,multi:!0},{provide:_p,useValue:!0},{provide:tb,useClass:N2}];for(const e of n)t.push(...e.\u0275providers);return function qc(n){return{\u0275providers:n}}(t)}const nb=new f("LEGACY_INTERCEPTOR_FN");let y2=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[S2(ar(Ii.LegacyInterceptors,[{provide:nb,useFactory:U2},{provide:ro,useExisting:nb,multi:!0}]))]}),n})(),X2=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[Yn,Yn]}),n})();const j2=["addListener","removeListener"],z2=["addEventListener","removeEventListener"],H2=["on","off"];function $p(n,t,e,i){if(q(e)&&(i=e,e=void 0),i)return $p(n,t,e).pipe(Rp(i));const[r,l]=function Q2(n){return q(n.addEventListener)&&q(n.removeEventListener)}(n)?z2.map(a=>o=>n[a](t,o,e)):function B2(n){return q(n.addListener)&&q(n.removeListener)}(n)?j2.map(ob(n,t)):function P2(n){return q(n.on)&&q(n.off)}(n)?H2.map(ob(n,t)):[];if(!r&&Bd(n))return Le(a=>$p(a,t,e))(ht(n));if(!r)throw new TypeError("Invalid event target");return new fe(a=>{const o=(...s)=>a.next(1<s.length?s:s[0]);return r(o),()=>l(o)})}function ob(n,t){return e=>i=>n[e](t,i)}const ao={schedule(n){let t=requestAnimationFrame,e=cancelAnimationFrame;const{delegate:i}=ao;i&&(t=i.requestAnimationFrame,e=i.cancelAnimationFrame);const r=t(l=>{e=void 0,n(l)});return new $e(()=>e?.(r))},requestAnimationFrame(...n){const{delegate:t}=ao;return(t?.requestAnimationFrame||requestAnimationFrame)(...n)},cancelAnimationFrame(...n){const{delegate:t}=ao;return(t?.cancelAnimationFrame||cancelAnimationFrame)(...n)},delegate:void 0};new class K2 extends up{flush(t){this._active=!0;const e=this._scheduled;this._scheduled=void 0;const{actions:i}=this;let r;t=t||i.shift();do{if(r=t.execute(t.state,t.delay))break}while((t=i[0])&&t.id===e&&i.shift());if(this._active=!1,r){for(;(t=i[0])&&t.id===e&&i.shift();)t.unsubscribe();throw r}}}(class L2 extends hp{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}requestAsyncId(t,e,i=0){return null!==i&&i>0?super.requestAsyncId(t,e,i):(t.actions.push(this),t._scheduled||(t._scheduled=ao.requestAnimationFrame(()=>t.flush(void 0))))}recycleAsyncId(t,e,i=0){var r;if(null!=i?i>0:this.delay>0)return super.recycleAsyncId(t,e,i);const{actions:l}=t;null!=e&&(null===(r=l[l.length-1])||void 0===r?void 0:r.id)!==e&&(ao.cancelAnimationFrame(e),t._scheduled=void 0)}});let eR,q2=1;const ed={};function sb(n){return n in ed&&(delete ed[n],!0)}const $2={setImmediate(n){const t=q2++;return ed[t]=!0,eR||(eR=Promise.resolve()),eR.then(()=>sb(t)&&n()),t},clearImmediate(n){sb(n)}},{setImmediate:eO,clearImmediate:tO}=$2,td={setImmediate(...n){const{delegate:t}=td;return(t?.setImmediate||eO)(...n)},clearImmediate(n){const{delegate:t}=td;return(t?.clearImmediate||tO)(n)},delegate:void 0};new class iO extends up{flush(t){this._active=!0;const e=this._scheduled;this._scheduled=void 0;const{actions:i}=this;let r;t=t||i.shift();do{if(r=t.execute(t.state,t.delay))break}while((t=i[0])&&t.id===e&&i.shift());if(this._active=!1,r){for(;(t=i[0])&&t.id===e&&i.shift();)t.unsubscribe();throw r}}}(class nO extends hp{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}requestAsyncId(t,e,i=0){return null!==i&&i>0?super.requestAsyncId(t,e,i):(t.actions.push(this),t._scheduled||(t._scheduled=td.setImmediate(t.flush.bind(t,void 0))))}recycleAsyncId(t,e,i=0){var r;if(null!=i?i>0:this.delay>0)return super.recycleAsyncId(t,e,i);const{actions:l}=t;null!=e&&(null===(r=l[l.length-1])||void 0===r?void 0:r.id)!==e&&(td.clearImmediate(e),t._scheduled===e&&(t._scheduled=void 0))}});function Vb(n,t=pp){return function lO(n){return Ie((t,e)=>{let i=!1,r=null,l=null,a=!1;const o=()=>{if(l?.unsubscribe(),l=null,i){i=!1;const V=r;r=null,e.next(V)}a&&e.complete()},s=()=>{l=null,a&&e.complete()};t.subscribe(Ne(e,V=>{i=!0,r=V,l||ht(n(V)).subscribe(l=Ne(e,o,s))},()=>{a=!0,(!i||!l||l.closed)&&e.complete()}))})}(()=>function oO(n=0,t,e=SD){let i=-1;return null!=t&&(Fm(t)?e=t:i=t),new fe(r=>{let l=function aO(n){return n instanceof Date&&!isNaN(n)}(n)?+n-e.now():n;l<0&&(l=0);let a=0;return e.schedule(function(){r.closed||(r.next(a++),0<=i?this.schedule(void 0,i):r.complete())},l)})}(n,t))}let db=(()=>{class n{constructor(e,i,r){this._ngZone=e,this._platform=i,this._scrolled=new he,this._globalSubscription=null,this._scrolledCount=0,this.scrollContainers=new Map,this._document=r}register(e){this.scrollContainers.has(e)||this.scrollContainers.set(e,e.elementScrolled().subscribe(()=>this._scrolled.next(e)))}deregister(e){const i=this.scrollContainers.get(e);i&&(i.unsubscribe(),this.scrollContainers.delete(e))}scrolled(e=20){return this._platform.isBrowser?new fe(i=>{this._globalSubscription||this._addGlobalListener();const r=e>0?this._scrolled.pipe(Vb(e)).subscribe(i):this._scrolled.subscribe(i);return this._scrolledCount++,()=>{r.unsubscribe(),this._scrolledCount--,this._scrolledCount||this._removeGlobalListener()}}):x()}ngOnDestroy(){this._removeGlobalListener(),this.scrollContainers.forEach((e,i)=>this.deregister(i)),this._scrolled.complete()}ancestorScrolled(e,i){const r=this.getAncestorScrollContainers(e);return this.scrolled(i).pipe(Ot(l=>!l||r.indexOf(l)>-1))}getAncestorScrollContainers(e){const i=[];return this.scrollContainers.forEach((r,l)=>{this._scrollableContainsElement(l,e)&&i.push(l)}),i}_getWindow(){return this._document.defaultView||window}_scrollableContainsElement(e,i){let r=Wl(i),l=e.getElementRef().nativeElement;do{if(r==l)return!0}while(r=r.parentElement);return!1}_addGlobalListener(){this._globalSubscription=this._ngZone.runOutsideAngular(()=>$p(this._getWindow().document,"scroll").subscribe(()=>this._scrolled.next()))}_removeGlobalListener(){this._globalSubscription&&(this._globalSubscription.unsubscribe(),this._globalSubscription=null)}}return n.\u0275fac=function(e){return new(e||n)(T(K),T(nn),T(L,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),cb=(()=>{class n{constructor(e,i,r){this._platform=e,this._change=new he,this._changeListener=l=>{this._change.next(l)},this._document=r,i.runOutsideAngular(()=>{if(e.isBrowser){const l=this._getWindow();l.addEventListener("resize",this._changeListener),l.addEventListener("orientationchange",this._changeListener)}this.change().subscribe(()=>this._viewportSize=null)})}ngOnDestroy(){if(this._platform.isBrowser){const e=this._getWindow();e.removeEventListener("resize",this._changeListener),e.removeEventListener("orientationchange",this._changeListener)}this._change.complete()}getViewportSize(){this._viewportSize||this._updateViewportSize();const e={width:this._viewportSize.width,height:this._viewportSize.height};return this._platform.isBrowser||(this._viewportSize=null),e}getViewportRect(){const e=this.getViewportScrollPosition(),{width:i,height:r}=this.getViewportSize();return{top:e.top,left:e.left,bottom:e.top+r,right:e.left+i,height:r,width:i}}getViewportScrollPosition(){if(!this._platform.isBrowser)return{top:0,left:0};const e=this._document,i=this._getWindow(),r=e.documentElement,l=r.getBoundingClientRect();return{top:-l.top||e.body.scrollTop||i.scrollY||r.scrollTop||0,left:-l.left||e.body.scrollLeft||i.scrollX||r.scrollLeft||0}}change(e=20){return e>0?this._change.pipe(Vb(e)):this._change}_getWindow(){return this._document.defaultView||window}_updateViewportSize(){const e=this._getWindow();this._viewportSize=this._platform.isBrowser?{width:e.innerWidth,height:e.innerHeight}:{width:0,height:0}}}return n.\u0275fac=function(e){return new(e||n)(T(nn),T(K),T(L,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),nd=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})(),hb=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[Pa,nd,Pa,nd]}),n})();class tR{attach(t){return this._attachedHost=t,t.attach(this)}detach(){let t=this._attachedHost;null!=t&&(this._attachedHost=null,t.detach())}get isAttached(){return null!=this._attachedHost}setAttachedHost(t){this._attachedHost=t}}class ub extends tR{constructor(t,e,i,r,l){super(),this.component=t,this.viewContainerRef=e,this.injector=i,this.componentFactoryResolver=r,this.projectableNodes=l}}class dO extends tR{constructor(t,e,i,r){super(),this.templateRef=t,this.viewContainerRef=e,this.context=i,this.injector=r}get origin(){return this.templateRef.elementRef}attach(t,e=this.context){return this.context=e,super.attach(t)}detach(){return this.context=void 0,super.detach()}}class cO extends tR{constructor(t){super(),this.element=t instanceof Ue?t.nativeElement:t}}class hO{constructor(){this._isDisposed=!1,this.attachDomPortal=null}hasAttached(){return!!this._attachedPortal}attach(t){return t instanceof ub?(this._attachedPortal=t,this.attachComponentPortal(t)):t instanceof dO?(this._attachedPortal=t,this.attachTemplatePortal(t)):this.attachDomPortal&&t instanceof cO?(this._attachedPortal=t,this.attachDomPortal(t)):void 0}detach(){this._attachedPortal&&(this._attachedPortal.setAttachedHost(null),this._attachedPortal=null),this._invokeDisposeFn()}dispose(){this.hasAttached()&&this.detach(),this._invokeDisposeFn(),this._isDisposed=!0}setDisposeFn(t){this._disposeFn=t}_invokeDisposeFn(){this._disposeFn&&(this._disposeFn(),this._disposeFn=null)}}class uO extends hO{constructor(t,e,i,r,l){super(),this.outletElement=t,this._componentFactoryResolver=e,this._appRef=i,this._defaultInjector=r,this.attachDomPortal=a=>{const o=a.element,s=this._document.createComment("dom-portal");o.parentNode.insertBefore(s,o),this.outletElement.appendChild(o),this._attachedPortal=a,super.setDisposeFn(()=>{s.parentNode&&s.parentNode.replaceChild(o,s)})},this._document=l}attachComponentPortal(t){const i=(t.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(t.component);let r;return t.viewContainerRef?(r=t.viewContainerRef.createComponent(i,t.viewContainerRef.length,t.injector||t.viewContainerRef.injector,t.projectableNodes||void 0),this.setDisposeFn(()=>r.destroy())):(r=i.create(t.injector||this._defaultInjector||vt.NULL),this._appRef.attachView(r.hostView),this.setDisposeFn(()=>{this._appRef.viewCount>0&&this._appRef.detachView(r.hostView),r.destroy()})),this.outletElement.appendChild(this._getComponentRootNode(r)),this._attachedPortal=t,r}attachTemplatePortal(t){let e=t.viewContainerRef,i=e.createEmbeddedView(t.templateRef,t.context,{injector:t.injector});return i.rootNodes.forEach(r=>this.outletElement.appendChild(r)),i.detectChanges(),this.setDisposeFn(()=>{let r=e.indexOf(i);-1!==r&&e.remove(r)}),this._attachedPortal=t,i}dispose(){super.dispose(),this.outletElement.remove()}_getComponentRootNode(t){return t.hostView.rootNodes[0]}}let pO=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})();const pb=aD();class RO{constructor(t,e){this._viewportRuler=t,this._previousHTMLStyles={top:"",left:""},this._isEnabled=!1,this._document=e}attach(){}enable(){if(this._canBeEnabled()){const t=this._document.documentElement;this._previousScrollPosition=this._viewportRuler.getViewportScrollPosition(),this._previousHTMLStyles.left=t.style.left||"",this._previousHTMLStyles.top=t.style.top||"",t.style.left=Xe(-this._previousScrollPosition.left),t.style.top=Xe(-this._previousScrollPosition.top),t.classList.add("cdk-global-scrollblock"),this._isEnabled=!0}}disable(){if(this._isEnabled){const t=this._document.documentElement,i=t.style,r=this._document.body.style,l=i.scrollBehavior||"",a=r.scrollBehavior||"";this._isEnabled=!1,i.left=this._previousHTMLStyles.left,i.top=this._previousHTMLStyles.top,t.classList.remove("cdk-global-scrollblock"),pb&&(i.scrollBehavior=r.scrollBehavior="auto"),window.scroll(this._previousScrollPosition.left,this._previousScrollPosition.top),pb&&(i.scrollBehavior=l,r.scrollBehavior=a)}}_canBeEnabled(){if(this._document.documentElement.classList.contains("cdk-global-scrollblock")||this._isEnabled)return!1;const e=this._document.body,i=this._viewportRuler.getViewportSize();return e.scrollHeight>i.height||e.scrollWidth>i.width}}class mO{constructor(t,e,i,r){this._scrollDispatcher=t,this._ngZone=e,this._viewportRuler=i,this._config=r,this._scrollSubscription=null,this._detach=()=>{this.disable(),this._overlayRef.hasAttached()&&this._ngZone.run(()=>this._overlayRef.detach())}}attach(t){this._overlayRef=t}enable(){if(this._scrollSubscription)return;const t=this._scrollDispatcher.scrolled(0).pipe(Ot(e=>!e||!this._overlayRef.overlayElement.contains(e.getElementRef().nativeElement)));this._config&&this._config.threshold&&this._config.threshold>1?(this._initialScrollPosition=this._viewportRuler.getViewportScrollPosition().top,this._scrollSubscription=t.subscribe(()=>{const e=this._viewportRuler.getViewportScrollPosition().top;Math.abs(e-this._initialScrollPosition)>this._config.threshold?this._detach():this._overlayRef.updatePosition()})):this._scrollSubscription=t.subscribe(this._detach)}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}class Rb{enable(){}disable(){}attach(){}}function nR(n,t){return t.some(e=>n.bottom<e.top||n.top>e.bottom||n.right<e.left||n.left>e.right)}function mb(n,t){return t.some(e=>n.top<e.top||n.bottom>e.bottom||n.left<e.left||n.right>e.right)}class WO{constructor(t,e,i,r){this._scrollDispatcher=t,this._viewportRuler=e,this._ngZone=i,this._config=r,this._scrollSubscription=null}attach(t){this._overlayRef=t}enable(){this._scrollSubscription||(this._scrollSubscription=this._scrollDispatcher.scrolled(this._config?this._config.scrollThrottle:0).subscribe(()=>{if(this._overlayRef.updatePosition(),this._config&&this._config.autoClose){const e=this._overlayRef.overlayElement.getBoundingClientRect(),{width:i,height:r}=this._viewportRuler.getViewportSize();nR(e,[{width:i,height:r,bottom:r,right:i,top:0,left:0}])&&(this.disable(),this._ngZone.run(()=>this._overlayRef.detach()))}}))}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}let FO=(()=>{class n{constructor(e,i,r,l){this._scrollDispatcher=e,this._viewportRuler=i,this._ngZone=r,this.noop=()=>new Rb,this.close=a=>new mO(this._scrollDispatcher,this._ngZone,this._viewportRuler,a),this.block=()=>new RO(this._viewportRuler,this._document),this.reposition=a=>new WO(this._scrollDispatcher,this._viewportRuler,this._ngZone,a),this._document=l}}return n.\u0275fac=function(e){return new(e||n)(T(db),T(cb),T(K),T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class UO{constructor(t){if(this.scrollStrategy=new Rb,this.panelClass="",this.hasBackdrop=!1,this.backdropClass="cdk-overlay-dark-backdrop",this.disposeOnNavigation=!1,t){const e=Object.keys(t);for(const i of e)void 0!==t[i]&&(this[i]=t[i])}}}class TO{constructor(t,e){this.connectionPair=t,this.scrollableViewProperties=e}}let Wb=(()=>{class n{constructor(e){this._attachedOverlays=[],this._document=e}ngOnDestroy(){this.detach()}add(e){this.remove(e),this._attachedOverlays.push(e)}remove(e){const i=this._attachedOverlays.indexOf(e);i>-1&&this._attachedOverlays.splice(i,1),0===this._attachedOverlays.length&&this.detach()}}return n.\u0275fac=function(e){return new(e||n)(T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),ZO=(()=>{class n extends Wb{constructor(e,i){super(e),this._ngZone=i,this._keydownListener=r=>{const l=this._attachedOverlays;for(let a=l.length-1;a>-1;a--)if(l[a]._keydownEvents.observers.length>0){const o=l[a]._keydownEvents;this._ngZone?this._ngZone.run(()=>o.next(r)):o.next(r);break}}}add(e){super.add(e),this._isAttached||(this._ngZone?this._ngZone.runOutsideAngular(()=>this._document.body.addEventListener("keydown",this._keydownListener)):this._document.body.addEventListener("keydown",this._keydownListener),this._isAttached=!0)}detach(){this._isAttached&&(this._document.body.removeEventListener("keydown",this._keydownListener),this._isAttached=!1)}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(K,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),gO=(()=>{class n extends Wb{constructor(e,i,r){super(e),this._platform=i,this._ngZone=r,this._cursorStyleIsSet=!1,this._pointerDownListener=l=>{this._pointerDownEventTarget=Ni(l)},this._clickListener=l=>{const a=Ni(l),o="click"===l.type&&this._pointerDownEventTarget?this._pointerDownEventTarget:a;this._pointerDownEventTarget=null;const s=this._attachedOverlays.slice();for(let V=s.length-1;V>-1;V--){const d=s[V];if(d._outsidePointerEvents.observers.length<1||!d.hasAttached())continue;if(d.overlayElement.contains(a)||d.overlayElement.contains(o))break;const c=d._outsidePointerEvents;this._ngZone?this._ngZone.run(()=>c.next(l)):c.next(l)}}}add(e){if(super.add(e),!this._isAttached){const i=this._document.body;this._ngZone?this._ngZone.runOutsideAngular(()=>this._addEventListeners(i)):this._addEventListeners(i),this._platform.IOS&&!this._cursorStyleIsSet&&(this._cursorOriginalValue=i.style.cursor,i.style.cursor="pointer",this._cursorStyleIsSet=!0),this._isAttached=!0}}detach(){if(this._isAttached){const e=this._document.body;e.removeEventListener("pointerdown",this._pointerDownListener,!0),e.removeEventListener("click",this._clickListener,!0),e.removeEventListener("auxclick",this._clickListener,!0),e.removeEventListener("contextmenu",this._clickListener,!0),this._platform.IOS&&this._cursorStyleIsSet&&(e.style.cursor=this._cursorOriginalValue,this._cursorStyleIsSet=!1),this._isAttached=!1}}_addEventListeners(e){e.addEventListener("pointerdown",this._pointerDownListener,!0),e.addEventListener("click",this._clickListener,!0),e.addEventListener("auxclick",this._clickListener,!0),e.addEventListener("contextmenu",this._clickListener,!0)}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(nn),T(K,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Fb=(()=>{class n{constructor(e,i){this._platform=i,this._document=e}ngOnDestroy(){this._containerElement?.remove()}getContainerElement(){return this._containerElement||this._createContainer(),this._containerElement}_createContainer(){const e="cdk-overlay-container";if(this._platform.isBrowser||Vp()){const r=this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);for(let l=0;l<r.length;l++)r[l].remove()}const i=this._document.createElement("div");i.classList.add(e),Vp()?i.setAttribute("platform","test"):this._platform.isBrowser||i.setAttribute("platform","server"),this._document.body.appendChild(i),this._containerElement=i}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(nn))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class fO{constructor(t,e,i,r,l,a,o,s,V,d=!1){this._portalOutlet=t,this._host=e,this._pane=i,this._config=r,this._ngZone=l,this._keyboardDispatcher=a,this._document=o,this._location=s,this._outsideClickDispatcher=V,this._animationsDisabled=d,this._backdropElement=null,this._backdropClick=new he,this._attachments=new he,this._detachments=new he,this._locationChanges=$e.EMPTY,this._backdropClickHandler=c=>this._backdropClick.next(c),this._backdropTransitionendHandler=c=>{this._disposeBackdrop(c.target)},this._keydownEvents=new he,this._outsidePointerEvents=new he,r.scrollStrategy&&(this._scrollStrategy=r.scrollStrategy,this._scrollStrategy.attach(this)),this._positionStrategy=r.positionStrategy}get overlayElement(){return this._pane}get backdropElement(){return this._backdropElement}get hostElement(){return this._host}attach(t){!this._host.parentElement&&this._previousHostParent&&this._previousHostParent.appendChild(this._host);const e=this._portalOutlet.attach(t);return this._positionStrategy&&this._positionStrategy.attach(this),this._updateStackingOrder(),this._updateElementSize(),this._updateElementDirection(),this._scrollStrategy&&this._scrollStrategy.enable(),this._ngZone.onStable.pipe(vn(1)).subscribe(()=>{this.hasAttached()&&this.updatePosition()}),this._togglePointerEvents(!0),this._config.hasBackdrop&&this._attachBackdrop(),this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!0),this._attachments.next(),this._keyboardDispatcher.add(this),this._config.disposeOnNavigation&&(this._locationChanges=this._location.subscribe(()=>this.dispose())),this._outsideClickDispatcher.add(this),"function"==typeof e?.onDestroy&&e.onDestroy(()=>{this.hasAttached()&&this._ngZone.runOutsideAngular(()=>Promise.resolve().then(()=>this.detach()))}),e}detach(){if(!this.hasAttached())return;this.detachBackdrop(),this._togglePointerEvents(!1),this._positionStrategy&&this._positionStrategy.detach&&this._positionStrategy.detach(),this._scrollStrategy&&this._scrollStrategy.disable();const t=this._portalOutlet.detach();return this._detachments.next(),this._keyboardDispatcher.remove(this),this._detachContentWhenStable(),this._locationChanges.unsubscribe(),this._outsideClickDispatcher.remove(this),t}dispose(){const t=this.hasAttached();this._positionStrategy&&this._positionStrategy.dispose(),this._disposeScrollStrategy(),this._disposeBackdrop(this._backdropElement),this._locationChanges.unsubscribe(),this._keyboardDispatcher.remove(this),this._portalOutlet.dispose(),this._attachments.complete(),this._backdropClick.complete(),this._keydownEvents.complete(),this._outsidePointerEvents.complete(),this._outsideClickDispatcher.remove(this),this._host?.remove(),this._previousHostParent=this._pane=this._host=null,t&&this._detachments.next(),this._detachments.complete()}hasAttached(){return this._portalOutlet.hasAttached()}backdropClick(){return this._backdropClick}attachments(){return this._attachments}detachments(){return this._detachments}keydownEvents(){return this._keydownEvents}outsidePointerEvents(){return this._outsidePointerEvents}getConfig(){return this._config}updatePosition(){this._positionStrategy&&this._positionStrategy.apply()}updatePositionStrategy(t){t!==this._positionStrategy&&(this._positionStrategy&&this._positionStrategy.dispose(),this._positionStrategy=t,this.hasAttached()&&(t.attach(this),this.updatePosition()))}updateSize(t){this._config={...this._config,...t},this._updateElementSize()}setDirection(t){this._config={...this._config,direction:t},this._updateElementDirection()}addPanelClass(t){this._pane&&this._toggleClasses(this._pane,t,!0)}removePanelClass(t){this._pane&&this._toggleClasses(this._pane,t,!1)}getDirection(){const t=this._config.direction;return t?"string"==typeof t?t:t.value:"ltr"}updateScrollStrategy(t){t!==this._scrollStrategy&&(this._disposeScrollStrategy(),this._scrollStrategy=t,this.hasAttached()&&(t.attach(this),t.enable()))}_updateElementDirection(){this._host.setAttribute("dir",this.getDirection())}_updateElementSize(){if(!this._pane)return;const t=this._pane.style;t.width=Xe(this._config.width),t.height=Xe(this._config.height),t.minWidth=Xe(this._config.minWidth),t.minHeight=Xe(this._config.minHeight),t.maxWidth=Xe(this._config.maxWidth),t.maxHeight=Xe(this._config.maxHeight)}_togglePointerEvents(t){this._pane.style.pointerEvents=t?"":"none"}_attachBackdrop(){const t="cdk-overlay-backdrop-showing";this._backdropElement=this._document.createElement("div"),this._backdropElement.classList.add("cdk-overlay-backdrop"),this._animationsDisabled&&this._backdropElement.classList.add("cdk-overlay-backdrop-noop-animation"),this._config.backdropClass&&this._toggleClasses(this._backdropElement,this._config.backdropClass,!0),this._host.parentElement.insertBefore(this._backdropElement,this._host),this._backdropElement.addEventListener("click",this._backdropClickHandler),!this._animationsDisabled&&typeof requestAnimationFrame<"u"?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>{this._backdropElement&&this._backdropElement.classList.add(t)})}):this._backdropElement.classList.add(t)}_updateStackingOrder(){this._host.nextSibling&&this._host.parentNode.appendChild(this._host)}detachBackdrop(){const t=this._backdropElement;if(t){if(this._animationsDisabled)return void this._disposeBackdrop(t);t.classList.remove("cdk-overlay-backdrop-showing"),this._ngZone.runOutsideAngular(()=>{t.addEventListener("transitionend",this._backdropTransitionendHandler)}),t.style.pointerEvents="none",this._backdropTimeout=this._ngZone.runOutsideAngular(()=>setTimeout(()=>{this._disposeBackdrop(t)},500))}}_toggleClasses(t,e,i){const r=ZV(e||[]).filter(l=>!!l);r.length&&(i?t.classList.add(...r):t.classList.remove(...r))}_detachContentWhenStable(){this._ngZone.runOutsideAngular(()=>{const t=this._ngZone.onStable.pipe(De(zl(this._attachments,this._detachments))).subscribe(()=>{(!this._pane||!this._host||0===this._pane.children.length)&&(this._pane&&this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!1),this._host&&this._host.parentElement&&(this._previousHostParent=this._host.parentElement,this._host.remove()),t.unsubscribe())})})}_disposeScrollStrategy(){const t=this._scrollStrategy;t&&(t.disable(),t.detach&&t.detach())}_disposeBackdrop(t){t&&(t.removeEventListener("click",this._backdropClickHandler),t.removeEventListener("transitionend",this._backdropTransitionendHandler),t.remove(),this._backdropElement===t&&(this._backdropElement=null)),this._backdropTimeout&&(clearTimeout(this._backdropTimeout),this._backdropTimeout=void 0)}}const Ub="cdk-overlay-connected-position-bounding-box",MO=/([A-Za-z%]+)$/;class kO{get positions(){return this._preferredPositions}constructor(t,e,i,r,l){this._viewportRuler=e,this._document=i,this._platform=r,this._overlayContainer=l,this._lastBoundingBoxSize={width:0,height:0},this._isPushed=!1,this._canPush=!0,this._growAfterOpen=!1,this._hasFlexibleDimensions=!0,this._positionLocked=!1,this._viewportMargin=0,this._scrollables=[],this._preferredPositions=[],this._positionChanges=new he,this._resizeSubscription=$e.EMPTY,this._offsetX=0,this._offsetY=0,this._appliedPanelClasses=[],this.positionChanges=this._positionChanges,this.setOrigin(t)}attach(t){this._validatePositions(),t.hostElement.classList.add(Ub),this._overlayRef=t,this._boundingBox=t.hostElement,this._pane=t.overlayElement,this._isDisposed=!1,this._isInitialRender=!0,this._lastPosition=null,this._resizeSubscription.unsubscribe(),this._resizeSubscription=this._viewportRuler.change().subscribe(()=>{this._isInitialRender=!0,this.apply()})}apply(){if(this._isDisposed||!this._platform.isBrowser)return;if(!this._isInitialRender&&this._positionLocked&&this._lastPosition)return void this.reapplyLastPosition();this._clearPanelClasses(),this._resetOverlayElementStyles(),this._resetBoundingBoxStyles(),this._viewportRect=this._getNarrowedViewportRect(),this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();const t=this._originRect,e=this._overlayRect,i=this._viewportRect,r=this._containerRect,l=[];let a;for(let o of this._preferredPositions){let s=this._getOriginPoint(t,r,o),V=this._getOverlayPoint(s,e,o),d=this._getOverlayFit(V,e,i,o);if(d.isCompletelyWithinViewport)return this._isPushed=!1,void this._applyPosition(o,s);this._canFitWithFlexibleDimensions(d,V,i)?l.push({position:o,origin:s,overlayRect:e,boundingBoxRect:this._calculateBoundingBoxRect(s,o)}):(!a||a.overlayFit.visibleArea<d.visibleArea)&&(a={overlayFit:d,overlayPoint:V,originPoint:s,position:o,overlayRect:e})}if(l.length){let o=null,s=-1;for(const V of l){const d=V.boundingBoxRect.width*V.boundingBoxRect.height*(V.position.weight||1);d>s&&(s=d,o=V)}return this._isPushed=!1,void this._applyPosition(o.position,o.origin)}if(this._canPush)return this._isPushed=!0,void this._applyPosition(a.position,a.originPoint);this._applyPosition(a.position,a.originPoint)}detach(){this._clearPanelClasses(),this._lastPosition=null,this._previousPushAmount=null,this._resizeSubscription.unsubscribe()}dispose(){this._isDisposed||(this._boundingBox&&sr(this._boundingBox.style,{top:"",left:"",right:"",bottom:"",height:"",width:"",alignItems:"",justifyContent:""}),this._pane&&this._resetOverlayElementStyles(),this._overlayRef&&this._overlayRef.hostElement.classList.remove(Ub),this.detach(),this._positionChanges.complete(),this._overlayRef=this._boundingBox=null,this._isDisposed=!0)}reapplyLastPosition(){if(this._isDisposed||!this._platform.isBrowser)return;const t=this._lastPosition;if(t){this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._viewportRect=this._getNarrowedViewportRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();const e=this._getOriginPoint(this._originRect,this._containerRect,t);this._applyPosition(t,e)}else this.apply()}withScrollableContainers(t){return this._scrollables=t,this}withPositions(t){return this._preferredPositions=t,-1===t.indexOf(this._lastPosition)&&(this._lastPosition=null),this._validatePositions(),this}withViewportMargin(t){return this._viewportMargin=t,this}withFlexibleDimensions(t=!0){return this._hasFlexibleDimensions=t,this}withGrowAfterOpen(t=!0){return this._growAfterOpen=t,this}withPush(t=!0){return this._canPush=t,this}withLockedPosition(t=!0){return this._positionLocked=t,this}setOrigin(t){return this._origin=t,this}withDefaultOffsetX(t){return this._offsetX=t,this}withDefaultOffsetY(t){return this._offsetY=t,this}withTransformOriginOn(t){return this._transformOriginSelector=t,this}_getOriginPoint(t,e,i){let r,l;if("center"==i.originX)r=t.left+t.width/2;else{const a=this._isRtl()?t.right:t.left,o=this._isRtl()?t.left:t.right;r="start"==i.originX?a:o}return e.left<0&&(r-=e.left),l="center"==i.originY?t.top+t.height/2:"top"==i.originY?t.top:t.bottom,e.top<0&&(l-=e.top),{x:r,y:l}}_getOverlayPoint(t,e,i){let r,l;return r="center"==i.overlayX?-e.width/2:"start"===i.overlayX?this._isRtl()?-e.width:0:this._isRtl()?0:-e.width,l="center"==i.overlayY?-e.height/2:"top"==i.overlayY?0:-e.height,{x:t.x+r,y:t.y+l}}_getOverlayFit(t,e,i,r){const l=Zb(e);let{x:a,y:o}=t,s=this._getOffset(r,"x"),V=this._getOffset(r,"y");s&&(a+=s),V&&(o+=V);let h=0-o,u=o+l.height-i.height,p=this._subtractOverflows(l.width,0-a,a+l.width-i.width),R=this._subtractOverflows(l.height,h,u),W=p*R;return{visibleArea:W,isCompletelyWithinViewport:l.width*l.height===W,fitsInViewportVertically:R===l.height,fitsInViewportHorizontally:p==l.width}}_canFitWithFlexibleDimensions(t,e,i){if(this._hasFlexibleDimensions){const r=i.bottom-e.y,l=i.right-e.x,a=Tb(this._overlayRef.getConfig().minHeight),o=Tb(this._overlayRef.getConfig().minWidth);return(t.fitsInViewportVertically||null!=a&&a<=r)&&(t.fitsInViewportHorizontally||null!=o&&o<=l)}return!1}_pushOverlayOnScreen(t,e,i){if(this._previousPushAmount&&this._positionLocked)return{x:t.x+this._previousPushAmount.x,y:t.y+this._previousPushAmount.y};const r=Zb(e),l=this._viewportRect,a=Math.max(t.x+r.width-l.width,0),o=Math.max(t.y+r.height-l.height,0),s=Math.max(l.top-i.top-t.y,0),V=Math.max(l.left-i.left-t.x,0);let d=0,c=0;return d=r.width<=l.width?V||-a:t.x<this._viewportMargin?l.left-i.left-t.x:0,c=r.height<=l.height?s||-o:t.y<this._viewportMargin?l.top-i.top-t.y:0,this._previousPushAmount={x:d,y:c},{x:t.x+d,y:t.y+c}}_applyPosition(t,e){if(this._setTransformOrigin(t),this._setOverlayElementStyles(e,t),this._setBoundingBoxStyles(e,t),t.panelClass&&this._addPanelClasses(t.panelClass),this._lastPosition=t,this._positionChanges.observers.length){const i=this._getScrollVisibility(),r=new TO(t,i);this._positionChanges.next(r)}this._isInitialRender=!1}_setTransformOrigin(t){if(!this._transformOriginSelector)return;const e=this._boundingBox.querySelectorAll(this._transformOriginSelector);let i,r=t.overlayY;i="center"===t.overlayX?"center":this._isRtl()?"start"===t.overlayX?"right":"left":"start"===t.overlayX?"left":"right";for(let l=0;l<e.length;l++)e[l].style.transformOrigin=`${i} ${r}`}_calculateBoundingBoxRect(t,e){const i=this._viewportRect,r=this._isRtl();let l,a,o,d,c,h;if("top"===e.overlayY)a=t.y,l=i.height-a+this._viewportMargin;else if("bottom"===e.overlayY)o=i.height-t.y+2*this._viewportMargin,l=i.height-o+this._viewportMargin;else{const u=Math.min(i.bottom-t.y+i.top,t.y),p=this._lastBoundingBoxSize.height;l=2*u,a=t.y-u,l>p&&!this._isInitialRender&&!this._growAfterOpen&&(a=t.y-p/2)}if("end"===e.overlayX&&!r||"start"===e.overlayX&&r)h=i.width-t.x+this._viewportMargin,d=t.x-this._viewportMargin;else if("start"===e.overlayX&&!r||"end"===e.overlayX&&r)c=t.x,d=i.right-t.x;else{const u=Math.min(i.right-t.x+i.left,t.x),p=this._lastBoundingBoxSize.width;d=2*u,c=t.x-u,d>p&&!this._isInitialRender&&!this._growAfterOpen&&(c=t.x-p/2)}return{top:a,left:c,bottom:o,right:h,width:d,height:l}}_setBoundingBoxStyles(t,e){const i=this._calculateBoundingBoxRect(t,e);!this._isInitialRender&&!this._growAfterOpen&&(i.height=Math.min(i.height,this._lastBoundingBoxSize.height),i.width=Math.min(i.width,this._lastBoundingBoxSize.width));const r={};if(this._hasExactPosition())r.top=r.left="0",r.bottom=r.right=r.maxHeight=r.maxWidth="",r.width=r.height="100%";else{const l=this._overlayRef.getConfig().maxHeight,a=this._overlayRef.getConfig().maxWidth;r.height=Xe(i.height),r.top=Xe(i.top),r.bottom=Xe(i.bottom),r.width=Xe(i.width),r.left=Xe(i.left),r.right=Xe(i.right),r.alignItems="center"===e.overlayX?"center":"end"===e.overlayX?"flex-end":"flex-start",r.justifyContent="center"===e.overlayY?"center":"bottom"===e.overlayY?"flex-end":"flex-start",l&&(r.maxHeight=Xe(l)),a&&(r.maxWidth=Xe(a))}this._lastBoundingBoxSize=i,sr(this._boundingBox.style,r)}_resetBoundingBoxStyles(){sr(this._boundingBox.style,{top:"0",left:"0",right:"0",bottom:"0",height:"",width:"",alignItems:"",justifyContent:""})}_resetOverlayElementStyles(){sr(this._pane.style,{top:"",left:"",bottom:"",right:"",position:"",transform:""})}_setOverlayElementStyles(t,e){const i={},r=this._hasExactPosition(),l=this._hasFlexibleDimensions,a=this._overlayRef.getConfig();if(r){const d=this._viewportRuler.getViewportScrollPosition();sr(i,this._getExactOverlayY(e,t,d)),sr(i,this._getExactOverlayX(e,t,d))}else i.position="static";let o="",s=this._getOffset(e,"x"),V=this._getOffset(e,"y");s&&(o+=`translateX(${s}px) `),V&&(o+=`translateY(${V}px)`),i.transform=o.trim(),a.maxHeight&&(r?i.maxHeight=Xe(a.maxHeight):l&&(i.maxHeight="")),a.maxWidth&&(r?i.maxWidth=Xe(a.maxWidth):l&&(i.maxWidth="")),sr(this._pane.style,i)}_getExactOverlayY(t,e,i){let r={top:"",bottom:""},l=this._getOverlayPoint(e,this._overlayRect,t);return this._isPushed&&(l=this._pushOverlayOnScreen(l,this._overlayRect,i)),"bottom"===t.overlayY?r.bottom=this._document.documentElement.clientHeight-(l.y+this._overlayRect.height)+"px":r.top=Xe(l.y),r}_getExactOverlayX(t,e,i){let a,r={left:"",right:""},l=this._getOverlayPoint(e,this._overlayRect,t);return this._isPushed&&(l=this._pushOverlayOnScreen(l,this._overlayRect,i)),a=this._isRtl()?"end"===t.overlayX?"left":"right":"end"===t.overlayX?"right":"left","right"===a?r.right=this._document.documentElement.clientWidth-(l.x+this._overlayRect.width)+"px":r.left=Xe(l.x),r}_getScrollVisibility(){const t=this._getOriginRect(),e=this._pane.getBoundingClientRect(),i=this._scrollables.map(r=>r.getElementRef().nativeElement.getBoundingClientRect());return{isOriginClipped:mb(t,i),isOriginOutsideView:nR(t,i),isOverlayClipped:mb(e,i),isOverlayOutsideView:nR(e,i)}}_subtractOverflows(t,...e){return e.reduce((i,r)=>i-Math.max(r,0),t)}_getNarrowedViewportRect(){const t=this._document.documentElement.clientWidth,e=this._document.documentElement.clientHeight,i=this._viewportRuler.getViewportScrollPosition();return{top:i.top+this._viewportMargin,left:i.left+this._viewportMargin,right:i.left+t-this._viewportMargin,bottom:i.top+e-this._viewportMargin,width:t-2*this._viewportMargin,height:e-2*this._viewportMargin}}_isRtl(){return"rtl"===this._overlayRef.getDirection()}_hasExactPosition(){return!this._hasFlexibleDimensions||this._isPushed}_getOffset(t,e){return"x"===e?null==t.offsetX?this._offsetX:t.offsetX:null==t.offsetY?this._offsetY:t.offsetY}_validatePositions(){}_addPanelClasses(t){this._pane&&ZV(t).forEach(e=>{""!==e&&-1===this._appliedPanelClasses.indexOf(e)&&(this._appliedPanelClasses.push(e),this._pane.classList.add(e))})}_clearPanelClasses(){this._pane&&(this._appliedPanelClasses.forEach(t=>{this._pane.classList.remove(t)}),this._appliedPanelClasses=[])}_getOriginRect(){const t=this._origin;if(t instanceof Ue)return t.nativeElement.getBoundingClientRect();if(t instanceof Element)return t.getBoundingClientRect();const e=t.width||0,i=t.height||0;return{top:t.y,bottom:t.y+i,left:t.x,right:t.x+e,height:i,width:e}}}function sr(n,t){for(let e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n}function Tb(n){if("number"!=typeof n&&null!=n){const[t,e]=n.split(MO);return e&&"px"!==e?null:parseFloat(t)}return n||null}function Zb(n){return{top:Math.floor(n.top),right:Math.floor(n.right),bottom:Math.floor(n.bottom),left:Math.floor(n.left),width:Math.floor(n.width),height:Math.floor(n.height)}}const gb="cdk-global-overlay-wrapper";class bO{constructor(){this._cssPosition="static",this._topOffset="",this._bottomOffset="",this._alignItems="",this._xPosition="",this._xOffset="",this._width="",this._height="",this._isDisposed=!1}attach(t){const e=t.getConfig();this._overlayRef=t,this._width&&!e.width&&t.updateSize({width:this._width}),this._height&&!e.height&&t.updateSize({height:this._height}),t.hostElement.classList.add(gb),this._isDisposed=!1}top(t=""){return this._bottomOffset="",this._topOffset=t,this._alignItems="flex-start",this}left(t=""){return this._xOffset=t,this._xPosition="left",this}bottom(t=""){return this._topOffset="",this._bottomOffset=t,this._alignItems="flex-end",this}right(t=""){return this._xOffset=t,this._xPosition="right",this}start(t=""){return this._xOffset=t,this._xPosition="start",this}end(t=""){return this._xOffset=t,this._xPosition="end",this}width(t=""){return this._overlayRef?this._overlayRef.updateSize({width:t}):this._width=t,this}height(t=""){return this._overlayRef?this._overlayRef.updateSize({height:t}):this._height=t,this}centerHorizontally(t=""){return this.left(t),this._xPosition="center",this}centerVertically(t=""){return this.top(t),this._alignItems="center",this}apply(){if(!this._overlayRef||!this._overlayRef.hasAttached())return;const t=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement.style,i=this._overlayRef.getConfig(),{width:r,height:l,maxWidth:a,maxHeight:o}=i,s=!("100%"!==r&&"100vw"!==r||a&&"100%"!==a&&"100vw"!==a),V=!("100%"!==l&&"100vh"!==l||o&&"100%"!==o&&"100vh"!==o),d=this._xPosition,c=this._xOffset,h="rtl"===this._overlayRef.getConfig().direction;let u="",p="",R="";s?R="flex-start":"center"===d?(R="center",h?p=c:u=c):h?"left"===d||"end"===d?(R="flex-end",u=c):("right"===d||"start"===d)&&(R="flex-start",p=c):"left"===d||"start"===d?(R="flex-start",u=c):("right"===d||"end"===d)&&(R="flex-end",p=c),t.position=this._cssPosition,t.marginLeft=s?"0":u,t.marginTop=V?"0":this._topOffset,t.marginBottom=this._bottomOffset,t.marginRight=s?"0":p,e.justifyContent=R,e.alignItems=V?"flex-start":this._alignItems}dispose(){if(this._isDisposed||!this._overlayRef)return;const t=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement,i=e.style;e.classList.remove(gb),i.justifyContent=i.alignItems=t.marginTop=t.marginBottom=t.marginLeft=t.marginRight=t.position="",this._overlayRef=null,this._isDisposed=!0}}let NO=(()=>{class n{constructor(e,i,r,l){this._viewportRuler=e,this._document=i,this._platform=r,this._overlayContainer=l}global(){return new bO}flexibleConnectedTo(e){return new kO(e,this._viewportRuler,this._document,this._platform,this._overlayContainer)}}return n.\u0275fac=function(e){return new(e||n)(T(cb),T(L),T(nn),T(Fb))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),EO=0,oo=(()=>{class n{constructor(e,i,r,l,a,o,s,V,d,c,h,u){this.scrollStrategies=e,this._overlayContainer=i,this._componentFactoryResolver=r,this._positionBuilder=l,this._keyboardDispatcher=a,this._injector=o,this._ngZone=s,this._document=V,this._directionality=d,this._location=c,this._outsideClickDispatcher=h,this._animationsModuleType=u}create(e){const i=this._createHostElement(),r=this._createPaneElement(i),l=this._createPortalOutlet(r),a=new UO(e);return a.direction=a.direction||this._directionality.value,new fO(l,i,r,a,this._ngZone,this._keyboardDispatcher,this._document,this._location,this._outsideClickDispatcher,"NoopAnimations"===this._animationsModuleType)}position(){return this._positionBuilder}_createPaneElement(e){const i=this._document.createElement("div");return i.id="cdk-overlay-"+EO++,i.classList.add("cdk-overlay-pane"),e.appendChild(i),i}_createHostElement(){const e=this._document.createElement("div");return this._overlayContainer.getContainerElement().appendChild(e),e}_createPortalOutlet(e){return this._appRef||(this._appRef=this._injector.get(Mi)),new uO(e,this._componentFactoryResolver,this._appRef,this._injector,this._document)}}return n.\u0275fac=function(e){return new(e||n)(T(FO),T(Fb),T(Fa),T(NO),T(ZO),T(vt),T(K),T(L),T(yV),T(lV),T(gO),T(Ti,8))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const yO={provide:new f("cdk-connected-overlay-scroll-strategy"),deps:[oo],useFactory:function GO(n){return()=>n.scrollStrategies.reposition()}};let fb=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[oo,yO],imports:[Pa,pO,hb,hb]}),n})();const IO=["tooltip"],Mb=new f("mat-tooltip-scroll-strategy"),wO={provide:Mb,deps:[oo],useFactory:function xO(n){return()=>n.scrollStrategies.reposition({scrollThrottle:20})}},vO=new f("mat-tooltip-default-options",{providedIn:"root",factory:function JO(){return{showDelay:0,hideDelay:0,touchendHideDelay:1500}}}),kb="tooltip-panel",bb=Ul({passive:!0});let jO=(()=>{class n{get position(){return this._position}set position(e){e!==this._position&&(this._position=e,this._overlayRef&&(this._updatePosition(this._overlayRef),this._tooltipInstance?.show(0),this._overlayRef.updatePosition()))}get positionAtOrigin(){return this._positionAtOrigin}set positionAtOrigin(e){this._positionAtOrigin=_e(e),this._detach(),this._overlayRef=null}get disabled(){return this._disabled}set disabled(e){this._disabled=_e(e),this._disabled?this.hide(0):this._setupPointerEnterEventsIfNeeded()}get showDelay(){return this._showDelay}set showDelay(e){this._showDelay=ap(e)}get hideDelay(){return this._hideDelay}set hideDelay(e){this._hideDelay=ap(e),this._tooltipInstance&&(this._tooltipInstance._mouseLeaveHideDelay=this._hideDelay)}get message(){return this._message}set message(e){this._ariaDescriber.removeDescription(this._elementRef.nativeElement,this._message,"tooltip"),this._message=null!=e?String(e).trim():"",!this._message&&this._isTooltipVisible()?this.hide(0):(this._setupPointerEnterEventsIfNeeded(),this._updateTooltipMessage(),this._ngZone.runOutsideAngular(()=>{Promise.resolve().then(()=>{this._ariaDescriber.describe(this._elementRef.nativeElement,this.message,"tooltip")})}))}get tooltipClass(){return this._tooltipClass}set tooltipClass(e){this._tooltipClass=e,this._tooltipInstance&&this._setTooltipClass(this._tooltipClass)}constructor(e,i,r,l,a,o,s,V,d,c,h,u){this._overlay=e,this._elementRef=i,this._scrollDispatcher=r,this._viewContainerRef=l,this._ngZone=a,this._platform=o,this._ariaDescriber=s,this._focusMonitor=V,this._dir=c,this._defaultOptions=h,this._position="below",this._positionAtOrigin=!1,this._disabled=!1,this._viewInitialized=!1,this._pointerExitEventsInitialized=!1,this._viewportMargin=8,this._cssClassPrefix="mat",this.touchGestures="auto",this._message="",this._passiveListeners=[],this._destroyed=new he,this._scrollStrategy=d,this._document=u,h&&(this._showDelay=h.showDelay,this._hideDelay=h.hideDelay,h.position&&(this.position=h.position),h.positionAtOrigin&&(this.positionAtOrigin=h.positionAtOrigin),h.touchGestures&&(this.touchGestures=h.touchGestures)),c.change.pipe(De(this._destroyed)).subscribe(()=>{this._overlayRef&&this._updatePosition(this._overlayRef)})}ngAfterViewInit(){this._viewInitialized=!0,this._setupPointerEnterEventsIfNeeded(),this._focusMonitor.monitor(this._elementRef).pipe(De(this._destroyed)).subscribe(e=>{e?"keyboard"===e&&this._ngZone.run(()=>this.show()):this._ngZone.run(()=>this.hide(0))})}ngOnDestroy(){const e=this._elementRef.nativeElement;clearTimeout(this._touchstartTimeout),this._overlayRef&&(this._overlayRef.dispose(),this._tooltipInstance=null),this._passiveListeners.forEach(([i,r])=>{e.removeEventListener(i,r,bb)}),this._passiveListeners.length=0,this._destroyed.next(),this._destroyed.complete(),this._ariaDescriber.removeDescription(e,this.message,"tooltip"),this._focusMonitor.stopMonitoring(e)}show(e=this.showDelay,i){if(this.disabled||!this.message||this._isTooltipVisible())return void this._tooltipInstance?._cancelPendingAnimations();const r=this._createOverlay(i);this._detach(),this._portal=this._portal||new ub(this._tooltipComponent,this._viewContainerRef);const l=this._tooltipInstance=r.attach(this._portal).instance;l._triggerElement=this._elementRef.nativeElement,l._mouseLeaveHideDelay=this._hideDelay,l.afterHidden().pipe(De(this._destroyed)).subscribe(()=>this._detach()),this._setTooltipClass(this._tooltipClass),this._updateTooltipMessage(),l.show(e)}hide(e=this.hideDelay){const i=this._tooltipInstance;i&&(i.isVisible()?i.hide(e):(i._cancelPendingAnimations(),this._detach()))}toggle(e){this._isTooltipVisible()?this.hide():this.show(void 0,e)}_isTooltipVisible(){return!!this._tooltipInstance&&this._tooltipInstance.isVisible()}_createOverlay(e){if(this._overlayRef){const l=this._overlayRef.getConfig().positionStrategy;if((!this.positionAtOrigin||!e)&&l._origin instanceof Ue)return this._overlayRef;this._detach()}const i=this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),r=this._overlay.position().flexibleConnectedTo(this.positionAtOrigin&&e||this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(!1).withViewportMargin(this._viewportMargin).withScrollableContainers(i);return r.positionChanges.pipe(De(this._destroyed)).subscribe(l=>{this._updateCurrentPositionClass(l.connectionPair),this._tooltipInstance&&l.scrollableViewProperties.isOverlayClipped&&this._tooltipInstance.isVisible()&&this._ngZone.run(()=>this.hide(0))}),this._overlayRef=this._overlay.create({direction:this._dir,positionStrategy:r,panelClass:`${this._cssClassPrefix}-${kb}`,scrollStrategy:this._scrollStrategy()}),this._updatePosition(this._overlayRef),this._overlayRef.detachments().pipe(De(this._destroyed)).subscribe(()=>this._detach()),this._overlayRef.outsidePointerEvents().pipe(De(this._destroyed)).subscribe(()=>this._tooltipInstance?._handleBodyInteraction()),this._overlayRef.keydownEvents().pipe(De(this._destroyed)).subscribe(l=>{this._isTooltipVisible()&&27===l.keyCode&&!function MV(n,...t){return t.length?t.some(e=>n[e]):n.altKey||n.shiftKey||n.ctrlKey||n.metaKey}(l)&&(l.preventDefault(),l.stopPropagation(),this._ngZone.run(()=>this.hide(0)))}),this._defaultOptions?.disableTooltipInteractivity&&this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`),this._overlayRef}_detach(){this._overlayRef&&this._overlayRef.hasAttached()&&this._overlayRef.detach(),this._tooltipInstance=null}_updatePosition(e){const i=e.getConfig().positionStrategy,r=this._getOrigin(),l=this._getOverlayPosition();i.withPositions([this._addOffset({...r.main,...l.main}),this._addOffset({...r.fallback,...l.fallback})])}_addOffset(e){return e}_getOrigin(){const e=!this._dir||"ltr"==this._dir.value,i=this.position;let r;"above"==i||"below"==i?r={originX:"center",originY:"above"==i?"top":"bottom"}:"before"==i||"left"==i&&e||"right"==i&&!e?r={originX:"start",originY:"center"}:("after"==i||"right"==i&&e||"left"==i&&!e)&&(r={originX:"end",originY:"center"});const{x:l,y:a}=this._invertPosition(r.originX,r.originY);return{main:r,fallback:{originX:l,originY:a}}}_getOverlayPosition(){const e=!this._dir||"ltr"==this._dir.value,i=this.position;let r;"above"==i?r={overlayX:"center",overlayY:"bottom"}:"below"==i?r={overlayX:"center",overlayY:"top"}:"before"==i||"left"==i&&e||"right"==i&&!e?r={overlayX:"end",overlayY:"center"}:("after"==i||"right"==i&&e||"left"==i&&!e)&&(r={overlayX:"start",overlayY:"center"});const{x:l,y:a}=this._invertPosition(r.overlayX,r.overlayY);return{main:r,fallback:{overlayX:l,overlayY:a}}}_updateTooltipMessage(){this._tooltipInstance&&(this._tooltipInstance.message=this.message,this._tooltipInstance._markForCheck(),this._ngZone.onMicrotaskEmpty.pipe(vn(1),De(this._destroyed)).subscribe(()=>{this._tooltipInstance&&this._overlayRef.updatePosition()}))}_setTooltipClass(e){this._tooltipInstance&&(this._tooltipInstance.tooltipClass=e,this._tooltipInstance._markForCheck())}_invertPosition(e,i){return"above"===this.position||"below"===this.position?"top"===i?i="bottom":"bottom"===i&&(i="top"):"end"===e?e="start":"start"===e&&(e="end"),{x:e,y:i}}_updateCurrentPositionClass(e){const{overlayY:i,originX:r,originY:l}=e;let a;if(a="center"===i?this._dir&&"rtl"===this._dir.value?"end"===r?"left":"right":"start"===r?"left":"right":"bottom"===i&&"top"===l?"above":"below",a!==this._currentPosition){const o=this._overlayRef;if(o){const s=`${this._cssClassPrefix}-${kb}-`;o.removePanelClass(s+this._currentPosition),o.addPanelClass(s+a)}this._currentPosition=a}}_setupPointerEnterEventsIfNeeded(){this._disabled||!this.message||!this._viewInitialized||this._passiveListeners.length||(this._platformSupportsMouseEvents()?this._passiveListeners.push(["mouseenter",e=>{let i;this._setupPointerExitEventsIfNeeded(),void 0!==e.x&&void 0!==e.y&&(i=e),this.show(void 0,i)}]):"off"!==this.touchGestures&&(this._disableNativeGesturesIfNecessary(),this._passiveListeners.push(["touchstart",e=>{const i=e.targetTouches?.[0],r=i?{x:i.clientX,y:i.clientY}:void 0;this._setupPointerExitEventsIfNeeded(),clearTimeout(this._touchstartTimeout),this._touchstartTimeout=setTimeout(()=>this.show(void 0,r),500)}])),this._addListeners(this._passiveListeners))}_setupPointerExitEventsIfNeeded(){if(this._pointerExitEventsInitialized)return;this._pointerExitEventsInitialized=!0;const e=[];if(this._platformSupportsMouseEvents())e.push(["mouseleave",i=>{const r=i.relatedTarget;(!r||!this._overlayRef?.overlayElement.contains(r))&&this.hide()}],["wheel",i=>this._wheelListener(i)]);else if("off"!==this.touchGestures){this._disableNativeGesturesIfNecessary();const i=()=>{clearTimeout(this._touchstartTimeout),this.hide(this._defaultOptions.touchendHideDelay)};e.push(["touchend",i],["touchcancel",i])}this._addListeners(e),this._passiveListeners.push(...e)}_addListeners(e){e.forEach(([i,r])=>{this._elementRef.nativeElement.addEventListener(i,r,bb)})}_platformSupportsMouseEvents(){return!this._platform.IOS&&!this._platform.ANDROID}_wheelListener(e){if(this._isTooltipVisible()){const i=this._document.elementFromPoint(e.clientX,e.clientY),r=this._elementRef.nativeElement;i!==r&&!r.contains(i)&&this.hide()}}_disableNativeGesturesIfNecessary(){const e=this.touchGestures;if("off"!==e){const i=this._elementRef.nativeElement,r=i.style;("on"===e||"INPUT"!==i.nodeName&&"TEXTAREA"!==i.nodeName)&&(r.userSelect=r.msUserSelect=r.webkitUserSelect=r.MozUserSelect="none"),("on"===e||!i.draggable)&&(r.webkitUserDrag="none"),r.touchAction="none",r.webkitTapHighlightColor="transparent"}}}return n.\u0275fac=function(e){Th()},n.\u0275dir=I({type:n,inputs:{position:["matTooltipPosition","position"],positionAtOrigin:["matTooltipPositionAtOrigin","positionAtOrigin"],disabled:["matTooltipDisabled","disabled"],showDelay:["matTooltipShowDelay","showDelay"],hideDelay:["matTooltipHideDelay","hideDelay"],touchGestures:["matTooltipTouchGestures","touchGestures"],message:["matTooltip","message"],tooltipClass:["matTooltipClass","tooltipClass"]}}),n})(),zO=(()=>{class n extends jO{constructor(e,i,r,l,a,o,s,V,d,c,h,u){super(e,i,r,l,a,o,s,V,d,c,h,u),this._tooltipComponent=BO,this._cssClassPrefix="mat-mdc",this._viewportMargin=8}_addOffset(e){const r=!this._dir||"ltr"==this._dir.value;return"top"===e.originY?e.offsetY=-8:"bottom"===e.originY?e.offsetY=8:"start"===e.originX?e.offsetX=r?-8:8:"end"===e.originX&&(e.offsetX=r?8:-8),e}}return n.\u0275fac=function(e){return new(e||n)(F(oo),F(Ue),F(db),F(qt),F(K),F(nn),F(PD),F(Fp),F(Mb),F(yV,8),F(vO,8),F(L))},n.\u0275dir=I({type:n,selectors:[["","matTooltip",""]],hostAttrs:[1,"mat-mdc-tooltip-trigger"],hostVars:2,hostBindings:function(e,i){2&e&&Dt("mat-mdc-tooltip-disabled",i.disabled)},exportAs:["matTooltip"],features:[B]}),n})(),HO=(()=>{class n{constructor(e,i){this._changeDetectorRef=e,this._closeOnInteraction=!1,this._isVisible=!1,this._onHide=new he,this._animationsDisabled="NoopAnimations"===i}show(e){null!=this._hideTimeoutId&&clearTimeout(this._hideTimeoutId),this._showTimeoutId=setTimeout(()=>{this._toggleVisibility(!0),this._showTimeoutId=void 0},e)}hide(e){null!=this._showTimeoutId&&clearTimeout(this._showTimeoutId),this._hideTimeoutId=setTimeout(()=>{this._toggleVisibility(!1),this._hideTimeoutId=void 0},e)}afterHidden(){return this._onHide}isVisible(){return this._isVisible}ngOnDestroy(){this._cancelPendingAnimations(),this._onHide.complete(),this._triggerElement=null}_handleBodyInteraction(){this._closeOnInteraction&&this.hide(0)}_markForCheck(){this._changeDetectorRef.markForCheck()}_handleMouseLeave({relatedTarget:e}){(!e||!this._triggerElement.contains(e))&&(this.isVisible()?this.hide(this._mouseLeaveHideDelay):this._finalizeAnimation(!1))}_onShow(){}_handleAnimationEnd({animationName:e}){(e===this._showAnimation||e===this._hideAnimation)&&this._finalizeAnimation(e===this._showAnimation)}_cancelPendingAnimations(){null!=this._showTimeoutId&&clearTimeout(this._showTimeoutId),null!=this._hideTimeoutId&&clearTimeout(this._hideTimeoutId),this._showTimeoutId=this._hideTimeoutId=void 0}_finalizeAnimation(e){e?this._closeOnInteraction=!0:this.isVisible()||this._onHide.next()}_toggleVisibility(e){const i=this._tooltip.nativeElement,r=this._showAnimation,l=this._hideAnimation;if(i.classList.remove(e?l:r),i.classList.add(e?r:l),this._isVisible=e,e&&!this._animationsDisabled&&"function"==typeof getComputedStyle){const a=getComputedStyle(i);("0s"===a.getPropertyValue("animation-duration")||"none"===a.getPropertyValue("animation-name"))&&(this._animationsDisabled=!0)}e&&this._onShow(),this._animationsDisabled&&(i.classList.add("_mat-animation-noopable"),this._finalizeAnimation(e))}}return n.\u0275fac=function(e){return new(e||n)(F(Jn),F(Ti,8))},n.\u0275dir=I({type:n}),n})(),BO=(()=>{class n extends HO{constructor(e,i,r){super(e,r),this._elementRef=i,this._isMultiline=!1,this._showAnimation="mat-mdc-tooltip-show",this._hideAnimation="mat-mdc-tooltip-hide"}_onShow(){this._isMultiline=this._isTooltipMultiline(),this._markForCheck()}_isTooltipMultiline(){const e=this._elementRef.nativeElement.getBoundingClientRect();return e.height>24&&e.width>=200}}return n.\u0275fac=function(e){return new(e||n)(F(Jn),F(Ue),F(Ti,8))},n.\u0275cmp=Qt({type:n,selectors:[["mat-tooltip-component"]],viewQuery:function(e,i){if(1&e&&function Ya(n,t,e){const i=$();i.firstCreatePass&&(tg(i,new qZ(n,t,e),-1),2==(2&t)&&(i.staticViewQueries=!0)),eg(i,g(),t)}(IO,7),2&e){let r;st(r=Vt())&&(i._tooltip=r.first)}},hostAttrs:["aria-hidden","true"],hostVars:2,hostBindings:function(e,i){1&e&&ee("mouseleave",function(l){return i._handleMouseLeave(l)}),2&e&&jh("zoom",i.isVisible()?1:null)},features:[B],decls:4,vars:4,consts:[[1,"mdc-tooltip","mdc-tooltip--shown","mat-mdc-tooltip",3,"ngClass","animationend"],["tooltip",""],[1,"mdc-tooltip__surface","mdc-tooltip__surface-animation"]],template:function(e,i){1&e&&(E(0,"div",0,1),ee("animationend",function(l){return i._handleAnimationEnd(l)}),E(2,"div",2),ke(3),C()()),2&e&&(Dt("mdc-tooltip--multiline",i._isMultiline),A("ngClass",i.tooltipClass),G(3),_t(i.message))},dependencies:[zu],styles:['.mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}'],encapsulation:2,changeDetection:0}),n})(),PO=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[wO],imports:[aA,WV,fb,Yn,Yn,nd]}),n})();const _O={provide:new f("mat-menu-scroll-strategy"),deps:[oo],useFactory:function KO(n){return()=>n.scrollStrategies.reposition()}};let qO=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:[_O],imports:[WV,bM,Yn,fb,nd,Yn]}),n})();const id=Ol(n=>function(){n(this),this.name="EmptyError",this.message="no elements in sequence"});function Eb(n){return new fe(t=>{ht(n()).subscribe(t)})}function iR(){return Ie((n,t)=>{let e=null;n._refCount++;const i=Ne(t,void 0,void 0,void 0,()=>{if(!n||n._refCount<=0||0<--n._refCount)return void(e=null);const r=n._connection,l=e;e=null,r&&(!l||r===l)&&r.unsubscribe(),t.unsubscribe()});n.subscribe(i),i.closed||(e=n.connect())})}class Sb extends fe{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._subject=null,this._refCount=0,this._connection=null,rm(t)&&(this.lift=t.lift)}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject}_teardown(){this._refCount=0;const{_connection:t}=this;this._subject=this._connection=null,t?.unsubscribe()}connect(){let t=this._connection;if(!t){t=this._connection=new $e;const e=this.getSubject();t.add(this.source.subscribe(Ne(e,void 0,()=>{this._teardown(),e.complete()},i=>{this._teardown(),e.error(i)},()=>this._teardown()))),t.closed&&(this._connection=null,t=$e.EMPTY)}return t}refCount(){return iR()(this)}}function rd(n){return Ie((t,e)=>{let i=!1;t.subscribe(Ne(e,r=>{i=!0,e.next(r)},()=>{i||e.next(n),e.complete()}))})}function Gb(n=eX){return Ie((t,e)=>{let i=!1;t.subscribe(Ne(e,r=>{i=!0,e.next(r)},()=>i?e.complete():e.error(n())))})}function eX(){return new id}function Vr(n,t){const e=arguments.length>=2;return i=>i.pipe(n?Ot((r,l)=>n(r,l,i)):hi,vn(1),e?rd(t):Gb(()=>new id))}function rR(n){return n<=0?()=>Zn:Ie((t,e)=>{let i=[];t.subscribe(Ne(e,r=>{i.push(r),n<i.length&&i.shift()},()=>{for(const r of i)e.next(r);e.complete()},void 0,()=>{i=null}))})}const H="primary",so=Symbol("RouteTitle");class lX{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function Il(n){return new lX(n)}function aX(n,t,e){const i=e.path.split("/");if(i.length>n.length||"full"===e.pathMatch&&(t.hasChildren()||i.length<n.length))return null;const r={};for(let l=0;l<i.length;l++){const a=i[l],o=n[l];if(a.startsWith(":"))r[a.substring(1)]=o;else if(a!==o.path)return null}return{consumed:n.slice(0,i.length),posParams:r}}function An(n,t){const e=n?Object.keys(n):void 0,i=t?Object.keys(t):void 0;if(!e||!i||e.length!=i.length)return!1;let r;for(let l=0;l<e.length;l++)if(r=e[l],!yb(n[r],t[r]))return!1;return!0}function yb(n,t){if(Array.isArray(n)&&Array.isArray(t)){if(n.length!==t.length)return!1;const e=[...n].sort(),i=[...t].sort();return e.every((r,l)=>i[l]===r)}return n===t}function Ib(n){return n.length>0?n[n.length-1]:null}function Ci(n){return function $O(n){return!!n&&(n instanceof fe||q(n.lift)&&q(n.subscribe))}(n)?n:Sa(n)?je(Promise.resolve(n)):x(n)}const sX={exact:function wb(n,t,e){if(!dr(n.segments,t.segments)||!ld(n.segments,t.segments,e)||n.numberOfChildren!==t.numberOfChildren)return!1;for(const i in t.children)if(!n.children[i]||!wb(n.children[i],t.children[i],e))return!1;return!0},subset:Jb},Cb={exact:function VX(n,t){return An(n,t)},subset:function dX(n,t){return Object.keys(t).length<=Object.keys(n).length&&Object.keys(t).every(e=>yb(n[e],t[e]))},ignored:()=>!0};function xb(n,t,e){return sX[e.paths](n.root,t.root,e.matrixParams)&&Cb[e.queryParams](n.queryParams,t.queryParams)&&!("exact"===e.fragment&&n.fragment!==t.fragment)}function Jb(n,t,e){return vb(n,t,t.segments,e)}function vb(n,t,e,i){if(n.segments.length>e.length){const r=n.segments.slice(0,e.length);return!(!dr(r,e)||t.hasChildren()||!ld(r,e,i))}if(n.segments.length===e.length){if(!dr(n.segments,e)||!ld(n.segments,e,i))return!1;for(const r in t.children)if(!n.children[r]||!Jb(n.children[r],t.children[r],i))return!1;return!0}{const r=e.slice(0,n.segments.length),l=e.slice(n.segments.length);return!!(dr(n.segments,r)&&ld(n.segments,r,i)&&n.children[H])&&vb(n.children[H],t,l,i)}}function ld(n,t,e){return t.every((i,r)=>Cb[e](n[r].parameters,i.parameters))}class Cl{constructor(t=new Re([],{}),e={},i=null){this.root=t,this.queryParams=e,this.fragment=i}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Il(this.queryParams)),this._queryParamMap}toString(){return uX.serialize(this)}}class Re{constructor(t,e){this.segments=t,this.children=e,this.parent=null,Object.values(e).forEach(i=>i.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return ad(this)}}class Vo{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=Il(this.parameters)),this._parameterMap}toString(){return Ab(this)}}function dr(n,t){return n.length===t.length&&n.every((e,i)=>e.path===t[i].path)}let co=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return new lR},providedIn:"root"}),n})();class lR{parse(t){const e=new MX(t);return new Cl(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){const e=`/${ho(t.root,!0)}`,i=function mX(n){const t=Object.keys(n).map(e=>{const i=n[e];return Array.isArray(i)?i.map(r=>`${od(e)}=${od(r)}`).join("&"):`${od(e)}=${od(i)}`}).filter(e=>!!e);return t.length?`?${t.join("&")}`:""}(t.queryParams);return`${e}${i}${"string"==typeof t.fragment?`#${function pX(n){return encodeURI(n)}(t.fragment)}`:""}`}}const uX=new lR;function ad(n){return n.segments.map(t=>Ab(t)).join("/")}function ho(n,t){if(!n.hasChildren())return ad(n);if(t){const e=n.children[H]?ho(n.children[H],!1):"",i=[];return Object.entries(n.children).forEach(([r,l])=>{r!==H&&i.push(`${r}:${ho(l,!1)}`)}),i.length>0?`${e}(${i.join("//")})`:e}{const e=function hX(n,t){let e=[];return Object.entries(n.children).forEach(([i,r])=>{i===H&&(e=e.concat(t(r,i)))}),Object.entries(n.children).forEach(([i,r])=>{i!==H&&(e=e.concat(t(r,i)))}),e}(n,(i,r)=>r===H?[ho(n.children[H],!1)]:[`${r}:${ho(i,!1)}`]);return 1===Object.keys(n.children).length&&null!=n.children[H]?`${ad(n)}/${e[0]}`:`${ad(n)}/(${e.join("//")})`}}function Yb(n){return encodeURIComponent(n).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function od(n){return Yb(n).replace(/%3B/gi,";")}function aR(n){return Yb(n).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function sd(n){return decodeURIComponent(n)}function Db(n){return sd(n.replace(/\+/g,"%20"))}function Ab(n){return`${aR(n.path)}${function RX(n){return Object.keys(n).map(t=>`;${aR(t)}=${aR(n[t])}`).join("")}(n.parameters)}`}const WX=/^[^\/()?;#]+/;function oR(n){const t=n.match(WX);return t?t[0]:""}const FX=/^[^\/()?;=#]+/,TX=/^[^=?&#]+/,gX=/^[^&#]+/;class MX{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new Re([],{}):new Re([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let i={};return this.peekStartsWith("(")&&(i=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(i[H]=new Re(t,e)),i}parseSegment(){const t=oR(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new U(4009,!1);return this.capture(t),new Vo(sd(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=function UX(n){const t=n.match(FX);return t?t[0]:""}(this.remaining);if(!e)return;this.capture(e);let i="";if(this.consumeOptional("=")){const r=oR(this.remaining);r&&(i=r,this.capture(i))}t[sd(e)]=sd(i)}parseQueryParam(t){const e=function ZX(n){const t=n.match(TX);return t?t[0]:""}(this.remaining);if(!e)return;this.capture(e);let i="";if(this.consumeOptional("=")){const a=function fX(n){const t=n.match(gX);return t?t[0]:""}(this.remaining);a&&(i=a,this.capture(i))}const r=Db(e),l=Db(i);if(t.hasOwnProperty(r)){let a=t[r];Array.isArray(a)||(a=[a],t[r]=a),a.push(l)}else t[r]=l}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const i=oR(this.remaining),r=this.remaining[i.length];if("/"!==r&&")"!==r&&";"!==r)throw new U(4010,!1);let l;i.indexOf(":")>-1?(l=i.slice(0,i.indexOf(":")),this.capture(l),this.capture(":")):t&&(l=H);const a=this.parseChildren();e[l]=1===Object.keys(a).length?a[H]:new Re([],a),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new U(4011,!1)}}function Ob(n){return n.segments.length>0?new Re([],{[H]:n}):n}function Xb(n){const t={};for(const i of Object.keys(n.children)){const l=Xb(n.children[i]);if(i===H&&0===l.segments.length&&l.hasChildren())for(const[a,o]of Object.entries(l.children))t[a]=o;else(l.segments.length>0||l.hasChildren())&&(t[i]=l)}return function kX(n){if(1===n.numberOfChildren&&n.children[H]){const t=n.children[H];return new Re(n.segments.concat(t.segments),t.children)}return n}(new Re(n.segments,t))}function cr(n){return n instanceof Cl}function jb(n){let t;const r=Ob(function e(l){const a={};for(const s of l.children){const V=e(s);a[s.outlet]=V}const o=new Re(l.url,a);return l===n&&(t=o),o}(n.root));return t??r}function zb(n,t,e,i){let r=n;for(;r.parent;)r=r.parent;if(0===t.length)return sR(r,r,r,e,i);const l=function NX(n){if("string"==typeof n[0]&&1===n.length&&"/"===n[0])return new Bb(!0,0,n);let t=0,e=!1;const i=n.reduce((r,l,a)=>{if("object"==typeof l&&null!=l){if(l.outlets){const o={};return Object.entries(l.outlets).forEach(([s,V])=>{o[s]="string"==typeof V?V.split("/"):V}),[...r,{outlets:o}]}if(l.segmentPath)return[...r,l.segmentPath]}return"string"!=typeof l?[...r,l]:0===a?(l.split("/").forEach((o,s)=>{0==s&&"."===o||(0==s&&""===o?e=!0:".."===o?t++:""!=o&&r.push(o))}),r):[...r,l]},[]);return new Bb(e,t,i)}(t);if(l.toRoot())return sR(r,r,new Re([],{}),e,i);const a=function EX(n,t,e){if(n.isAbsolute)return new dd(t,!0,0);if(!e)return new dd(t,!1,NaN);if(null===e.parent)return new dd(e,!0,0);const i=Vd(n.commands[0])?0:1;return function SX(n,t,e){let i=n,r=t,l=e;for(;l>r;){if(l-=r,i=i.parent,!i)throw new U(4005,!1);r=i.segments.length}return new dd(i,!1,r-l)}(e,e.segments.length-1+i,n.numberOfDoubleDots)}(l,r,n),o=a.processChildren?po(a.segmentGroup,a.index,l.commands):Pb(a.segmentGroup,a.index,l.commands);return sR(r,a.segmentGroup,o,e,i)}function Vd(n){return"object"==typeof n&&null!=n&&!n.outlets&&!n.segmentPath}function uo(n){return"object"==typeof n&&null!=n&&n.outlets}function sR(n,t,e,i,r){let a,l={};i&&Object.entries(i).forEach(([s,V])=>{l[s]=Array.isArray(V)?V.map(d=>`${d}`):`${V}`}),a=n===t?e:Hb(n,t,e);const o=Ob(Xb(a));return new Cl(o,l,r)}function Hb(n,t,e){const i={};return Object.entries(n.children).forEach(([r,l])=>{i[r]=l===t?e:Hb(l,t,e)}),new Re(n.segments,i)}class Bb{constructor(t,e,i){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=i,t&&i.length>0&&Vd(i[0]))throw new U(4003,!1);const r=i.find(uo);if(r&&r!==Ib(i))throw new U(4004,!1)}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class dd{constructor(t,e,i){this.segmentGroup=t,this.processChildren=e,this.index=i}}function Pb(n,t,e){if(n||(n=new Re([],{})),0===n.segments.length&&n.hasChildren())return po(n,t,e);const i=function yX(n,t,e){let i=0,r=t;const l={match:!1,pathIndex:0,commandIndex:0};for(;r<n.segments.length;){if(i>=e.length)return l;const a=n.segments[r],o=e[i];if(uo(o))break;const s=`${o}`,V=i<e.length-1?e[i+1]:null;if(r>0&&void 0===s)break;if(s&&V&&"object"==typeof V&&void 0===V.outlets){if(!Lb(s,V,a))return l;i+=2}else{if(!Lb(s,{},a))return l;i++}r++}return{match:!0,pathIndex:r,commandIndex:i}}(n,t,e),r=e.slice(i.commandIndex);if(i.match&&i.pathIndex<n.segments.length){const l=new Re(n.segments.slice(0,i.pathIndex),{});return l.children[H]=new Re(n.segments.slice(i.pathIndex),n.children),po(l,0,r)}return i.match&&0===r.length?new Re(n.segments,{}):i.match&&!n.hasChildren()?VR(n,t,e):i.match?po(n,0,r):VR(n,t,e)}function po(n,t,e){if(0===e.length)return new Re(n.segments,{});{const i=function GX(n){return uo(n[0])?n[0].outlets:{[H]:n}}(e),r={};if(!i[H]&&n.children[H]&&1===n.numberOfChildren&&0===n.children[H].segments.length){const l=po(n.children[H],t,e);return new Re(n.segments,l.children)}return Object.entries(i).forEach(([l,a])=>{"string"==typeof a&&(a=[a]),null!==a&&(r[l]=Pb(n.children[l],t,a))}),Object.entries(n.children).forEach(([l,a])=>{void 0===i[l]&&(r[l]=a)}),new Re(n.segments,r)}}function VR(n,t,e){const i=n.segments.slice(0,t);let r=0;for(;r<e.length;){const l=e[r];if(uo(l)){const s=IX(l.outlets);return new Re(i,s)}if(0===r&&Vd(e[0])){i.push(new Vo(n.segments[t].path,Qb(e[0]))),r++;continue}const a=uo(l)?l.outlets[H]:`${l}`,o=r<e.length-1?e[r+1]:null;a&&o&&Vd(o)?(i.push(new Vo(a,Qb(o))),r+=2):(i.push(new Vo(a,{})),r++)}return new Re(i,{})}function IX(n){const t={};return Object.entries(n).forEach(([e,i])=>{"string"==typeof i&&(i=[i]),null!==i&&(t[e]=VR(new Re([],{}),0,i))}),t}function Qb(n){const t={};return Object.entries(n).forEach(([e,i])=>t[e]=`${i}`),t}function Lb(n,t,e){return n==e.path&&An(t,e.parameters)}const Ro="imperative";class On{constructor(t,e){this.id=t,this.url=e}}class dR extends On{constructor(t,e,i="imperative",r=null){super(t,e),this.type=0,this.navigationTrigger=i,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class hr extends On{constructor(t,e,i){super(t,e),this.urlAfterRedirects=i,this.type=1}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class cd extends On{constructor(t,e,i,r){super(t,e),this.reason=i,this.code=r,this.type=2}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class mo extends On{constructor(t,e,i,r){super(t,e),this.reason=i,this.code=r,this.type=16}}class cR extends On{constructor(t,e,i,r){super(t,e),this.error=i,this.target=r,this.type=3}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class CX extends On{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=4}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class xX extends On{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=7}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class wX extends On{constructor(t,e,i,r,l){super(t,e),this.urlAfterRedirects=i,this.state=r,this.shouldActivate=l,this.type=8}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class JX extends On{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=5}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class vX extends On{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=6}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class YX{constructor(t){this.route=t,this.type=9}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class DX{constructor(t){this.route=t,this.type=10}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class AX{constructor(t){this.snapshot=t,this.type=11}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class OX{constructor(t){this.snapshot=t,this.type=12}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class XX{constructor(t){this.snapshot=t,this.type=13}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class jX{constructor(t){this.snapshot=t,this.type=14}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Kb{constructor(t,e,i){this.routerEvent=t,this.position=e,this.anchor=i,this.type=15}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}class zX{constructor(){this.outlet=null,this.route=null,this.injector=null,this.children=new Wo,this.attachRef=null}}let Wo=(()=>{class n{constructor(){this.contexts=new Map}onChildOutletCreated(e,i){const r=this.getOrCreateContext(e);r.outlet=i,this.contexts.set(e,r)}onChildOutletDestroyed(e){const i=this.getContext(e);i&&(i.outlet=null,i.attachRef=null)}onOutletDeactivated(){const e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let i=this.getContext(e);return i||(i=new zX,this.contexts.set(e,i)),i}getContext(e){return this.contexts.get(e)||null}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class _b{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=hR(t,this._root);return e?e.children.map(i=>i.value):[]}firstChild(t){const e=hR(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=uR(t,this._root);return e.length<2?[]:e[e.length-2].children.map(r=>r.value).filter(r=>r!==t)}pathFromRoot(t){return uR(t,this._root).map(e=>e.value)}}function hR(n,t){if(n===t.value)return t;for(const e of t.children){const i=hR(n,e);if(i)return i}return null}function uR(n,t){if(n===t.value)return[t];for(const e of t.children){const i=uR(n,e);if(i.length)return i.unshift(t),i}return[]}class si{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function xl(n){const t={};return n&&n.children.forEach(e=>t[e.value.outlet]=e),t}class qb extends _b{constructor(t,e){super(t),this.snapshot=e,pR(this,t)}toString(){return this.snapshot.toString()}}function $b(n,t){const e=function HX(n,t){const a=new hd([],{},{},"",{},H,t,null,{});return new tN("",new si(a,[]))}(0,t),i=new St([new Vo("",{})]),r=new St({}),l=new St({}),a=new St({}),o=new St(""),s=new wl(i,r,a,o,l,H,t,e.root);return s.snapshot=e.root,new qb(new si(s,[]),e)}class wl{constructor(t,e,i,r,l,a,o,s){this.urlSubject=t,this.paramsSubject=e,this.queryParamsSubject=i,this.fragmentSubject=r,this.dataSubject=l,this.outlet=a,this.component=o,this._futureSnapshot=s,this.title=this.dataSubject?.pipe(P(V=>V[so]))??x(void 0),this.url=t,this.params=e,this.queryParams=i,this.fragment=r,this.data=l}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(P(t=>Il(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(P(t=>Il(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function eN(n,t="emptyOnly"){const e=n.pathFromRoot;let i=0;if("always"!==t)for(i=e.length-1;i>=1;){const r=e[i],l=e[i-1];if(r.routeConfig&&""===r.routeConfig.path)i--;else{if(l.component)break;i--}}return function BX(n){return n.reduce((t,e)=>({params:{...t.params,...e.params},data:{...t.data,...e.data},resolve:{...e.data,...t.resolve,...e.routeConfig?.data,...e._resolvedData}}),{params:{},data:{},resolve:{}})}(e.slice(i))}class hd{get title(){return this.data?.[so]}constructor(t,e,i,r,l,a,o,s,V){this.url=t,this.params=e,this.queryParams=i,this.fragment=r,this.data=l,this.outlet=a,this.component=o,this.routeConfig=s,this._resolve=V}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Il(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Il(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(i=>i.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class tN extends _b{constructor(t,e){super(e),this.url=t,pR(this,e)}toString(){return nN(this._root)}}function pR(n,t){t.value._routerState=n,t.children.forEach(e=>pR(n,e))}function nN(n){const t=n.children.length>0?` { ${n.children.map(nN).join(", ")} } `:"";return`${n.value}${t}`}function RR(n){if(n.snapshot){const t=n.snapshot,e=n._futureSnapshot;n.snapshot=e,An(t.queryParams,e.queryParams)||n.queryParamsSubject.next(e.queryParams),t.fragment!==e.fragment&&n.fragmentSubject.next(e.fragment),An(t.params,e.params)||n.paramsSubject.next(e.params),function oX(n,t){if(n.length!==t.length)return!1;for(let e=0;e<n.length;++e)if(!An(n[e],t[e]))return!1;return!0}(t.url,e.url)||n.urlSubject.next(e.url),An(t.data,e.data)||n.dataSubject.next(e.data)}else n.snapshot=n._futureSnapshot,n.dataSubject.next(n._futureSnapshot.data)}function mR(n,t){const e=An(n.params,t.params)&&function cX(n,t){return dr(n,t)&&n.every((e,i)=>An(e.parameters,t[i].parameters))}(n.url,t.url);return e&&!(!n.parent!=!t.parent)&&(!n.parent||mR(n.parent,t.parent))}let WR=(()=>{class n{constructor(){this.activated=null,this._activatedRoute=null,this.name=H,this.activateEvents=new oe,this.deactivateEvents=new oe,this.attachEvents=new oe,this.detachEvents=new oe,this.parentContexts=b(Wo),this.location=b(qt),this.changeDetector=b(Jn),this.environmentInjector=b(Gn),this.inputBinder=b(ud,{optional:!0}),this.supportsBindingToComponentInputs=!0}get activatedComponentRef(){return this.activated}ngOnChanges(e){if(e.name){const{firstChange:i,previousValue:r}=e.name;if(i)return;this.isTrackedInParentContexts(r)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(r)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name),this.inputBinder?.unsubscribeFromRouteData(this)}isTrackedInParentContexts(e){return this.parentContexts.getContext(e)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;const e=this.parentContexts.getContext(this.name);e?.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new U(4012,!1);return this.activated.instance}get activatedRoute(){if(!this.activated)throw new U(4012,!1);return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new U(4012,!1);this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(e.instance),e}attach(e,i){this.activated=e,this._activatedRoute=i,this.location.insert(e.hostView),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.attachEvents.emit(e.instance)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,i){if(this.isActivated)throw new U(4013,!1);this._activatedRoute=e;const r=this.location,a=e.snapshot.component,o=this.parentContexts.getOrCreateContext(this.name).children,s=new PX(e,o,r.injector);this.activated=r.createComponent(a,{index:r.length,injector:s,environmentInjector:i??this.environmentInjector}),this.changeDetector.markForCheck(),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.activateEvents.emit(this.activated.instance)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=I({type:n,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[Ct]}),n})();class PX{constructor(t,e,i){this.route=t,this.childContexts=e,this.parent=i}get(t,e){return t===wl?this.route:t===Wo?this.childContexts:this.parent.get(t,e)}}const ud=new f("");let iN=(()=>{class n{constructor(){this.outletDataSubscriptions=new Map}bindActivatedRouteToOutletComponent(e){this.unsubscribeFromRouteData(e),this.subscribeToRouteData(e)}unsubscribeFromRouteData(e){this.outletDataSubscriptions.get(e)?.unsubscribe(),this.outletDataSubscriptions.delete(e)}subscribeToRouteData(e){const{activatedRoute:i}=e,r=bV([i.queryParams,i.params,i.data]).pipe(Ht(([l,a,o],s)=>(o={...l,...a,...o},0===s?x(o):Promise.resolve(o)))).subscribe(l=>{if(!e.isActivated||!e.activatedComponentRef||e.activatedRoute!==i||null===i.component)return void this.unsubscribeFromRouteData(e);const a=function vJ(n){const t=le(n);if(!t)return null;const e=new Ma(t);return{get selector(){return e.selector},get type(){return e.componentType},get inputs(){return e.inputs},get outputs(){return e.outputs},get ngContentSelectors(){return e.ngContentSelectors},get isStandalone(){return t.standalone},get isSignal(){return t.signals}}}(i.component);if(a)for(const{templateName:o}of a.inputs)e.activatedComponentRef.setInput(o,l[o]);else this.unsubscribeFromRouteData(e)});this.outletDataSubscriptions.set(e,r)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();function Fo(n,t,e){if(e&&n.shouldReuseRoute(t.value,e.value.snapshot)){const i=e.value;i._futureSnapshot=t.value;const r=function LX(n,t,e){return t.children.map(i=>{for(const r of e.children)if(n.shouldReuseRoute(i.value,r.value.snapshot))return Fo(n,i,r);return Fo(n,i)})}(n,t,e);return new si(i,r)}{if(n.shouldAttach(t.value)){const l=n.retrieve(t.value);if(null!==l){const a=l.route;return a.value._futureSnapshot=t.value,a.children=t.children.map(o=>Fo(n,o)),a}}const i=function KX(n){return new wl(new St(n.url),new St(n.params),new St(n.queryParams),new St(n.fragment),new St(n.data),n.outlet,n.component,n)}(t.value),r=t.children.map(l=>Fo(n,l));return new si(i,r)}}const FR="ngNavigationCancelingError";function rN(n,t){const{redirectTo:e,navigationBehaviorOptions:i}=cr(t)?{redirectTo:t,navigationBehaviorOptions:void 0}:t,r=lN(!1,0,t);return r.url=e,r.navigationBehaviorOptions=i,r}function lN(n,t,e){const i=new Error("NavigationCancelingError: "+(n||""));return i[FR]=!0,i.cancellationCode=t,e&&(i.url=e),i}function aN(n){return oN(n)&&cr(n.url)}function oN(n){return n&&n[FR]}let sN=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=Qt({type:n,selectors:[["ng-component"]],standalone:!0,features:[yZ],decls:1,vars:0,template:function(e,i){1&e&&pe(0,"router-outlet")},dependencies:[WR],encapsulation:2}),n})();function UR(n){const t=n.children&&n.children.map(UR),e=t?{...n,children:t}:{...n};return!e.component&&!e.loadComponent&&(t||e.loadChildren)&&e.outlet&&e.outlet!==H&&(e.component=sN),e}function Wn(n){return n.outlet||H}function Uo(n){if(!n)return null;if(n.routeConfig?._injector)return n.routeConfig._injector;for(let t=n.parent;t;t=t.parent){const e=t.routeConfig;if(e?._loadedInjector)return e._loadedInjector;if(e?._injector)return e._injector}return null}class ij{constructor(t,e,i,r,l){this.routeReuseStrategy=t,this.futureState=e,this.currState=i,this.forwardEvent=r,this.inputBindingEnabled=l}activate(t){const e=this.futureState._root,i=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,i,t),RR(this.futureState.root),this.activateChildRoutes(e,i,t)}deactivateChildRoutes(t,e,i){const r=xl(e);t.children.forEach(l=>{const a=l.value.outlet;this.deactivateRoutes(l,r[a],i),delete r[a]}),Object.values(r).forEach(l=>{this.deactivateRouteAndItsChildren(l,i)})}deactivateRoutes(t,e,i){const r=t.value,l=e?e.value:null;if(r===l)if(r.component){const a=i.getContext(r.outlet);a&&this.deactivateChildRoutes(t,e,a.children)}else this.deactivateChildRoutes(t,e,i);else l&&this.deactivateRouteAndItsChildren(e,i)}deactivateRouteAndItsChildren(t,e){t.value.component&&this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const i=e.getContext(t.value.outlet),r=i&&t.value.component?i.children:e,l=xl(t);for(const a of Object.keys(l))this.deactivateRouteAndItsChildren(l[a],r);if(i&&i.outlet){const a=i.outlet.detach(),o=i.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:a,route:t,contexts:o})}}deactivateRouteAndOutlet(t,e){const i=e.getContext(t.value.outlet),r=i&&t.value.component?i.children:e,l=xl(t);for(const a of Object.keys(l))this.deactivateRouteAndItsChildren(l[a],r);i&&(i.outlet&&(i.outlet.deactivate(),i.children.onOutletDeactivated()),i.attachRef=null,i.route=null)}activateChildRoutes(t,e,i){const r=xl(e);t.children.forEach(l=>{this.activateRoutes(l,r[l.value.outlet],i),this.forwardEvent(new jX(l.value.snapshot))}),t.children.length&&this.forwardEvent(new OX(t.value.snapshot))}activateRoutes(t,e,i){const r=t.value,l=e?e.value:null;if(RR(r),r===l)if(r.component){const a=i.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,a.children)}else this.activateChildRoutes(t,e,i);else if(r.component){const a=i.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const o=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),a.children.onOutletReAttached(o.contexts),a.attachRef=o.componentRef,a.route=o.route.value,a.outlet&&a.outlet.attach(o.componentRef,o.route.value),RR(o.route.value),this.activateChildRoutes(t,null,a.children)}else{const o=Uo(r.snapshot);a.attachRef=null,a.route=r,a.injector=o,a.outlet&&a.outlet.activateWith(r,a.injector),this.activateChildRoutes(t,null,a.children)}}else this.activateChildRoutes(t,null,i)}}class VN{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class pd{constructor(t,e){this.component=t,this.route=e}}function rj(n,t,e){const i=n._root;return To(i,t?t._root:null,e,[i.value])}function Jl(n,t){const e=Symbol(),i=t.get(n,e);return i===e?"function"!=typeof n||function k0(n){return null!==Jo(n)}(n)?t.get(n):n:i}function To(n,t,e,i,r={canDeactivateChecks:[],canActivateChecks:[]}){const l=xl(t);return n.children.forEach(a=>{(function aj(n,t,e,i,r={canDeactivateChecks:[],canActivateChecks:[]}){const l=n.value,a=t?t.value:null,o=e?e.getContext(n.value.outlet):null;if(a&&l.routeConfig===a.routeConfig){const s=function oj(n,t,e){if("function"==typeof e)return e(n,t);switch(e){case"pathParamsChange":return!dr(n.url,t.url);case"pathParamsOrQueryParamsChange":return!dr(n.url,t.url)||!An(n.queryParams,t.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!mR(n,t)||!An(n.queryParams,t.queryParams);default:return!mR(n,t)}}(a,l,l.routeConfig.runGuardsAndResolvers);s?r.canActivateChecks.push(new VN(i)):(l.data=a.data,l._resolvedData=a._resolvedData),To(n,t,l.component?o?o.children:null:e,i,r),s&&o&&o.outlet&&o.outlet.isActivated&&r.canDeactivateChecks.push(new pd(o.outlet.component,a))}else a&&Zo(t,o,r),r.canActivateChecks.push(new VN(i)),To(n,null,l.component?o?o.children:null:e,i,r)})(a,l[a.value.outlet],e,i.concat([a.value]),r),delete l[a.value.outlet]}),Object.entries(l).forEach(([a,o])=>Zo(o,e.getContext(a),r)),r}function Zo(n,t,e){const i=xl(n),r=n.value;Object.entries(i).forEach(([l,a])=>{Zo(a,r.component?t?t.children.getContext(l):null:t,e)}),e.canDeactivateChecks.push(new pd(r.component&&t&&t.outlet&&t.outlet.isActivated?t.outlet.component:null,r))}function go(n){return"function"==typeof n}function dN(n){return n instanceof id||"EmptyError"===n?.name}const Rd=Symbol("INITIAL_VALUE");function vl(){return Ht(n=>bV(n.map(t=>t.pipe(vn(1),Tl(Rd)))).pipe(P(t=>{for(const e of t)if(!0!==e){if(e===Rd)return Rd;if(!1===e||e instanceof Cl)return e}return!0}),Ot(t=>t!==Rd),vn(1)))}function cN(n){return function S1(...n){return tm(n)}(Qe(t=>{if(cr(t))throw rN(0,t)}),P(t=>!0===t))}class md{constructor(t){this.segmentGroup=t||null}}class hN{constructor(t){this.urlTree=t}}function Yl(n){return Nl(new md(n))}function uN(n){return Nl(new hN(n))}class Nj{constructor(t,e){this.urlSerializer=t,this.urlTree=e}noMatchError(t){return new U(4002,!1)}lineralizeSegments(t,e){let i=[],r=e.root;for(;;){if(i=i.concat(r.segments),0===r.numberOfChildren)return x(i);if(r.numberOfChildren>1||!r.children[H])return Nl(new U(4e3,!1));r=r.children[H]}}applyRedirectCommands(t,e,i){return this.applyRedirectCreateUrlTree(e,this.urlSerializer.parse(e),t,i)}applyRedirectCreateUrlTree(t,e,i,r){const l=this.createSegmentGroup(t,e.root,i,r);return new Cl(l,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const i={};return Object.entries(t).forEach(([r,l])=>{if("string"==typeof l&&l.startsWith(":")){const o=l.substring(1);i[r]=e[o]}else i[r]=l}),i}createSegmentGroup(t,e,i,r){const l=this.createSegments(t,e.segments,i,r);let a={};return Object.entries(e.children).forEach(([o,s])=>{a[o]=this.createSegmentGroup(t,s,i,r)}),new Re(l,a)}createSegments(t,e,i,r){return e.map(l=>l.path.startsWith(":")?this.findPosParam(t,l,r):this.findOrReturn(l,i))}findPosParam(t,e,i){const r=i[e.path.substring(1)];if(!r)throw new U(4001,!1);return r}findOrReturn(t,e){let i=0;for(const r of e){if(r.path===t.path)return e.splice(i),r;i++}return t}}const TR={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function Ej(n,t,e,i,r){const l=ZR(n,t,e);return l.matched?(i=function _X(n,t){return n.providers&&!n._injector&&(n._injector=$h(n.providers,t,`Route: ${n.path}`)),n._injector??t}(t,i),function Mj(n,t,e,i){const r=t.canMatch;return r&&0!==r.length?x(r.map(a=>{const o=Jl(a,n);return Ci(function uj(n){return n&&go(n.canMatch)}(o)?o.canMatch(t,e):n.runInContext(()=>o(t,e)))})).pipe(vl(),cN()):x(!0)}(i,t,e).pipe(P(a=>!0===a?l:{...TR}))):x(l)}function ZR(n,t,e){if(""===t.path)return"full"===t.pathMatch&&(n.hasChildren()||e.length>0)?{...TR}:{matched:!0,consumedSegments:[],remainingSegments:e,parameters:{},positionalParamSegments:{}};const r=(t.matcher||aX)(e,n,t);if(!r)return{...TR};const l={};Object.entries(r.posParams??{}).forEach(([o,s])=>{l[o]=s.path});const a=r.consumed.length>0?{...l,...r.consumed[r.consumed.length-1].parameters}:l;return{matched:!0,consumedSegments:r.consumed,remainingSegments:e.slice(r.consumed.length),parameters:a,positionalParamSegments:r.posParams??{}}}function pN(n,t,e,i){return e.length>0&&function yj(n,t,e){return e.some(i=>Wd(n,t,i)&&Wn(i)!==H)}(n,e,i)?{segmentGroup:new Re(t,Gj(i,new Re(e,n.children))),slicedSegments:[]}:0===e.length&&function Ij(n,t,e){return e.some(i=>Wd(n,t,i))}(n,e,i)?{segmentGroup:new Re(n.segments,Sj(n,0,e,i,n.children)),slicedSegments:e}:{segmentGroup:new Re(n.segments,n.children),slicedSegments:e}}function Sj(n,t,e,i,r){const l={};for(const a of i)if(Wd(n,e,a)&&!r[Wn(a)]){const o=new Re([],{});l[Wn(a)]=o}return{...r,...l}}function Gj(n,t){const e={};e[H]=t;for(const i of n)if(""===i.path&&Wn(i)!==H){const r=new Re([],{});e[Wn(i)]=r}return e}function Wd(n,t,e){return(!(n.hasChildren()||t.length>0)||"full"!==e.pathMatch)&&""===e.path}class Jj{constructor(t,e,i,r,l,a,o){this.injector=t,this.configLoader=e,this.rootComponentType=i,this.config=r,this.urlTree=l,this.paramsInheritanceStrategy=a,this.urlSerializer=o,this.allowRedirects=!0,this.applyRedirects=new Nj(this.urlSerializer,this.urlTree)}noMatchError(t){return new U(4002,!1)}recognize(){const t=pN(this.urlTree.root,[],[],this.config).segmentGroup;return this.processSegmentGroup(this.injector,this.config,t,H).pipe(Gi(e=>{if(e instanceof hN)return this.allowRedirects=!1,this.urlTree=e.urlTree,this.match(e.urlTree);throw e instanceof md?this.noMatchError(e):e}),P(e=>{const i=new hd([],Object.freeze({}),Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,{},H,this.rootComponentType,null,{}),r=new si(i,e),l=new tN("",r),a=function bX(n,t,e=null,i=null){return zb(jb(n),t,e,i)}(i,[],this.urlTree.queryParams,this.urlTree.fragment);return a.queryParams=this.urlTree.queryParams,l.url=this.urlSerializer.serialize(a),this.inheritParamsAndData(l._root),{state:l,tree:a}}))}match(t){return this.processSegmentGroup(this.injector,this.config,t.root,H).pipe(Gi(i=>{throw i instanceof md?this.noMatchError(i):i}))}inheritParamsAndData(t){const e=t.value,i=eN(e,this.paramsInheritanceStrategy);e.params=Object.freeze(i.params),e.data=Object.freeze(i.data),t.children.forEach(r=>this.inheritParamsAndData(r))}processSegmentGroup(t,e,i,r){return 0===i.segments.length&&i.hasChildren()?this.processChildren(t,e,i):this.processSegment(t,e,i,i.segments,r,!0)}processChildren(t,e,i){const r=[];for(const l of Object.keys(i.children))"primary"===l?r.unshift(l):r.push(l);return je(r).pipe(Sl(l=>{const a=i.children[l],o=function tj(n,t){const e=n.filter(i=>Wn(i)===t);return e.push(...n.filter(i=>Wn(i)!==t)),e}(e,l);return this.processSegmentGroup(t,o,a,l)}),function nX(n,t){return Ie(function tX(n,t,e,i,r){return(l,a)=>{let o=e,s=t,V=0;l.subscribe(Ne(a,d=>{const c=V++;s=o?n(s,d,c):(o=!0,d),i&&a.next(s)},r&&(()=>{o&&a.next(s),a.complete()})))}}(n,t,arguments.length>=2,!0))}((l,a)=>(l.push(...a),l)),rd(null),function iX(n,t){const e=arguments.length>=2;return i=>i.pipe(n?Ot((r,l)=>n(r,l,i)):hi,rR(1),e?rd(t):Gb(()=>new id))}(),Le(l=>{if(null===l)return Yl(i);const a=RN(l);return function vj(n){n.sort((t,e)=>t.value.outlet===H?-1:e.value.outlet===H?1:t.value.outlet.localeCompare(e.value.outlet))}(a),x(a)}))}processSegment(t,e,i,r,l,a){return je(e).pipe(Sl(o=>this.processSegmentAgainstRoute(o._injector??t,e,o,i,r,l,a).pipe(Gi(s=>{if(s instanceof md)return x(null);throw s}))),Vr(o=>!!o),Gi(o=>{if(dN(o))return function xj(n,t,e){return 0===t.length&&!n.children[e]}(i,r,l)?x([]):Yl(i);throw o}))}processSegmentAgainstRoute(t,e,i,r,l,a,o){return function Cj(n,t,e,i){return!!(Wn(n)===i||i!==H&&Wd(t,e,n))&&("**"===n.path||ZR(t,n,e).matched)}(i,r,l,a)?void 0===i.redirectTo?this.matchSegmentAgainstRoute(t,r,i,l,a,o):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,r,e,i,l,a):Yl(r):Yl(r)}expandSegmentAgainstRouteUsingRedirect(t,e,i,r,l,a){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,i,r,a):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,i,r,l,a)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,i,r){const l=this.applyRedirects.applyRedirectCommands([],i.redirectTo,{});return i.redirectTo.startsWith("/")?uN(l):this.applyRedirects.lineralizeSegments(i,l).pipe(Le(a=>{const o=new Re(a,{});return this.processSegment(t,e,o,a,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,i,r,l,a){const{matched:o,consumedSegments:s,remainingSegments:V,positionalParamSegments:d}=ZR(e,r,l);if(!o)return Yl(e);const c=this.applyRedirects.applyRedirectCommands(s,r.redirectTo,d);return r.redirectTo.startsWith("/")?uN(c):this.applyRedirects.lineralizeSegments(r,c).pipe(Le(h=>this.processSegment(t,i,e,h.concat(V),a,!1)))}matchSegmentAgainstRoute(t,e,i,r,l,a){let o;if("**"===i.path){const s=r.length>0?Ib(r).parameters:{};o=x({snapshot:new hd(r,s,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,mN(i),Wn(i),i.component??i._loadedComponent??null,i,WN(i)),consumedSegments:[],remainingSegments:[]}),e.children={}}else o=Ej(e,i,r,t).pipe(P(({matched:s,consumedSegments:V,remainingSegments:d,parameters:c})=>s?{snapshot:new hd(V,c,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,mN(i),Wn(i),i.component??i._loadedComponent??null,i,WN(i)),consumedSegments:V,remainingSegments:d}:null));return o.pipe(Ht(s=>null===s?Yl(e):this.getChildConfig(t=i._injector??t,i,r).pipe(Ht(({routes:V})=>{const d=i._loadedInjector??t,{snapshot:c,consumedSegments:h,remainingSegments:u}=s,{segmentGroup:p,slicedSegments:R}=pN(e,h,u,V);if(0===R.length&&p.hasChildren())return this.processChildren(d,V,p).pipe(P(Z=>null===Z?null:[new si(c,Z)]));if(0===V.length&&0===R.length)return x([new si(c,[])]);const W=Wn(i)===l;return this.processSegment(d,V,p,R,W?H:l,!0).pipe(P(Z=>[new si(c,Z)]))}))))}getChildConfig(t,e,i){return e.children?x({routes:e.children,injector:t}):e.loadChildren?void 0!==e._loadedRoutes?x({routes:e._loadedRoutes,injector:e._loadedInjector}):function fj(n,t,e,i){const r=t.canLoad;return void 0===r||0===r.length?x(!0):x(r.map(a=>{const o=Jl(a,n);return Ci(function Vj(n){return n&&go(n.canLoad)}(o)?o.canLoad(t,e):n.runInContext(()=>o(t,e)))})).pipe(vl(),cN())}(t,e,i).pipe(Le(r=>r?this.configLoader.loadChildren(t,e).pipe(Qe(l=>{e._loadedRoutes=l.routes,e._loadedInjector=l.injector})):function bj(n){return Nl(lN(!1,3))}())):x({routes:[],injector:t})}}function Yj(n){const t=n.value.routeConfig;return t&&""===t.path}function RN(n){const t=[],e=new Set;for(const i of n){if(!Yj(i)){t.push(i);continue}const r=t.find(l=>i.value.routeConfig===l.value.routeConfig);void 0!==r?(r.children.push(...i.children),e.add(r)):t.push(i)}for(const i of e){const r=RN(i.children);t.push(new si(i.value,r))}return t.filter(i=>!e.has(i))}function mN(n){return n.data||{}}function WN(n){return n.resolve||{}}function FN(n){return"string"==typeof n.title||null===n.title}function gR(n){return Ht(t=>{const e=n(t);return e?je(e).pipe(P(()=>t)):x(t)})}const Dl=new f("ROUTES");let fR=(()=>{class n{constructor(){this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap,this.compiler=b(Tg)}loadComponent(e){if(this.componentLoaders.get(e))return this.componentLoaders.get(e);if(e._loadedComponent)return x(e._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(e);const i=Ci(e.loadComponent()).pipe(P(UN),Qe(l=>{this.onLoadEndListener&&this.onLoadEndListener(e),e._loadedComponent=l}),El(()=>{this.componentLoaders.delete(e)})),r=new Sb(i,()=>new he).pipe(iR());return this.componentLoaders.set(e,r),r}loadChildren(e,i){if(this.childrenLoaders.get(i))return this.childrenLoaders.get(i);if(i._loadedRoutes)return x({routes:i._loadedRoutes,injector:i._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(i);const l=this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(P(o=>{this.onLoadEndListener&&this.onLoadEndListener(i);let s,V;return Array.isArray(o)?V=o:(s=o.create(e).injector,V=s.get(Dl,[],Q.Self|Q.Optional).flat()),{routes:V.map(UR),injector:s}}),El(()=>{this.childrenLoaders.delete(i)})),a=new Sb(l,()=>new he).pipe(iR());return this.childrenLoaders.set(i,a),a}loadModuleFactoryOrRoutes(e){return Ci(e()).pipe(P(UN),Le(i=>i instanceof SZ||Array.isArray(i)?x(i):je(this.compiler.compileModuleAsync(i))))}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function UN(n){return function Hj(n){return n&&"object"==typeof n&&"default"in n}(n)?n.default:n}let Fd=(()=>{class n{get hasRequestedNavigation(){return 0!==this.navigationId}constructor(){this.currentNavigation=null,this.lastSuccessfulNavigation=null,this.events=new he,this.configLoader=b(fR),this.environmentInjector=b(Gn),this.urlSerializer=b(co),this.rootContexts=b(Wo),this.inputBindingEnabled=null!==b(ud,{optional:!0}),this.navigationId=0,this.afterPreactivation=()=>x(void 0),this.rootComponentType=null,this.configLoader.onLoadEndListener=r=>this.events.next(new DX(r)),this.configLoader.onLoadStartListener=r=>this.events.next(new YX(r))}complete(){this.transitions?.complete()}handleNavigationRequest(e){const i=++this.navigationId;this.transitions?.next({...this.transitions.value,...e,id:i})}setupNavigations(e){return this.transitions=new St({id:0,currentUrlTree:e.currentUrlTree,currentRawUrl:e.currentUrlTree,extractedUrl:e.urlHandlingStrategy.extract(e.currentUrlTree),urlAfterRedirects:e.urlHandlingStrategy.extract(e.currentUrlTree),rawUrl:e.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:Ro,restoredState:null,currentSnapshot:e.routerState.snapshot,targetSnapshot:null,currentRouterState:e.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe(Ot(i=>0!==i.id),P(i=>({...i,extractedUrl:e.urlHandlingStrategy.extract(i.rawUrl)})),Ht(i=>{let r=!1,l=!1;return x(i).pipe(Qe(a=>{this.currentNavigation={id:a.id,initialUrl:a.rawUrl,extractedUrl:a.extractedUrl,trigger:a.source,extras:a.extras,previousNavigation:this.lastSuccessfulNavigation?{...this.lastSuccessfulNavigation,previousNavigation:null}:null}}),Ht(a=>{const o=e.browserUrlTree.toString(),s=!e.navigated||a.extractedUrl.toString()!==o||o!==e.currentUrlTree.toString();if(!s&&"reload"!==(a.extras.onSameUrlNavigation??e.onSameUrlNavigation)){const d="";return this.events.next(new mo(a.id,e.serializeUrl(i.rawUrl),d,0)),e.rawUrlTree=a.rawUrl,a.resolve(null),Zn}if(e.urlHandlingStrategy.shouldProcessUrl(a.rawUrl))return TN(a.source)&&(e.browserUrlTree=a.extractedUrl),x(a).pipe(Ht(d=>{const c=this.transitions?.getValue();return this.events.next(new dR(d.id,this.urlSerializer.serialize(d.extractedUrl),d.source,d.restoredState)),c!==this.transitions?.getValue()?Zn:Promise.resolve(d)}),function Dj(n,t,e,i,r,l){return Le(a=>function wj(n,t,e,i,r,l,a="emptyOnly"){return new Jj(n,t,e,i,r,a,l).recognize()}(n,t,e,i,a.extractedUrl,r,l).pipe(P(({state:o,tree:s})=>({...a,targetSnapshot:o,urlAfterRedirects:s}))))}(this.environmentInjector,this.configLoader,this.rootComponentType,e.config,this.urlSerializer,e.paramsInheritanceStrategy),Qe(d=>{if(i.targetSnapshot=d.targetSnapshot,i.urlAfterRedirects=d.urlAfterRedirects,this.currentNavigation={...this.currentNavigation,finalUrl:d.urlAfterRedirects},"eager"===e.urlUpdateStrategy){if(!d.extras.skipLocationChange){const h=e.urlHandlingStrategy.merge(d.urlAfterRedirects,d.rawUrl);e.setBrowserUrl(h,d)}e.browserUrlTree=d.urlAfterRedirects}const c=new CX(d.id,this.urlSerializer.serialize(d.extractedUrl),this.urlSerializer.serialize(d.urlAfterRedirects),d.targetSnapshot);this.events.next(c)}));if(s&&e.urlHandlingStrategy.shouldProcessUrl(e.rawUrlTree)){const{id:d,extractedUrl:c,source:h,restoredState:u,extras:p}=a,R=new dR(d,this.urlSerializer.serialize(c),h,u);this.events.next(R);const W=$b(0,this.rootComponentType).snapshot;return x(i={...a,targetSnapshot:W,urlAfterRedirects:c,extras:{...p,skipLocationChange:!1,replaceUrl:!1}})}{const d="";return this.events.next(new mo(a.id,e.serializeUrl(i.extractedUrl),d,1)),e.rawUrlTree=a.rawUrl,a.resolve(null),Zn}}),Qe(a=>{const o=new xX(a.id,this.urlSerializer.serialize(a.extractedUrl),this.urlSerializer.serialize(a.urlAfterRedirects),a.targetSnapshot);this.events.next(o)}),P(a=>i={...a,guards:rj(a.targetSnapshot,a.currentSnapshot,this.rootContexts)}),function Rj(n,t){return Le(e=>{const{targetSnapshot:i,currentSnapshot:r,guards:{canActivateChecks:l,canDeactivateChecks:a}}=e;return 0===a.length&&0===l.length?x({...e,guardsResult:!0}):function mj(n,t,e,i){return je(n).pipe(Le(r=>function gj(n,t,e,i,r){const l=t&&t.routeConfig?t.routeConfig.canDeactivate:null;return l&&0!==l.length?x(l.map(o=>{const s=Uo(t)??r,V=Jl(o,s);return Ci(function hj(n){return n&&go(n.canDeactivate)}(V)?V.canDeactivate(n,t,e,i):s.runInContext(()=>V(n,t,e,i))).pipe(Vr())})).pipe(vl()):x(!0)}(r.component,r.route,e,t,i)),Vr(r=>!0!==r,!0))}(a,i,r,n).pipe(Le(o=>o&&function sj(n){return"boolean"==typeof n}(o)?function Wj(n,t,e,i){return je(t).pipe(Sl(r=>NV(function Uj(n,t){return null!==n&&t&&t(new AX(n)),x(!0)}(r.route.parent,i),function Fj(n,t){return null!==n&&t&&t(new XX(n)),x(!0)}(r.route,i),function Zj(n,t,e){const i=t[t.length-1],l=t.slice(0,t.length-1).reverse().map(a=>function lj(n){const t=n.routeConfig?n.routeConfig.canActivateChild:null;return t&&0!==t.length?{node:n,guards:t}:null}(a)).filter(a=>null!==a).map(a=>Eb(()=>x(a.guards.map(s=>{const V=Uo(a.node)??e,d=Jl(s,V);return Ci(function cj(n){return n&&go(n.canActivateChild)}(d)?d.canActivateChild(i,n):V.runInContext(()=>d(i,n))).pipe(Vr())})).pipe(vl())));return x(l).pipe(vl())}(n,r.path,e),function Tj(n,t,e){const i=t.routeConfig?t.routeConfig.canActivate:null;if(!i||0===i.length)return x(!0);const r=i.map(l=>Eb(()=>{const a=Uo(t)??e,o=Jl(l,a);return Ci(function dj(n){return n&&go(n.canActivate)}(o)?o.canActivate(t,n):a.runInContext(()=>o(t,n))).pipe(Vr())}));return x(r).pipe(vl())}(n,r.route,e))),Vr(r=>!0!==r,!0))}(i,l,n,t):x(o)),P(o=>({...e,guardsResult:o})))})}(this.environmentInjector,a=>this.events.next(a)),Qe(a=>{if(i.guardsResult=a.guardsResult,cr(a.guardsResult))throw rN(0,a.guardsResult);const o=new wX(a.id,this.urlSerializer.serialize(a.extractedUrl),this.urlSerializer.serialize(a.urlAfterRedirects),a.targetSnapshot,!!a.guardsResult);this.events.next(o)}),Ot(a=>!!a.guardsResult||(e.restoreHistory(a),this.cancelNavigationTransition(a,"",3),!1)),gR(a=>{if(a.guards.canActivateChecks.length)return x(a).pipe(Qe(o=>{const s=new JX(o.id,this.urlSerializer.serialize(o.extractedUrl),this.urlSerializer.serialize(o.urlAfterRedirects),o.targetSnapshot);this.events.next(s)}),Ht(o=>{let s=!1;return x(o).pipe(function Aj(n,t){return Le(e=>{const{targetSnapshot:i,guards:{canActivateChecks:r}}=e;if(!r.length)return x(e);let l=0;return je(r).pipe(Sl(a=>function Oj(n,t,e,i){const r=n.routeConfig,l=n._resolve;return void 0!==r?.title&&!FN(r)&&(l[so]=r.title),function Xj(n,t,e,i){const r=function jj(n){return[...Object.keys(n),...Object.getOwnPropertySymbols(n)]}(n);if(0===r.length)return x({});const l={};return je(r).pipe(Le(a=>function zj(n,t,e,i){const r=Uo(t)??i,l=Jl(n,r);return Ci(l.resolve?l.resolve(t,e):r.runInContext(()=>l(t,e)))}(n[a],t,e,i).pipe(Vr(),Qe(o=>{l[a]=o}))),rR(1),function rX(n){return P(()=>n)}(l),Gi(a=>dN(a)?Zn:Nl(a)))}(l,n,t,i).pipe(P(a=>(n._resolvedData=a,n.data=eN(n,e).resolve,r&&FN(r)&&(n.data[so]=r.title),null)))}(a.route,i,n,t)),Qe(()=>l++),rR(1),Le(a=>l===r.length?x(e):Zn))})}(e.paramsInheritanceStrategy,this.environmentInjector),Qe({next:()=>s=!0,complete:()=>{s||(e.restoreHistory(o),this.cancelNavigationTransition(o,"",2))}}))}),Qe(o=>{const s=new vX(o.id,this.urlSerializer.serialize(o.extractedUrl),this.urlSerializer.serialize(o.urlAfterRedirects),o.targetSnapshot);this.events.next(s)}))}),gR(a=>{const o=s=>{const V=[];s.routeConfig?.loadComponent&&!s.routeConfig._loadedComponent&&V.push(this.configLoader.loadComponent(s.routeConfig).pipe(Qe(d=>{s.component=d}),P(()=>{})));for(const d of s.children)V.push(...o(d));return V};return bV(o(a.targetSnapshot.root)).pipe(rd(),vn(1))}),gR(()=>this.afterPreactivation()),P(a=>{const o=function QX(n,t,e){const i=Fo(n,t._root,e?e._root:void 0);return new qb(i,t)}(e.routeReuseStrategy,a.targetSnapshot,a.currentRouterState);return i={...a,targetRouterState:o}}),Qe(a=>{e.currentUrlTree=a.urlAfterRedirects,e.rawUrlTree=e.urlHandlingStrategy.merge(a.urlAfterRedirects,a.rawUrl),e.routerState=a.targetRouterState,"deferred"===e.urlUpdateStrategy&&(a.extras.skipLocationChange||e.setBrowserUrl(e.rawUrlTree,a),e.browserUrlTree=a.urlAfterRedirects)}),((n,t,e,i)=>P(r=>(new ij(t,r.targetRouterState,r.currentRouterState,e,i).activate(n),r)))(this.rootContexts,e.routeReuseStrategy,a=>this.events.next(a),this.inputBindingEnabled),vn(1),Qe({next:a=>{r=!0,this.lastSuccessfulNavigation=this.currentNavigation,e.navigated=!0,this.events.next(new hr(a.id,this.urlSerializer.serialize(a.extractedUrl),this.urlSerializer.serialize(e.currentUrlTree))),e.titleStrategy?.updateTitle(a.targetRouterState.snapshot),a.resolve(!0)},complete:()=>{r=!0}}),El(()=>{r||l||this.cancelNavigationTransition(i,"",1),this.currentNavigation?.id===i.id&&(this.currentNavigation=null)}),Gi(a=>{if(l=!0,oN(a)){aN(a)||(e.navigated=!0,e.restoreHistory(i,!0));const o=new cd(i.id,this.urlSerializer.serialize(i.extractedUrl),a.message,a.cancellationCode);if(this.events.next(o),aN(a)){const s=e.urlHandlingStrategy.merge(a.url,e.rawUrlTree),V={skipLocationChange:i.extras.skipLocationChange,replaceUrl:"eager"===e.urlUpdateStrategy||TN(i.source)};e.scheduleNavigation(s,Ro,null,V,{resolve:i.resolve,reject:i.reject,promise:i.promise})}else i.resolve(!1)}else{e.restoreHistory(i,!0);const o=new cR(i.id,this.urlSerializer.serialize(i.extractedUrl),a,i.targetSnapshot??void 0);this.events.next(o);try{i.resolve(e.errorHandler(a))}catch(s){i.reject(s)}}return Zn}))}))}cancelNavigationTransition(e,i,r){const l=new cd(e.id,this.urlSerializer.serialize(e.extractedUrl),i,r);this.events.next(l),e.resolve(!1)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function TN(n){return n!==Ro}let ZN=(()=>{class n{buildTitle(e){let i,r=e.root;for(;void 0!==r;)i=this.getResolvedTitleForRoute(r)??i,r=r.children.find(l=>l.outlet===H);return i}getResolvedTitleForRoute(e){return e.data[so]}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return b(Bj)},providedIn:"root"}),n})(),Bj=(()=>{class n extends ZN{constructor(e){super(),this.title=e}updateTitle(e){const i=this.buildTitle(e);void 0!==i&&this.title.setTitle(i)}}return n.\u0275fac=function(e){return new(e||n)(T(Pf))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Pj=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return b(Lj)},providedIn:"root"}),n})();class Qj{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}let Lj=(()=>{class n extends Qj{}return n.\u0275fac=function(){let t;return function(i){return(t||(t=function we(n){return Hn(()=>{const t=n.prototype.constructor,e=t[Bn]||Nc(t),i=Object.prototype;let r=Object.getPrototypeOf(n.prototype).constructor;for(;r&&r!==i;){const l=r[Bn]||Nc(r);if(l&&l!==e)return l;r=Object.getPrototypeOf(r)}return l=>new l})}(n)))(i||n)}}(),n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Ud=new f("",{providedIn:"root",factory:()=>({})});let Kj=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:function(){return b(_j)},providedIn:"root"}),n})(),_j=(()=>{class n{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,i){return e}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();var fo=function(n){return n[n.COMPLETE=0]="COMPLETE",n[n.FAILED=1]="FAILED",n[n.REDIRECTING=2]="REDIRECTING",n}(fo||{});function gN(n,t){n.events.pipe(Ot(e=>e instanceof hr||e instanceof cd||e instanceof cR||e instanceof mo),P(e=>e instanceof hr||e instanceof mo?fo.COMPLETE:e instanceof cd&&(0===e.code||1===e.code)?fo.REDIRECTING:fo.FAILED),Ot(e=>e!==fo.REDIRECTING),vn(1)).subscribe(()=>{t()})}function qj(n){throw n}function $j(n,t,e){return t.parse("/")}const ez={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},tz={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let rn=(()=>{class n{get navigationId(){return this.navigationTransitions.navigationId}get browserPageId(){if("computed"===this.canceledNavigationResolution)return this.location.getState()?.\u0275routerPageId}get events(){return this.navigationTransitions.events}constructor(){this.disposed=!1,this.currentPageId=0,this.console=b(Ug),this.isNgZoneEnabled=!1,this.options=b(Ud,{optional:!0})||{},this.pendingTasks=b(qs),this.errorHandler=this.options.errorHandler||qj,this.malformedUriErrorHandler=this.options.malformedUriErrorHandler||$j,this.navigated=!1,this.lastSuccessfulId=-1,this.urlHandlingStrategy=b(Kj),this.routeReuseStrategy=b(Pj),this.titleStrategy=b(ZN),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.config=b(Dl,{optional:!0})?.flat()??[],this.navigationTransitions=b(Fd),this.urlSerializer=b(co),this.location=b(lV),this.componentInputBindingEnabled=!!b(ud,{optional:!0}),this.isNgZoneEnabled=b(K)instanceof K&&K.isInAngularZone(),this.resetConfig(this.config),this.currentUrlTree=new Cl,this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.routerState=$b(0,null),this.navigationTransitions.setupNavigations(this).subscribe(e=>{this.lastSuccessfulId=e.id,this.currentPageId=this.browserPageId??0},e=>{this.console.warn(`Unhandled Navigation Error: ${e}`)})}resetRootComponentType(e){this.routerState.root.component=e,this.navigationTransitions.rootComponentType=e}initialNavigation(){if(this.setUpLocationChangeListener(),!this.navigationTransitions.hasRequestedNavigation){const e=this.location.getState();this.navigateToSyncWithBrowser(this.location.path(!0),Ro,e)}}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{const i="popstate"===e.type?"popstate":"hashchange";"popstate"===i&&setTimeout(()=>{this.navigateToSyncWithBrowser(e.url,i,e.state)},0)}))}navigateToSyncWithBrowser(e,i,r){const l={replaceUrl:!0},a=r?.navigationId?r:null;if(r){const s={...r};delete s.navigationId,delete s.\u0275routerPageId,0!==Object.keys(s).length&&(l.state=s)}const o=this.parseUrl(e);this.scheduleNavigation(o,i,a,l)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}get lastSuccessfulNavigation(){return this.navigationTransitions.lastSuccessfulNavigation}resetConfig(e){this.config=e.map(UR),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(e,i={}){const{relativeTo:r,queryParams:l,fragment:a,queryParamsHandling:o,preserveFragment:s}=i,V=s?this.currentUrlTree.fragment:a;let c,d=null;switch(o){case"merge":d={...this.currentUrlTree.queryParams,...l};break;case"preserve":d=this.currentUrlTree.queryParams;break;default:d=l||null}null!==d&&(d=this.removeEmptyProps(d));try{c=jb(r?r.snapshot:this.routerState.snapshot.root)}catch{("string"!=typeof e[0]||!e[0].startsWith("/"))&&(e=[]),c=this.currentUrlTree.root}return zb(c,e,d,V??null)}navigateByUrl(e,i={skipLocationChange:!1}){const r=cr(e)?e:this.parseUrl(e),l=this.urlHandlingStrategy.merge(r,this.rawUrlTree);return this.scheduleNavigation(l,Ro,null,i)}navigate(e,i={skipLocationChange:!1}){return function nz(n){for(let t=0;t<n.length;t++)if(null==n[t])throw new U(4008,!1)}(e),this.navigateByUrl(this.createUrlTree(e,i),i)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let i;try{i=this.urlSerializer.parse(e)}catch(r){i=this.malformedUriErrorHandler(r,this.urlSerializer,e)}return i}isActive(e,i){let r;if(r=!0===i?{...ez}:!1===i?{...tz}:i,cr(e))return xb(this.currentUrlTree,e,r);const l=this.parseUrl(e);return xb(this.currentUrlTree,l,r)}removeEmptyProps(e){return Object.keys(e).reduce((i,r)=>{const l=e[r];return null!=l&&(i[r]=l),i},{})}scheduleNavigation(e,i,r,l,a){if(this.disposed)return Promise.resolve(!1);let o,s,V;a?(o=a.resolve,s=a.reject,V=a.promise):V=new Promise((c,h)=>{o=c,s=h});const d=this.pendingTasks.add();return gN(this,()=>{queueMicrotask(()=>this.pendingTasks.remove(d))}),this.navigationTransitions.handleNavigationRequest({source:i,restoredState:r,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl:e,extras:l,resolve:o,reject:s,promise:V,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),V.catch(c=>Promise.reject(c))}setBrowserUrl(e,i){const r=this.urlSerializer.serialize(e);if(this.location.isCurrentPathEqualTo(r)||i.extras.replaceUrl){const a={...i.extras.state,...this.generateNgRouterState(i.id,this.browserPageId)};this.location.replaceState(r,"",a)}else{const l={...i.extras.state,...this.generateNgRouterState(i.id,(this.browserPageId??0)+1)};this.location.go(r,"",l)}}restoreHistory(e,i=!1){if("computed"===this.canceledNavigationResolution){const l=this.currentPageId-(this.browserPageId??this.currentPageId);0!==l?this.location.historyGo(l):this.currentUrlTree===this.getCurrentNavigation()?.finalUrl&&0===l&&(this.resetState(e),this.browserUrlTree=e.currentUrlTree,this.resetUrlToCurrentUrlTree())}else"replace"===this.canceledNavigationResolution&&(i&&this.resetState(e),this.resetUrlToCurrentUrlTree())}resetState(e){this.routerState=e.currentRouterState,this.currentUrlTree=e.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(e,i){return"computed"===this.canceledNavigationResolution?{navigationId:e,\u0275routerPageId:i}:{navigationId:e}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Td=(()=>{class n{constructor(e,i,r,l,a,o){this.router=e,this.route=i,this.tabIndexAttribute=r,this.renderer=l,this.el=a,this.locationStrategy=o,this.href=null,this.commands=null,this.onChanges=new he,this.preserveFragment=!1,this.skipLocationChange=!1,this.replaceUrl=!1;const s=a.nativeElement.tagName?.toLowerCase();this.isAnchorElement="a"===s||"area"===s,this.isAnchorElement?this.subscription=e.events.subscribe(V=>{V instanceof hr&&this.updateHref()}):this.setTabIndexIfNotOnNativeEl("0")}setTabIndexIfNotOnNativeEl(e){null!=this.tabIndexAttribute||this.isAnchorElement||this.applyAttributeValue("tabindex",e)}ngOnChanges(e){this.isAnchorElement&&this.updateHref(),this.onChanges.next(this)}set routerLink(e){null!=e?(this.commands=Array.isArray(e)?e:[e],this.setTabIndexIfNotOnNativeEl("0")):(this.commands=null,this.setTabIndexIfNotOnNativeEl(null))}onClick(e,i,r,l,a){return!!(null===this.urlTree||this.isAnchorElement&&(0!==e||i||r||l||a||"string"==typeof this.target&&"_self"!=this.target))||(this.router.navigateByUrl(this.urlTree,{skipLocationChange:this.skipLocationChange,replaceUrl:this.replaceUrl,state:this.state}),!this.isAnchorElement)}ngOnDestroy(){this.subscription?.unsubscribe()}updateHref(){this.href=null!==this.urlTree&&this.locationStrategy?this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(this.urlTree)):null;const e=null===this.href?null:function YF(n,t,e){return function GG(n,t){return"src"===t&&("embed"===n||"frame"===n||"iframe"===n||"media"===n||"script"===n)||"href"===t&&("base"===n||"link"===n)?vF:JF}(t,e)(n)}(this.href,this.el.nativeElement.tagName.toLowerCase(),"href");this.applyAttributeValue("href",e)}applyAttributeValue(e,i){const r=this.renderer,l=this.el.nativeElement;null!==i?r.setAttribute(l,e,i):r.removeAttribute(l,e)}get urlTree(){return null===this.commands?null:this.router.createUrlTree(this.commands,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:this.preserveFragment})}}return n.\u0275fac=function(e){return new(e||n)(F(rn),F(wl),function Cr(n){return function QE(n,t){if("class"===t)return n.classes;if("style"===t)return n.styles;const e=n.attrs;if(e){const i=e.length;let r=0;for(;r<i;){const l=e[r];if(wm(l))break;if(0===l)r+=2;else if("number"==typeof l)for(r++;r<i&&"string"==typeof e[r];)r++;else{if(l===t)return e[r+1];r+=2}}}return null}(et(),n)}("tabindex"),F(qn),F(Ue),F(tr))},n.\u0275dir=I({type:n,selectors:[["","routerLink",""]],hostVars:1,hostBindings:function(e,i){1&e&&ee("click",function(l){return i.onClick(l.button,l.ctrlKey,l.shiftKey,l.altKey,l.metaKey)}),2&e&&Je("target",i.target)},inputs:{target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",state:"state",relativeTo:"relativeTo",preserveFragment:["preserveFragment","preserveFragment",pl],skipLocationChange:["skipLocationChange","skipLocationChange",pl],replaceUrl:["replaceUrl","replaceUrl",pl],routerLink:"routerLink"},standalone:!0,features:[HU,Ct]}),n})(),fN=(()=>{class n{get isActive(){return this._isActive}constructor(e,i,r,l,a){this.router=e,this.element=i,this.renderer=r,this.cdr=l,this.link=a,this.classes=[],this._isActive=!1,this.routerLinkActiveOptions={exact:!1},this.isActiveChange=new oe,this.routerEventsSubscription=e.events.subscribe(o=>{o instanceof hr&&this.update()})}ngAfterContentInit(){x(this.links.changes,x(null)).pipe(Ur()).subscribe(e=>{this.update(),this.subscribeToEachLinkOnChanges()})}subscribeToEachLinkOnChanges(){this.linkInputChangesSubscription?.unsubscribe();const e=[...this.links.toArray(),this.link].filter(i=>!!i).map(i=>i.onChanges);this.linkInputChangesSubscription=je(e).pipe(Ur()).subscribe(i=>{this._isActive!==this.isLinkActive(this.router)(i)&&this.update()})}set routerLinkActive(e){const i=Array.isArray(e)?e:e.split(" ");this.classes=i.filter(r=>!!r)}ngOnChanges(e){this.update()}ngOnDestroy(){this.routerEventsSubscription.unsubscribe(),this.linkInputChangesSubscription?.unsubscribe()}update(){!this.links||!this.router.navigated||queueMicrotask(()=>{const e=this.hasActiveLinks();this._isActive!==e&&(this._isActive=e,this.cdr.markForCheck(),this.classes.forEach(i=>{e?this.renderer.addClass(this.element.nativeElement,i):this.renderer.removeClass(this.element.nativeElement,i)}),e&&void 0!==this.ariaCurrentWhenActive?this.renderer.setAttribute(this.element.nativeElement,"aria-current",this.ariaCurrentWhenActive.toString()):this.renderer.removeAttribute(this.element.nativeElement,"aria-current"),this.isActiveChange.emit(e))})}isLinkActive(e){const i=function iz(n){return!!n.paths}(this.routerLinkActiveOptions)?this.routerLinkActiveOptions:this.routerLinkActiveOptions.exact||!1;return r=>!!r.urlTree&&e.isActive(r.urlTree,i)}hasActiveLinks(){const e=this.isLinkActive(this.router);return this.link&&e(this.link)||this.links.some(e)}}return n.\u0275fac=function(e){return new(e||n)(F(rn),F(Ue),F(qn),F(Jn),F(Td,8))},n.\u0275dir=I({type:n,selectors:[["","routerLinkActive",""]],contentQueries:function(e,i,r){if(1&e&&function $t(n,t,e,i){const r=$();if(r.firstCreatePass){const l=et();tg(r,new qZ(t,e,i),l.index),function Mw(n,t){const e=n.contentQueries||(n.contentQueries=[]);t!==(e.length?e[e.length-1]:-1)&&e.push(n.queries.length-1,t)}(r,n),2==(2&e)&&(r.staticContentQueries=!0)}eg(r,g(),e)}(r,Td,5),2&e){let l;st(l=Vt())&&(i.links=l)}},inputs:{routerLinkActiveOptions:"routerLinkActiveOptions",ariaCurrentWhenActive:"ariaCurrentWhenActive",routerLinkActive:"routerLinkActive"},outputs:{isActiveChange:"isActiveChange"},exportAs:["routerLinkActive"],standalone:!0,features:[Ct]}),n})();class MN{}let rz=(()=>{class n{constructor(e,i,r,l,a){this.router=e,this.injector=r,this.preloadingStrategy=l,this.loader=a}setUpPreloading(){this.subscription=this.router.events.pipe(Ot(e=>e instanceof hr),Sl(()=>this.preload())).subscribe(()=>{})}preload(){return this.processRoutes(this.injector,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(e,i){const r=[];for(const l of i){l.providers&&!l._injector&&(l._injector=$h(l.providers,e,`Route: ${l.path}`));const a=l._injector??e,o=l._loadedInjector??a;(l.loadChildren&&!l._loadedRoutes&&void 0===l.canLoad||l.loadComponent&&!l._loadedComponent)&&r.push(this.preloadConfig(a,l)),(l.children||l._loadedRoutes)&&r.push(this.processRoutes(o,l.children??l._loadedRoutes))}return je(r).pipe(Ur())}preloadConfig(e,i){return this.preloadingStrategy.preload(i,()=>{let r;r=i.loadChildren&&void 0===i.canLoad?this.loader.loadChildren(e,i):x(null);const l=r.pipe(Le(a=>null===a?x(void 0):(i._loadedRoutes=a.routes,i._loadedInjector=a.injector,this.processRoutes(a.injector??e,a.routes))));return i.loadComponent&&!i._loadedComponent?je([l,this.loader.loadComponent(i)]).pipe(Ur()):l})}}return n.\u0275fac=function(e){return new(e||n)(T(rn),T(Tg),T(Gn),T(MN),T(fR))},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const MR=new f("");let kN=(()=>{class n{constructor(e,i,r,l,a={}){this.urlSerializer=e,this.transitions=i,this.viewportScroller=r,this.zone=l,this.options=a,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},a.scrollPositionRestoration=a.scrollPositionRestoration||"disabled",a.anchorScrolling=a.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.transitions.events.subscribe(e=>{e instanceof dR?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof hr?(this.lastId=e.id,this.scheduleScrollEvent(e,this.urlSerializer.parse(e.urlAfterRedirects).fragment)):e instanceof mo&&0===e.code&&(this.lastSource=void 0,this.restoredId=0,this.scheduleScrollEvent(e,this.urlSerializer.parse(e.url).fragment))})}consumeScrollEvents(){return this.transitions.events.subscribe(e=>{e instanceof Kb&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,i){this.zone.runOutsideAngular(()=>{setTimeout(()=>{this.zone.run(()=>{this.transitions.events.next(new Kb(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,i))})},0)})}ngOnDestroy(){this.routerEventsSubscription?.unsubscribe(),this.scrollEventsSubscription?.unsubscribe()}}return n.\u0275fac=function(e){Th()},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();function Vi(n,t){return{\u0275kind:n,\u0275providers:t}}function NN(){const n=b(vt);return t=>{const e=n.get(Mi);if(t!==e.components[0])return;const i=n.get(rn),r=n.get(EN);1===n.get(kR)&&i.initialNavigation(),n.get(SN,null,Q.Optional)?.setUpPreloading(),n.get(MR,null,Q.Optional)?.init(),i.resetRootComponentType(e.componentTypes[0]),r.closed||(r.next(),r.complete(),r.unsubscribe())}}const EN=new f("",{factory:()=>new he}),kR=new f("",{providedIn:"root",factory:()=>1}),SN=new f("");function sz(n){return Vi(0,[{provide:SN,useExisting:rz},{provide:MN,useExisting:n}])}const GN=new f("ROUTER_FORROOT_GUARD"),dz=[lV,{provide:co,useClass:lR},rn,Wo,{provide:wl,useFactory:function bN(n){return n.routerState.root},deps:[rn]},fR,[]];function cz(){return new yg("Router",rn)}let yN=(()=>{class n{constructor(e){}static forRoot(e,i){return{ngModule:n,providers:[dz,[],{provide:Dl,multi:!0,useValue:e},{provide:GN,useFactory:Rz,deps:[[rn,new Hi,new la]]},{provide:Ud,useValue:i||{}},i?.useHash?{provide:tr,useClass:XJ}:{provide:tr,useClass:af},{provide:MR,useFactory:()=>{const n=b(lY),t=b(K),e=b(Ud),i=b(Fd),r=b(co);return e.scrollOffset&&n.setOffset(e.scrollOffset),new kN(r,i,n,t,e)}},i?.preloadingStrategy?sz(i.preloadingStrategy).\u0275providers:[],{provide:yg,multi:!0,useFactory:cz},i?.initialNavigation?mz(i):[],i?.bindToComponentInputs?Vi(8,[iN,{provide:ud,useExisting:iN}]).\u0275providers:[],[{provide:IN,useFactory:NN},{provide:fu,multi:!0,useExisting:IN}]]}}static forChild(e){return{ngModule:n,providers:[{provide:Dl,multi:!0,useValue:e}]}}}return n.\u0275fac=function(e){return new(e||n)(T(GN,8))},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({}),n})();function Rz(n){return"guarded"}function mz(n){return["disabled"===n.initialNavigation?Vi(3,[{provide:Ru,multi:!0,useFactory:()=>{const t=b(rn);return()=>{t.setUpLocationChangeListener()}}},{provide:kR,useValue:2}]).\u0275providers:[],"enabledBlocking"===n.initialNavigation?Vi(2,[{provide:kR,useValue:0},{provide:Ru,multi:!0,deps:[vt],useFactory:t=>{const e=t.get(AJ,Promise.resolve());return()=>e.then(()=>new Promise(i=>{const r=t.get(rn),l=t.get(EN);gN(r,()=>{i(!0)}),t.get(Fd).afterPreactivation=()=>(i(!0),l.closed?x(void 0):l),r.initialNavigation()}))}}]).\u0275providers:[]]}const IN=new f("");function CN(n,t,e,i,r,l,a){try{var o=n[l](a),s=o.value}catch(V){return void e(V)}o.done?t(s):Promise.resolve(s).then(i,r)}function xN(n){return function(){var t=this,e=arguments;return new Promise(function(i,r){var l=n.apply(t,e);function a(s){CN(l,i,r,a,o,"next",s)}function o(s){CN(l,i,r,a,o,"throw",s)}a(void 0)})}}const Mz={TR:"Geli\u015fime a\xe7\u0131k ve her zaman \xf6\u011frenmeye istekli biriyim. \xd6\u011frendiklerimi payla\u015fmak i\xe7in kurdu\u011fum web sitesindesiniz.",EN:"I am a person who is open to development and always willing to learn. You're on the website I've set up to try and post what I've learned."},kz={TR:[{title:"Angulogic - Sidebar",description:"@angulogic/ng-sidebar, Angular uygulamalar\u0131 i\xe7in geli\u015ftirilen, dinamik, etkile\u015fimli ve y\xfcksek d\xfczeyde \xf6zelle\u015ftirilebilir bir kenar \xe7ubu\u011fu bile\u015fenidir. Kullan\u0131c\u0131 deneyimini geli\u015ftirmek amac\u0131yla i\xe7 i\xe7e ge\xe7mi\u015f men\xfcler, arama fonksiyonelli\u011fi, favori y\xf6netimi, tema de\u011fi\u015ftirme, duyarl\u0131 (responsive) g\xf6r\xfcnt\xfcleme modlar\u0131 ve yeniden boyutland\u0131r\u0131labilir / otomatik konumland\u0131r\u0131labilir yap\u0131 gibi geli\u015fmi\u015f \xf6zellikler sunmaktad\u0131r.",extras:["Angular","Npm","UI/UX","Responsive Design","CSS"],id:"project7",continueUrl:"https://github.com/skarahan35/angulogic",order:"1"},{title:"Wave",description:"Bu proje, web sayfas\u0131 \xfczerindeki fare hareketlerini ve t\u0131klamalar\u0131n\u0131 ger\xe7ek zamanl\u0131 olarak takip eden bir sistem sunmaktad\u0131r. Backend i\xe7in NestJS, frontend i\xe7in Angular kullan\u0131larak geli\u015ftirilmi\u015f olan sistem, WebSocket protokol\xfc arac\u0131l\u0131\u011f\u0131yla veri aktar\u0131m\u0131 yaparak kullan\u0131c\u0131 aray\xfcz\xfcn\xfcn anl\u0131k g\xfcncellenmesini sa\u011flamaktad\u0131r.",extras:["Angular","NestJS","WebSocket","Real-time Tracking"],id:"project8",continueUrl:"https://github.com/ergulferik/wave",order:"2"},{title:"Spy",description:'"Casus Kim?" sosyal etkile\u015fim ve stratejik d\xfc\u015f\xfcnmeyi birle\u015ftiren, arkada\u015f gruplar\u0131 i\xe7in tasarlanm\u0131\u015f bir mobil kelime oyunudur. Oyunculara belirli kelimeler atan\u0131r ve i\xe7lerinden biri rastgele olarak casus se\xe7ilir. Casusun kim oldu\u011funu bulmak i\xe7in oyuncular birbirleriyle ileti\u015fim kurarak stratejik tahminlerde bulunur.',extras:["Angular","Ionic","Web","Mobile","State Management"],continueUrl:"https://ergulferik.github.io/spy/",id:"project9",order:"3"},{title:"DarkChicken",description:"Angular ile geli\u015ftiriciler i\xe7in web uygulamalar\u0131nda kullan\u0131lmak \xfczere kapsaml\u0131 ve kullan\u0131m\u0131 kolay bir UI ve Datatable elementleri sa\u011flayan bir npm paketi olu\u015fturdum. Bu paket, geli\u015ftiricilerin projelerinde h\u0131zl\u0131 ve tutarl\u0131 bir \u015fekilde kullan\u0131c\u0131 aray\xfcz\xfc olu\u015fturmalar\u0131na olanak tan\u0131r. Paket i\xe7erisinde, \xe7e\u015fitli UI bile\u015fenleri, formlar, butonlar, modallar ve tablolara ek olarak, veri y\xf6netimini kolayla\u015ft\u0131ran dinamik datatable bile\u015fenleri yer almaktad\u0131r. Geli\u015ftiricilerin paketi kolayca entegre edebilmesi ve kullanabilmesi i\xe7in kapsaml\u0131 bir web d\xf6k\xfcman\u0131 da haz\u0131rlad\u0131m. Bu d\xf6k\xfcman, ad\u0131m ad\u0131m kurulum talimatlar\u0131, \xf6rnek kodlar ve kullan\u0131c\u0131n\u0131n ihtiya\xe7 duyabilece\u011fi t\xfcm bilgileri i\xe7ermektedir. Ayr\u0131ca, paket s\xfcrekli olarak g\xfcncellenmekte ve yeni \xf6zellikler eklenmektedir.",extras:["Angular","Npm","UI kit","Datatable","JavaScript","HTML","CSS"],id:"project1",continueUrl:"https://github.com/skarahan35/darkchicken",order:"4"},{title:"DC Toast",description:"Angular framework\xfc ile geli\u015ftiriciler i\xe7in web uygulamalar\u0131nda kullan\u0131lmak \xfczere olu\u015fturdu\u011fum bu npm paketi, kullan\u0131c\u0131 bildirimleri ve geri bildirim mesajlar\u0131 i\xe7in \xf6zelle\u015ftirilebilir toast bile\u015fenleri sa\u011flar. Paketin i\xe7erisinde, farkl\u0131 durumlar i\xe7in \xf6nceden tan\u0131mlanm\u0131\u015f toast stilleri (ba\u015far\u0131, hata, bilgi, uyar\u0131) bulunmakta ve kullan\u0131c\u0131lar\u0131n bu toast bile\u015fenlerini ihtiya\xe7lar\u0131na g\xf6re \xf6zelle\u015ftirebilmesi m\xfcmk\xfcnd\xfcr. Geli\u015ftiricilerin bu paketi projelerine entegre edebilmesi ve kullanabilmesi i\xe7in detayl\u0131 bir web d\xf6k\xfcman\u0131 haz\u0131rlad\u0131m. Bu d\xf6k\xfcman, ad\u0131m ad\u0131m kurulum ve kullan\u0131m talimatlar\u0131, \xf6rnek uygulamalar ve s\u0131k kar\u015f\u0131la\u015f\u0131lan sorunlar i\xe7in \xe7\xf6z\xfcmler i\xe7ermektedir. Paket, kullan\u0131c\u0131 deneyimini iyile\u015ftirmek ve uygulamalar\u0131n daha profesyonel g\xf6r\xfcnmesini sa\u011flamak amac\u0131yla s\xfcrekli olarak g\xfcncellenmekte ve geli\u015ftirilmekte.",extras:["Angular","Npm","JavaScript","HTML","CSS"],id:"project2",continueUrl:"https://www.npmjs.com/package/dc-toast-ng",order:"5"},{title:"AllScan",description:"Web Ba\u011flant\u0131s\u0131 G\xfcvenli\u011fi Testi projesi, kullan\u0131c\u0131lar\u0131n gezindikleri web sayfalar\u0131 \xfczerinde bulunan ba\u011flant\u0131lar\u0131n g\xfcvenlik durumunu taray\u0131p kullan\u0131c\u0131ya raporlayan bir Google Chrome eklentisidir. Bu projede, frontend k\u0131sm\u0131 i\xe7in JavaScript, HTML ve CSS teknolojilerini kullanarak kullan\u0131c\u0131 dostu bir aray\xfcz tasarlad\u0131m. Backend k\u0131sm\u0131nda ise Python, FastAPI ve BeautifulSoup teknolojilerini kullanarak g\xfcvenlik tarama ve raporlama fonksiyonlar\u0131n\u0131 geli\u015ftirdim. Eklenti, ziyaret edilen web sayfas\u0131ndaki t\xfcm ba\u011flant\u0131lar\u0131 tarar, ba\u011flant\u0131lar\u0131n g\xfcvenlik durumunu analiz eder ve sonu\xe7lar\u0131 kullan\u0131c\u0131ya g\xf6rsel olarak sunar. Geli\u015ftirilen proje, kullan\u0131c\u0131lar\u0131n internet g\xfcvenli\u011fini art\u0131rmak amac\u0131yla tasarlanm\u0131\u015f olup, phishing ve zararl\u0131 i\xe7erik bar\u0131nd\u0131ran ba\u011flant\u0131lardan korunmalar\u0131n\u0131 sa\u011flar. Projenin geli\u015ftirilmesi s\xfcrecinde detayl\u0131 bir kullan\u0131m ve tasar\u0131m d\xf6k\xfcman\u0131 haz\u0131rlad\u0131m. Bu d\xf6k\xfcman, eklentinin kurulumu, kullan\u0131m\u0131 ve teknik detaylar\u0131 hakk\u0131nda kapsaml\u0131 bilgiler i\xe7ermektedir. Ayr\u0131ca, eklentinin daha etkili \xe7al\u0131\u015fabilmesi i\xe7in \xe7e\u015fitli test senaryolar\u0131 ve kullan\u0131c\u0131 geri bildirimlerine g\xf6re g\xfcncellemeler yap\u0131lm\u0131\u015ft\u0131r.",extras:["JavaScript","HTML","CSS","Python","FastAPI","BeautifulSoup"],id:"project3",continueUrl:"https://github.com/ergulferik/All-Scan",order:"6"},{title:"K\xfct\xfcphane Y\xf6netim Uygulamas\u0131",description:"K\xfct\xfcphane Y\xf6netim Uygulamas\u0131, bir k\xfct\xfcphane i\xe7erisindeki kitaplar\u0131n kullan\u0131c\u0131 yetkisine g\xf6re listelenmesini, al\u0131nmas\u0131n\u0131, iade edilmesini ve silinmesini sa\u011flayan kapsaml\u0131 bir y\xf6netim sistemidir. Proje, frontend taraf\u0131nda Angular, HTML, CSS, JavaScript ve NGX teknolojileri kullan\u0131larak geli\u015ftirildi. Bu bile\u015fenler, kullan\u0131c\u0131 dostu ve dinamik bir aray\xfcz olu\u015fturmak i\xe7in kullan\u0131ld\u0131. Backend taraf\u0131nda ise C#, ABP Framework ve MSSQL teknolojileri kullan\u0131larak sa\u011flam ve g\xfcvenilir bir veri y\xf6netim sistemi olu\u015fturuldu. Uygulama, kullan\u0131c\u0131lar\u0131n kitaplar\u0131 kolayca y\xf6netebilmelerini sa\u011flamak amac\u0131yla tasarland\u0131 ve farkl\u0131 kullan\u0131c\u0131 yetkilerine g\xf6re \xf6zelle\u015ftirilebilir \xf6zellikler sunar. Geli\u015ftirme s\xfcrecinde, uygulaman\u0131n nas\u0131l kullan\u0131laca\u011f\u0131 ve \xe7e\u015fitli fonksiyonlar\u0131n\u0131n nas\u0131l \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131 detayl\u0131 bir \u015fekilde a\xe7\u0131klayan akademik d\xf6k\xfcmanlar haz\u0131rlad\u0131m. Bu d\xf6k\xfcmanlar, kullan\u0131c\u0131lar\u0131n uygulamay\u0131 en verimli \u015fekilde kullanabilmelerini sa\u011flamak i\xe7in \xf6rnekler ve kullan\u0131m senaryolar\u0131 i\xe7ermektedir.",extras:["Angular","HTML","CSS","JavaScript","NGX","C#","ABP Framework"],id:"project4",continueUrl:"https://github.com/ergulferik/Virtual-Shelf-Browser",order:"7"},{title:"Apartman Y\xf6netim Uygulamas\u0131",description:"Apartman Y\xf6netim Uygulamas\u0131, bir apartman i\xe7erisindeki ailelerin ileti\u015fim ve y\xf6netimini sa\u011flayan kapsaml\u0131 bir \xe7\xf6z\xfcmd\xfcr. Bu proje, Computer Network Programming esaslar\u0131na dayanarak geli\u015ftirilmi\u015f olup, C#, .NET Core, WebSocket ve TCP/IP teknolojileri kullan\u0131larak olu\u015fturulmu\u015ftur. Uygulama, apartman sakinlerinin birbirleriyle ileti\u015fim kurmalar\u0131n\u0131, y\xf6netim ile ilgili bilgileri payla\u015fmalar\u0131n\u0131 ve \xe7e\u015fitli apartman hizmetlerini y\xf6netmelerini sa\u011flar. Proje, kullan\u0131c\u0131 dostu bir aray\xfcz ve g\xfcvenilir bir altyap\u0131 sunarak apartman y\xf6netimini kolayla\u015ft\u0131r\u0131r. Geli\u015ftirme s\xfcrecinde, uygulaman\u0131n nas\u0131l kullan\u0131laca\u011f\u0131na dair detayl\u0131 bir kullan\u0131m ve tasar\u0131m d\xf6k\xfcman\u0131 haz\u0131rlad\u0131m. Bu d\xf6k\xfcman, uygulaman\u0131n kurulumu, kullan\u0131m\u0131 ve \xe7e\u015fitli fonksiyonlar\u0131n\u0131n nas\u0131l \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ayr\u0131nt\u0131l\u0131 bir \u015fekilde a\xe7\u0131klamaktad\u0131r.",extras:["C#",".NET Core","WebSocket","TCP/IP","MVC"],id:"project5",continueUrl:"https://github.com/ergulferik/Apartment-Management-System",order:"8"},{title:"Web Sayfas\u0131 Terc\xfcme Uygulamas\u0131",description:"Web Sayfas\u0131 Terc\xfcme Uygulamas\u0131, bir web sitesi i\xe7erisindeki t\xfcm sayfalardaki metinleri se\xe7ili dile g\xf6re terc\xfcme eden ve terc\xfcme edilmi\u015f sayfalar\u0131 yeni bir domain \xfczerinde yay\u0131nlayan bir uygulamad\u0131r. Bu proje, kullan\u0131c\u0131lar\u0131n web sitelerini farkl\u0131 dillerde eri\u015filebilir k\u0131lmalar\u0131n\u0131 sa\u011flamak amac\u0131yla geli\u015ftirilmi\u015ftir. Uygulama, orijinal web sayfas\u0131ndaki metinleri analiz eder, belirlenen dile \xe7evirir ve \xe7eviriyi yeni bir domain \xfczerinde yay\u0131nlar. Geli\u015ftirme s\xfcrecinde, uygulaman\u0131n kurulumu, kullan\u0131m\u0131 ve teknik detaylar\u0131 hakk\u0131nda kapsaml\u0131 bir kullan\u0131m ve tasar\u0131m d\xf6k\xfcman\u0131 haz\u0131rlad\u0131m. Bu d\xf6k\xfcman, uygulaman\u0131n nas\u0131l \xe7al\u0131\u015ft\u0131\u011f\u0131n\u0131, hangi teknolojilerin kullan\u0131ld\u0131\u011f\u0131n\u0131 ve kullan\u0131c\u0131lar\u0131n kar\u015f\u0131la\u015fabilece\u011fi olas\u0131 sorunlar\u0131n \xe7\xf6z\xfcmlerini i\xe7ermektedir.",extras:["Python","Selenium","BeautifulSoup","Pandas","\xd6r\xfcmcek Mimarisi"],id:"project6",continueUrl:"https://github.com/ergulferik/Website-Translator",order:"9"}],EN:[{title:"Angulogic - Sidebar",description:"@angulogic/ng-sidebar is a dynamic, interactive, and highly customizable sidebar component developed for Angular applications. It enhances user experience by offering advanced features such as nested menus, search functionality, favorite management, theme switching, responsive display modes, and resizable/auto-positioning structures.",extras:["Angular","Npm","UI/UX","Responsive Design","CSS"],id:"project7",continueUrl:"https://github.com/skarahan35/angulogic",order:"1"},{title:"Wave",description:"This project provides a system that tracks mouse movements and clicks on a web page in real-time. The system is developed using Angular for the frontend and NestJS for the backend, utilizing the WebSocket protocol for data transmission to ensure instant UI updates.",extras:["Angular","NestJS","WebSocket","Real-time Tracking"],id:"project8",continueUrl:"https://github.com/ergulferik/wave",order:"2"},{title:"Spy",description:'"Who\'s the Spy?" is a mobile word game designed for friend groups, combining social interaction and strategic thinking. Each player is assigned a specific word, with one random player selected as the spy. Players must communicate and use strategic guessing to identify the spy.',extras:["Angular","Ionic","Web","Mobile","State Management"],continueUrl:"https://ergulferik.github.io/spy/",id:"project9",order:"3"},{title:"DarkChicken",description:"I created a comprehensive and easy-to-use npm package that provides UI and Datatable elements for developers to use in their web applications with Angular. This package allows developers to build user interfaces quickly and consistently in their projects. The package includes various UI components, forms, buttons, modals, and tables, as well as dynamic datatable components to facilitate data management. I also prepared extensive web documentation to help developers easily integrate and use the package. This documentation includes step-by-step installation instructions, example codes, and all the information a user might need. Additionally, the package is constantly updated and new features are added.",extras:["Angular","Npm","UI kit","Datatable","JavaScript","HTML","CSS"],id:"project1",continueUrl:"https://github.com/skarahan35/darkchicken",order:"4"},{title:"DC Toast",description:"This npm package, created with the Angular framework, provides customizable toast components for user notifications and feedback messages in web applications. The package includes predefined toast styles for different situations (success, error, info, warning) and allows users to customize these toast components according to their needs. I prepared detailed web documentation for developers to easily integrate and use this package in their projects. This documentation includes step-by-step installation and usage instructions, example applications, and solutions for common issues. The package is constantly updated and developed to improve user experience and make applications look more professional.",extras:["Angular","Npm","JavaScript","HTML","CSS"],id:"project2",continueUrl:"https://www.npmjs.com/package/dc-toast-ng",order:"5"},{title:"AllScan",description:"The AllScan project is a Google Chrome extension that scans the security status of links on web pages visited by users and reports it to them. In this project, I designed a user-friendly interface using JavaScript, HTML, and CSS for the frontend part. For the backend, I developed security scanning and reporting functions using Python, FastAPI, and BeautifulSoup. The extension scans all links on the visited web page, analyzes their security status, and visually presents the results to the user. This project is designed to enhance users' internet security, helping them avoid phishing and harmful content. During the development process, I prepared detailed usage and design documentation. This documentation includes comprehensive information about the installation, usage, and technical details of the extension. Additionally, various test scenarios and updates based on user feedback were implemented to ensure the extension's effective operation.",extras:["JavaScript","HTML","CSS","Python","FastAPI","BeautifulSoup"],id:"project3",continueUrl:"https://github.com/ergulferik/All-Scan",order:"6"},{title:"Virtual Shelf Browser",description:"The Virtual Shelf Browser is a comprehensive management system that allows the listing, borrowing, returning, and deletion of books in a library based on user permissions. The project was developed using Angular, HTML, CSS, JavaScript, and NGX technologies for the frontend to create a user-friendly and dynamic interface. For the backend, C#, ABP Framework, and MSSQL technologies were used to create a robust and reliable data management system. The application is designed to allow users to easily manage books and offers customizable features based on different user permissions. During the development process, I prepared academic documents detailing how to use the application and its various functions. These documents include examples and usage scenarios to help users utilize the application most effectively.",extras:["Angular","HTML","CSS","JavaScript","NGX","C#","ABP Framework","MSSQL"],id:"project4",continueUrl:"https://github.com/ergulferik/Virtual-Shelf-Browser",order:"7"},{title:"Apartment Management Application",description:"The Apartment Management Application is a comprehensive solution for managing communication and administration within an apartment building. This project is based on Computer Network Programming principles and was developed using C#, .NET Core, WebSocket, and TCP/IP technologies. The application allows apartment residents to communicate with each other, share management-related information, and manage various apartment services. The project offers a user-friendly interface and a reliable infrastructure to facilitate apartment management. During the development process, I prepared detailed usage and design documentation explaining how to use the application and its various functions.",extras:["C#",".NET Core","WebSocket","TCP/IP","MVC"],id:"project5",continueUrl:"https://github.com/ergulferik/Apartment-Management-System",order:"8"},{title:"Website Translation Application",description:"The Website Translation Application translates all the texts on a website into a selected language and publishes the translated pages on a new domain. This project was developed to make websites accessible in different languages for users. The application analyzes the texts on the original website, translates them into the specified language, and publishes the translation on a new domain. During the development process, I prepared detailed usage and design documentation that explains how the application works, the technologies used, and solutions for potential issues users might encounter.",extras:["Python","Selenium","BeautifulSoup","Pandas","Spider Architecture"],id:"project6",continueUrl:"https://github.com/ergulferik/Website-Translator",order:"9"}]},bz={TR:[{title:"\xd6ny\xfcz Geli\u015ftirici",description:"Kerzz POS'ta Angular ve Ionic kullanarak web ve mobil uygulamalar geli\u015ftirdim. NgRx ile durum y\xf6netimi sa\u011flad\u0131m, RxJS kullanarak reaktif programlama uygulad\u0131m ve WebSocket ile ger\xe7ek zamanl\u0131 veri ak\u0131\u015f\u0131 ger\xe7ekle\u015ftirdim. REST API\u2019ler ile backend entegrasyonu yapt\u0131m ve \xf6nbellekleme y\xf6ntemleriyle performans\u0131 optimize ettim. DevExtreme ve AG Grid kullanarak veri tablolar\u0131, grafikler ve interaktif bile\u015fenler geli\u015ftirdim. Duyarl\u0131 tasar\u0131m prensiplerine uygun olarak farkl\u0131 ekran boyutlar\u0131na uyum sa\u011flayan kullan\u0131c\u0131 aray\xfczleri olu\u015fturdum",extras:["Angular","Ionic","NgRx","RxJS","REST API","WebSocket","Frontend Caching","DevExtreme","AG Grid","Responsive Design"],id:"experience0",continueUrl:"https://www.kerzzpos.com/",order:"0",startTime:"10.2024",endTime:"Mevcut",position:"\xd6ny\xfcz Geli\u015ftirici"},{title:"Yaz\u0131l\u0131m Geli\u015ftirici",description:"2Ag Yaz\u0131l\u0131m Hizmetleri'nde g\xf6n\xfcll\xfc staj sonras\u0131nda AR-GE departman\u0131nda Yaz\u0131l\u0131m Uzman\u0131 olarak \xe7al\u0131\u015fmaya ba\u015flad\u0131m. \xc7al\u0131\u015fma s\xfcrecim boyunca HTML, CSS, JavaScript, Angular, Devextreme, RxJs, NGX, C#, ABP Framework, Docker, RabbitMQ ve RedisInsight gibi teknolojilerle \xe7al\u0131\u015ft\u0131m. Frontend taraf\u0131nda geli\u015ftirilen projeye \xf6zel UI/UX elementlerinin olu\u015fturulmas\u0131, responsive sayfa tasar\u0131m\u0131, dinamik component olu\u015fturulmas\u0131, npm k\xfct\xfcphanelerinin olu\u015fturulmas\u0131, veritaban\u0131 (data-grid) tasar\u0131m\u0131, RestAPI kullan\u0131m\u0131, Docker kullan\u0131m\u0131 ve Linux kullan\u0131m\u0131nda g\xf6rev ald\u0131m. Backend taraf\u0131nda ise geli\u015ftirilen projeye \xf6zel veritaban\u0131 olu\u015fturulmas\u0131, veritaban\u0131 ili\u015fkileri, mimari tasar\u0131m standartlar\u0131, mikroservis mimarisi ve RestAPI entegrasyonu g\xf6revlerinde yer ald\u0131m. Ayr\u0131ca, yeni teknolojilerin ve mimari modellerin ara\u015ft\u0131r\u0131lmas\u0131, mimari modellerin geli\u015ftirilmesi ve de\u011fi\u015ftirilmesinde de aktif rol ald\u0131m.",extras:["HTML","CSS","JavaScript","Angular","Devextreme","RxJs","NGX","C#","ABP Framework"],id:"experience1",continueUrl:"https://www.2ag.com.tr",order:"1",startTime:"02.2024",endTime:"10.2024",position:"Yaz\u0131l\u0131m Geli\u015ftirici"},{title:"Yaz\u0131l\u0131m Geli\u015ftirici Stajyeri",description:"2Ag Yaz\u0131l\u0131m Hizmetleri'nde yapt\u0131\u011f\u0131m g\xf6n\xfcll\xfc staj s\xfcresince HTML, CSS, JavaScript, Angular, Devextreme, RxJs, NGX, C#, ABP Framework, Docker, RabbitMQ ve RedisInsight gibi teknolojilerle \xe7al\u0131\u015ft\u0131m. Staj s\u0131ras\u0131nda frontend taraf\u0131nda projeye \xf6zel UI/UX elementlerinin olu\u015fturulmas\u0131, responsive sayfa tasar\u0131m\u0131, dinamik component olu\u015fturulmas\u0131, npm k\xfct\xfcphanelerinin olu\u015fturulmas\u0131, veritaban\u0131 (data-grid) tasar\u0131m\u0131, RestAPI kullan\u0131m\u0131, Docker kullan\u0131m\u0131 ve Linux kullan\u0131m\u0131nda g\xf6rev ald\u0131m. Backend taraf\u0131nda ise veritaban\u0131 olu\u015fturulmas\u0131, veritaban\u0131 ili\u015fkileri, mimari tasar\u0131m standartlar\u0131, mikroservis mimarisi ve RestAPI entegrasyonu g\xf6revlerinde yer ald\u0131m. Yeni teknolojilerin ve mimari modellerin ara\u015ft\u0131r\u0131lmas\u0131, mimari modellerin geli\u015ftirilmesi ve de\u011fi\u015ftirilmesi s\xfcre\xe7lerinde de aktif olarak bulundum.",extras:["HTML","CSS","JavaScript","Angular","Devextreme","RxJs","NGX","C#","ABP Framework"],id:"experience2",continueUrl:"https://www.2ag.com.tr",order:"2",startTime:"08.2023",endTime:"01.2024",position:"Yaz\u0131l\u0131m Geli\u015ftirici Stajyeri"},{title:"Yaz\u0131l\u0131m Geli\u015ftirici Stajyeri",description:"\u0130thinka Yaz\u0131l\u0131m Dan\u0131\u015fmanl\u0131k Hizmetleri'nde yaz d\xf6nemi staj\u0131m s\u0131ras\u0131nda web mimarileri hakk\u0131nda ara\u015ft\u0131rma konular\u0131nda g\xf6rev ald\u0131m. Web \xfczerinde kullan\u0131lan teknolojiler ve bu teknolojileri kullanarak olu\u015fturulabilecek mimarilerin ara\u015ft\u0131r\u0131lmas\u0131 ve yaz\u0131l\u0131m geli\u015ftirici ekibi ile birlikte bu ara\u015ft\u0131r\u0131lan mimarilerin uygulanmas\u0131nda \xe7al\u0131\u015ft\u0131m. Staj boyunca ekip \xe7al\u0131\u015fmas\u0131, problem \xe7\xf6zme ve yeni teknolojilere adaptasyon konular\u0131nda deneyim kazand\u0131m.",extras:["HTML","CSS","JavaScript","Angular","Web Mimarileri"],id:"experience3",continueUrl:"https://ithinka.com/",order:"3",startTime:"07.2023",endTime:"09.2023",position:"Yaz\u0131l\u0131m Geli\u015ftirici Stajyeri"}],EN:[{title:"Frontend Developer",description:"I developed web and mobile applications using Angular and Ionic at Kerzz POS. I implemented state management with NgRx, applied reactive programming with RxJS, and enabled real-time data streaming using WebSocket. I integrated with the backend through REST APIs and optimized performance with caching methods. I developed data tables, charts, and interactive components using DevExtreme and AG Grid. I created user interfaces that adapt to different screen sizes following responsive design principles.",extras:["Angular","Ionic","NgRx","RxJS","REST API","WebSocket","Frontend Caching","DevExtreme","AG Grid","Responsive Design"],id:"experience0",continueUrl:"https://www.kerzzpos.com/",order:"0",startTime:"10.2024",endTime:"Present",position:"Frontend Developer"},{title:"Software Developer",description:"After my voluntary internship at 2Ag Yaz\u0131l\u0131m Hizmetleri, I started working as a Software Specialist in the R&D department. During my tenure, I worked with technologies such as HTML, CSS, JavaScript, Angular, Devextreme, RxJs, NGX, C#, ABP Framework, Docker, RabbitMQ, and RedisInsight. On the frontend, I was responsible for creating UI/UX elements specific to the project, designing responsive pages, creating dynamic components, developing npm libraries, designing data-grids, using RestAPI, Docker, and Linux. On the backend, I worked on creating project-specific databases, database relationships, architectural design standards, microservice architecture, and RestAPI integration. Additionally, I actively participated in researching new technologies and architectural models, developing, and modifying them.",extras:["HTML","CSS","JavaScript","Angular","Devextreme","RxJs","NGX","C#","ABP Framework","Docker","RabbitMQ","RedisInsight"],id:"experience1",continueUrl:"https://www.2ag.com.tr",order:"1",startTime:"02.2024",endTime:"10.2024",position:"Software Developer"},{title:"Software Developer Intern",description:"During my voluntary internship at 2Ag Yaz\u0131l\u0131m Hizmetleri, I worked with technologies such as HTML, CSS, JavaScript, Angular, Devextreme, RxJs, NGX, C#, ABP Framework, Docker, RabbitMQ, and RedisInsight. I was involved in creating project-specific UI/UX elements on the frontend, designing responsive pages, creating dynamic components, developing npm libraries, designing data-grids, using RestAPI, Docker, and Linux. On the backend, I worked on creating databases, database relationships, architectural design standards, microservice architecture, and RestAPI integration. Additionally, I actively participated in researching new technologies and architectural models, developing, and modifying them.",extras:["HTML","CSS","JavaScript","Angular","Devextreme","RxJs","NGX","C#","ABP Framework","Docker","RabbitMQ","RedisInsight"],id:"experience2",continueUrl:"https://www.2ag.com.tr",order:"2",startTime:"08.2023",endTime:"01.2024",position:"Software Developer Intern"},{title:"Software Developer Intern",description:"During my summer internship at \u0130thinka Yaz\u0131l\u0131m Dan\u0131\u015fmanl\u0131k Hizmetleri, I worked on researching web architectures. I was responsible for researching the technologies used on the web and the architectures that could be created using these technologies, and applying these researched architectures with the software development team. Throughout the internship, I gained experience in teamwork, problem-solving, and adapting to new technologies.",extras:["HTML","CSS","JavaScript","Angular","Web Architectures"],id:"experience3",continueUrl:"https://ithinka.com/",order:"3",startTime:"07.2023",endTime:"09.2023",position:"Software Developer Intern"}]},Nz={TR:"Merhaba, ben <strong>Erg\xfcl Ferik</strong>. 2024 y\u0131l\u0131nda <strong>Manisa Celal Bayar \xdcniversitesi Bilgisayar M\xfchendisli\u011fi (\u0130ngilizce)</strong> b\xf6l\xfcm\xfcnden 3.16 ortalama ile mezun oldum. E\u011fitim s\xfcrecimde \xe7e\u015fitli yaz\u0131l\u0131m stajlar\u0131 ve i\u015f deneyimleri edindim.<br><br> Yaz d\xf6nemi staj\u0131m\u0131 <strong>\u0130thinka Yaz\u0131l\u0131m Dan\u0131\u015fmanl\u0131k Hizmetleri</strong>'nde ger\xe7ekle\u015ftirerek web mimarileri \xfczerine \xe7al\u0131\u015ft\u0131m. Daha sonra, <strong>2Ag Yaz\u0131l\u0131m Hizmetleri</strong>'nde g\xf6n\xfcll\xfc stajyer olarak AR-GE departman\u0131nda g\xf6rev ald\u0131m ve burada Yaz\u0131l\u0131m Uzman\u0131 olarak \xe7al\u0131\u015fmaya devam ettim. Ard\u0131ndan, <strong>Kerzz POS</strong>'da \xd6ny\xfcz Geli\u015ftirici olarak \xe7al\u0131\u015fmaya ba\u015flad\u0131m. Bu s\xfcre\xe7te, yeni teknolojilerin ara\u015ft\u0131r\u0131lmas\u0131, yaz\u0131l\u0131m mimarilerinin geli\u015ftirilmesi ve uygulanmas\u0131 konular\u0131nda geni\u015f \xe7apl\u0131 deneyimler kazand\u0131m.<br><br> <strong>Angular, TypeScript, HTML, CSS, JavaScript, NPM, NgRx, RxJs</strong> gibi bir\xe7ok teknoloji ile \xe7al\u0131\u015farak <strong>frontend ve backend</strong> geli\u015ftirme alanlar\u0131nda uzmanla\u015ft\u0131m. Ayr\u0131ca, <strong>npm paketleri olu\u015fturarak</strong> a\xe7\u0131k kaynak projelere katk\u0131da bulundum ve yaz\u0131l\u0131m mimarileri \xfczerine ara\u015ft\u0131rmalar ger\xe7ekle\u015ftirdim. Tak\u0131m \xe7al\u0131\u015fmas\u0131na yatk\u0131n, problem \xe7\xf6zme becerileri geli\u015fmi\u015f ve s\xfcrekli \xf6\u011frenmeye a\xe7\u0131k bir yaz\u0131l\u0131m geli\u015ftiriciyim.",EN:"Hello, I'm <strong>Erg\xfcl Ferik</strong>. I graduated from the <strong>Computer Engineering (English) department at Manisa Celal Bayar University</strong> in 2024 with a GPA of 3.16. During my studies, I gained valuable internship and work experiences in software development.<br><br> I completed a summer internship at <strong>\u0130thinka Yaz\u0131l\u0131m Dan\u0131\u015fmanl\u0131k Hizmetleri</strong>, where I worked on web architectures. Then, I joined <strong>2Ag Yaz\u0131l\u0131m Hizmetleri</strong> as a volunteer intern in the R&D department and later continued as a Software Specialist. Subsequently, I started working as a Frontend Developer at <strong>Kerzz POS</strong>. Throughout this journey, I gained extensive experience in researching new technologies, developing, and implementing software architectures.<br><br> I have expertise in <strong>Angular, TypeScript, HTML, CSS, JavaScript, NPM, NgRx, RxJs</strong> and have improved myself in both <strong>frontend and backend</strong> development. Additionally, I contributed to open-source projects by creating <strong>npm packages</strong> and conducting research on software architectures. I am a software developer with strong teamwork skills, problem-solving abilities, and a continuous learning mindset."},Ez={EN:"",TR:""};let Sz=(()=>{class n{constructor(){}setItem(e,i){localStorage.setItem(e,i)}getItem(e){return localStorage.getItem(e)}removeItem(e){localStorage.removeItem(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const bR=function(n){return{"active-section":n}};function Gz(n,t){if(1&n){const e=Xs();E(0,"ul",41)(1,"li",42),ee("click",function(){return Mt(e),kt(ae().scrollTo("about-me"))}),ke(2),C(),E(3,"li",42),ee("click",function(){return Mt(e),kt(ae().scrollTo("experience"))}),ke(4),C(),E(5,"li",42),ee("click",function(){return Mt(e),kt(ae().scrollTo("apps"))}),ke(6),C()()}if(2&n){const e=ae();G(1),A("ngClass",dl(6,bR,"about-me"===e.activeSection)),G(1),_t(e.sections.aboutMe),G(1),A("ngClass",dl(8,bR,"experience"===e.activeSection)),G(1),_t(e.sections.experience),G(1),A("ngClass",dl(10,bR,"apps"===e.activeSection)),G(1),_t(e.sections.projects)}}function yz(n,t){1&n&&(E(0,"div",58),Kn(),E(1,"svg",59),pe(2,"path",60)(3,"path",61),C()())}function Iz(n,t){if(1&n&&(E(0,"p",64),ke(1),C()),2&n){const e=ae(2).$implicit,i=ae();G(1),ot(" ",i.truncateDescription(e.description),"... ")}}function Cz(n,t){if(1&n&&(E(0,"p",65),ke(1),C()),2&n){const e=ae(3);G(1),ot(" ",e.fullCardDescription," ")}}function xz(n,t){if(1&n&&(E(0,"div"),me(1,Iz,2,1,"p",62),me(2,Cz,2,1,"p",63),C()),2&n){const e=ae().$implicit,i=ae();G(1),A("ngIf",i.openCardId!==e.id),G(1),A("ngIf",i.openCardId===e.id)}}function wz(n,t){if(1&n&&(E(0,"p",65),ke(1),C()),2&n){const e=ae().$implicit;G(1),ot(" ",e.description," ")}}function Jz(n,t){if(1&n&&(E(0,"div",66),ke(1),C()),2&n){const e=t.$implicit;G(1),ot(" ",e," ")}}const wN=function(n,t){return{"pointer-cursor":n,"default-cursor":t}},JN=function(n){return{"not-hovered":n}};function vz(n,t){if(1&n){const e=Xs();E(0,"div",43),pe(1,"br"),E(2,"div",44)(3,"div",45),ee("mouseenter",function(){const l=Mt(e).$implicit;return kt(ae().hoveredCard=l)})("click",function(){const l=Mt(e).$implicit;return kt(ae().cardClick(l.id,l.continueUrl,l.description))})("mouseleave",function(){const l=Mt(e).$implicit;return kt(ae().cardClose(l.id,l.description))}),E(4,"div",46)(5,"h3",47),ee("click",function(){const l=Mt(e).$implicit;return kt(ae().onHeaderClick(l))}),ke(6),me(7,yz,4,0,"div",48),C(),E(8,"div",49)(9,"div",50)(10,"p",51),ke(11),C(),pe(12,"p",52),E(13,"p",53),ke(14),C()(),me(15,xz,3,2,"div",54),me(16,wz,2,1,"ng-template",null,55,Ks),C(),E(18,"div",56),ee("click",function(){const l=Mt(e).$implicit;return kt(ae().cardClick(l.id,l.continueUrl,l.description))}),me(19,Jz,2,1,"div",57),C()()()()()}if(2&n){const e=t.$implicit,i=Os(17),r=ae();A("ngClass",tu(9,wN,r.isCardOpen,!r.isCardOpen)),G(3),A("ngClass",dl(12,JN,r.hoveredCard!=e&&null!=r.hoveredCard)),G(3),ot(" ",e.title," "),G(1),A("ngIf",e.continueUrl),G(4),ot(" ",e.endTime," "),G(3),ot(" ",e.startTime," "),G(1),A("ngIf",!r.isMobile)("ngIfElse",i),G(4),A("ngForOf",e.extras)}}function Yz(n,t){1&n&&(E(0,"div",58),Kn(),E(1,"svg",59),pe(2,"path",60)(3,"path",61),C()())}function Dz(n,t){if(1&n&&(E(0,"p",64),ke(1),C()),2&n){const e=ae(2).$implicit,i=ae();G(1),ot(" ",i.truncateDescription(e.description),"... ")}}function Az(n,t){if(1&n&&(E(0,"p",65),ke(1),C()),2&n){const e=ae(3);G(1),ot(" ",e.fullCardDescription," ")}}function Oz(n,t){if(1&n&&(E(0,"div"),me(1,Dz,2,1,"p",62),me(2,Az,2,1,"p",63),C()),2&n){const e=ae().$implicit,i=ae();G(1),A("ngIf",i.openCardId!==e.id),G(1),A("ngIf",i.openCardId===e.id)}}function Xz(n,t){if(1&n&&(E(0,"p",65),ke(1),C()),2&n){const e=ae().$implicit;G(1),ot(" ",e.description," ")}}function jz(n,t){if(1&n&&(E(0,"div",66),ke(1),C()),2&n){const e=t.$implicit;G(1),ot(" ",e," ")}}function zz(n,t){if(1&n){const e=Xs();E(0,"div",43),pe(1,"br"),E(2,"div",44)(3,"div",45),ee("mouseenter",function(){const l=Mt(e).$implicit;return kt(ae().hoveredCard=l)})("click",function(){const l=Mt(e).$implicit;return kt(ae().cardClick(l.id,l.continueUrl,l.description))})("mouseleave",function(){const l=Mt(e).$implicit;return kt(ae().cardClose(l.id,l.description))}),E(4,"div",46)(5,"h3",47),ee("click",function(){const l=Mt(e).$implicit;return kt(ae().onHeaderClick(l))}),ke(6),me(7,Yz,4,0,"div",48),C(),me(8,Oz,3,2,"div",54),me(9,Xz,2,1,"ng-template",null,67,Ks),E(11,"div",68),ee("click",function(){const l=Mt(e).$implicit;return kt(ae().cardClick(l.id,l.continueUrl,l.description))}),me(12,jz,2,1,"div",57),C()()()()()}if(2&n){const e=t.$implicit,i=Os(10),r=ae();A("ngClass",tu(7,wN,r.isCardOpen,!r.isCardOpen)),G(3),A("ngClass",dl(10,JN,r.hoveredCard!=e&&null!=r.hoveredCard)),G(3),ot(" ",e.title," "),G(1),A("ngIf",e.continueUrl),G(1),A("ngIf",!r.isMobile)("ngIfElse",i),G(4),A("ngForOf",e.extras)}}const Hz=function(){return["/about-me"]},Bz=[{path:"",component:(()=>{class n{constructor(e){this.localStorageService=e,this.fullCardDescription="",this.hoveredCard=null,this.projectCards=[],this.experienceCards=[],this.isMobile=!1,this.activeSection="about-me",this.maxDescriptionLength=240,this.cardAnimationControl=!1,this.isCardOpen=!1,this.interruptCardAnimation=!1,this.openCardId="",this.selectedLanguage="EN",this.aboutMe="",this.aboutMeShort="",this.sections={aboutMe:"About Me",experience:"Experience",projects:"Projects"}}ngOnInit(){const e=navigator.userAgent||navigator.vendor;this.isMobile=!(!/android/i.test(e)&&!/iPhone|iPad|iPod/i.test(e));const i=this.localStorageService.getItem("selectedLanguage");i?this.selectedLanguage=i:(this.selectedLanguage="EN",this.localStorageService.setItem("selectedLanguage",this.selectedLanguage)),this.setData()}changeLanguage(e){this.selectedLanguage=e,this.localStorageService.setItem("selectedLanguage",e),this.setData()}setData(){this.projectCards=kz[this.selectedLanguage],this.experienceCards=bz[this.selectedLanguage],this.aboutMe=Nz[this.selectedLanguage],this.aboutMeShort=Mz[this.selectedLanguage],"TR"==this.selectedLanguage?(this.sections.aboutMe="Hakk\u0131mda",this.sections.experience="Tecr\xfcbelerim",this.sections.projects="Projelerim"):(this.sections.aboutMe="About Me",this.sections.experience="Experience",this.sections.projects="Projects")}cardClick(e,i,r){this.isCardOpen?("null"!==i&&(this.isCardOpen=!1,this.openCardId="",this.isMobile&&this.cardClose(e,r)),this.isMobile&&(this.isCardOpen=!0,this.openCardId=e,this.openedCardDescription(r))):(this.isCardOpen=!0,this.openCardId=e,this.openedCardDescription(r))}cardClose(e,i){this.hoveredCard=null,e==this.openCardId&&(this.interruptCardAnimation=!0,this.closedCardDescription(i))}truncateDescription(e){return this.maxDescriptionLength=240,e.length<=this.maxDescriptionLength?e:e.slice(0,this.maxDescriptionLength)}delay(e){return new Promise(i=>setTimeout(i,e))}openedCardDescription(e){var i=this;return xN(function*(){if(i.isCardOpen){i.cardAnimationControl=!1,i.fullCardDescription=i.truncateDescription(e);for(let r=i.maxDescriptionLength;r<e.length&&i.isCardOpen&&!i.interruptCardAnimation;r++)i.fullCardDescription+=e[r],yield i.delay(.01)}})()}closedCardDescription(e){var i=this;return xN(function*(){if(!i.cardAnimationControl){i.cardAnimationControl=!0;for(let r=e.length;r>i.maxDescriptionLength&&(i.fullCardDescription=i.fullCardDescription.slice(0,-1),i.fullCardDescription!==i.truncateDescription(e));r--)yield i.delay(.01);i.isCardOpen=!1,i.openCardId="",i.interruptCardAnimation=!1}})()}downloadCV(){const i=`data:application/pdf;base64,${Ez[this.selectedLanguage]}`,r=document.createElement("a"),l=`Erg\xfcl FER\u0130K - ${this.selectedLanguage}`;r.href=i,r.download=l,r.click()}onHeaderClick(e){e.continueUrl&&window.open(e.continueUrl)}onScroll(){const e=document.querySelectorAll(".section");let i="";e.forEach(r=>{const l=r.getBoundingClientRect().top;l<=window.innerHeight/2&&l+r.clientHeight>window.innerHeight/2&&(i=r.getAttribute("id")||"")}),!i&&window.scrollY<window.innerHeight/2&&(i=e[0]?.getAttribute("id")||""),this.activeSection=i}scrollTo(e){if("about-me"===e)window.scrollTo({top:0,behavior:"smooth"});else{const i=document.getElementById(e);i&&i.scrollIntoView({behavior:"smooth"})}this.activeSection=e}}return n.\u0275fac=function(e){return new(e||n)(F(Sz))},n.\u0275cmp=Qt({type:n,selectors:[["app-main"]],hostBindings:function(e,i){1&e&&ee("scroll",function(){return i.onScroll()},0,rU)},decls:54,vars:12,consts:[[1,"language-wrapper","button-cover"],["id","language-button",1,"button","r"],["type","checkbox",1,"checkbox",3,"checked","change"],[1,"knobs"],[1,"layer"],[1,"container"],[1,"sidebar"],[1,"ergul-ferik"],[1,"name-wrapper"],["routerLinkActive","router-link-active",3,"routerLink"],[2,"font-size","3rem","line-height","3.5rem"],[1,"middle-description"],[1,"left-description"],["class","sidebar-link-wrapper",4,"ngIf"],[1,"contact"],["href","https://www.instagram.com/ergulferik.zip/","matTooltip","Instagram","matTooltipShowDelay","500",1,"instagram"],["xmlns","http://www.w3.org/2000/svg","width","32","height","32","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-instagram"],["d","M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z"],["href","https://github.com/ergulferik","matTooltip","GitHub","matTooltipShowDelay","500",1,"github"],["xmlns","http://www.w3.org/2000/svg","width","32","height","32","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-github"],["d","M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"],["href","https://www.linkedin.com/in/erg%C3%BCl-ferik-57a79a252/","matTooltip","Linkedin","matTooltipShowDelay","500",1,"linkedin"],["xmlns","http://www.w3.org/2000/svg","width","32","height","32","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-linkedin"],["d","M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"],["href","mailto:eng.ergulferik@gmail.com","matTooltip","Mail","matTooltipShowDelay","500",1,"mail"],["xmlns","http://www.w3.org/2000/svg","width","32","height","32","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-envelope-at"],["d","M2 2a2 2 0 0 0-2 2v8.01A2 2 0 0 0 2 14h5.5a.5.5 0 0 0 0-1H2a1 1 0 0 1-.966-.741l5.64-3.471L8 9.583l7-4.2V8.5a.5.5 0 0 0 1 0V4a2 2 0 0 0-2-2H2Zm3.708 6.208L1 11.105V5.383l4.708 2.825ZM1 4.217V4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v.217l-7 4.2-7-4.2Z"],["d","M14.247 14.269c1.01 0 1.587-.857 1.587-2.025v-.21C15.834 10.43 14.64 9 12.52 9h-.035C10.42 9 9 10.36 9 12.432v.214C9 14.82 10.438 16 12.358 16h.044c.594 0 1.018-.074 1.237-.175v-.73c-.245.11-.673.18-1.18.18h-.044c-1.334 0-2.571-.788-2.571-2.655v-.157c0-1.657 1.058-2.724 2.64-2.724h.04c1.535 0 2.484 1.05 2.484 2.326v.118c0 .975-.324 1.39-.639 1.39-.232 0-.41-.148-.41-.42v-2.19h-.906v.569h-.03c-.084-.298-.368-.63-.954-.63-.778 0-1.259.555-1.259 1.4v.528c0 .892.49 1.434 1.26 1.434.471 0 .896-.227 1.014-.643h.043c.118.42.617.648 1.12.648Zm-2.453-1.588v-.227c0-.546.227-.791.573-.791.297 0 .572.192.572.708v.367c0 .573-.253.744-.564.744-.354 0-.581-.215-.581-.8Z"],["matTooltip","Download CV","matTooltipShowDelay","500","download","Erg\xfcl-FER\u0130K-CV.pdf",1,"cv",3,"click"],["xmlns","http://www.w3.org/2000/svg","width","32","height","32","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-person-vcard"],["d","M5 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm4-2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5ZM9 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 9 8Zm1 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Z"],["d","M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H2ZM1 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8.96c.026-.163.04-.33.04-.5C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1.006 1.006 0 0 1 1 12V4Z"],[1,"contents"],["id","about-me",1,"content","section"],[1,"about-me"],[3,"innerHTML"],["id","experience",1,"content","section"],[1,"exp-header"],[3,"ngClass",4,"ngFor","ngForOf"],["id","apps",1,"content","section"],[1,"app-header"],[1,"sidebar-link-wrapper"],[1,"sidebar-link",3,"ngClass","click"],[3,"ngClass"],[1,"container","mt-5"],[1,"card",3,"ngClass","mouseenter","click","mouseleave"],[1,"card-body"],[1,"card-title",3,"click"],["class","title-link-icon",4,"ngIf"],[1,"card-wrapper"],[1,"time"],[1,"start-time"],[1,"time-placeholder"],[1,"end-time"],[4,"ngIf","ngIfElse"],["mobileExp",""],[1,"card-bottom","experience",3,"click"],["class","extras-chip",4,"ngFor","ngForOf"],[1,"title-link-icon"],["xmlns","http://www.w3.org/2000/svg","width","16","height","16","fill","currentColor","viewBox","0 0 16 16",1,"bi","bi-box-arrow-up-right"],["fill-rule","evenodd","d","M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5"],["fill-rule","evenodd","d","M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0z"],["class","card-text experience",4,"ngIf"],["class","card-text",4,"ngIf"],[1,"card-text","experience"],[1,"card-text"],[1,"extras-chip"],["mobileApp",""],[1,"card-bottom",3,"click"]],template:function(e,i){1&e&&(E(0,"div",0)(1,"div",1)(2,"input",2),ee("change",function(){return i.changeLanguage("EN"===i.selectedLanguage?"TR":"EN")}),C(),pe(3,"div",3)(4,"div",4),C()(),E(5,"div",5)(6,"div",6)(7,"span",7)(8,"h1",8)(9,"a",9)(10,"strong",10),ke(11,"Erg\xfcl FER\u0130K"),C()()(),E(12,"h2",11)(13,"p"),ke(14),C()(),E(15,"div",12)(16,"p"),ke(17),C()(),me(18,Gz,7,12,"ul",13),C(),pe(19,"br"),E(20,"div",14)(21,"a",15),Kn(),E(22,"svg",16),pe(23,"path",17),C()(),Gr(),E(24,"a",18),Kn(),E(25,"svg",19),pe(26,"path",20),C()(),Gr(),E(27,"a",21),Kn(),E(28,"svg",22),pe(29,"path",23),C()(),Gr(),E(30,"a",24),Kn(),E(31,"svg",25),pe(32,"path",26)(33,"path",27),C()(),Gr(),E(34,"a",28),ee("click",function(){return i.downloadCV()}),Kn(),E(35,"svg",29),pe(36,"path",30)(37,"path",31),C()()()(),Gr(),E(38,"div",32)(39,"section",33)(40,"div",34)(41,"h1"),ke(42),C(),pe(43,"p",35),C()(),pe(44,"br"),E(45,"section",36)(46,"h1",37),ke(47),C(),me(48,vz,20,14,"div",38),C(),pe(49,"br"),E(50,"section",39)(51,"h1",40),ke(52),C(),me(53,zz,13,12,"div",38),C()()()),2&e&&(G(2),A("checked","TR"===i.selectedLanguage),G(7),A("routerLink",function YZ(n,t,e){const i=ut()+n,r=g();return r[i]===z?In(r,i,e?t.call(e):t()):function ka(n,t){return n[t]}(r,i)}(11,Hz)),G(5),_t("EN"==i.selectedLanguage?"Computer Engineer":"Bilgisayar M\xfchendisi"),G(3),ot(" ",i.aboutMeShort," "),G(1),A("ngIf",!i.isMobile),G(24),_t(i.sections.aboutMe),G(1),A("innerHTML",i.aboutMe,wF),G(4),_t(i.sections.experience),G(1),A("ngForOf",i.experienceCards),G(4),_t(i.sections.projects),G(1),A("ngForOf",i.projectCards))},dependencies:[zu,Tf,ml,Td,fN,zO],styles:['@import"https://fonts.googleapis.com/css2?family=Crimson+Text&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto+Slab:wght@100&display=swap";@charset "UTF-8";html[_ngcontent-%COMP%]{scroll-behavior:smooth}.left-description[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem;font-style:italic;color:#789}span.ergul-ferik[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-weight:0,800;color:#fff}.middle-description[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{text-decoration:none;line-height:3.5rem;font-weight:700;font-style:italic;color:#fff;max-width:50vh;overflow:hidden}.contents[_ngcontent-%COMP%]{color:#fff;text-align:center}.contents[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{text-align:center;font-weight:bolder}.contents[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}.card-body[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#789}.card-wrapper[_ngcontent-%COMP%]{display:flex}.time[_ngcontent-%COMP%]{padding-left:1rem;min-width:max-content;display:flex;flex-direction:column;justify-content:space-around}.time[_ngcontent-%COMP%]   .time-placeholder[_ngcontent-%COMP%]{height:100%;width:2px;background:#778899;background:linear-gradient(0deg,rgba(119,136,153,0) 0%,rgb(119,136,144) 100%);align-self:center;opacity:.8}.card[_ngcontent-%COMP%]{cursor:pointer;text-align:left;border-radius:10px;transition:.3s}.card-text[_ngcontent-%COMP%]{cursor:pointer;white-space:pre-line;padding-left:1rem}.card-title[_ngcontent-%COMP%]{padding-left:1rem;padding-top:.5rem;width:-moz-fit-content;width:fit-content}.card-bottom[_ngcontent-%COMP%]{display:block;align-items:center;overflow:auto;margin-bottom:1rem}.card-bottom[_ngcontent-%COMP%]   .extras-chip[_ngcontent-%COMP%]{margin:5px 10px 5px 0;display:inline-block;width:max-content;background-color:#656a78;border-radius:50px;padding:5px 10px;opacity:.4;transition:all .3s ease}.title-link-icon[_ngcontent-%COMP%]{transition:all .3s ease;margin-left:8px;width:.8rem;display:inline-flex;margin-right:1rem}.about-me[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#789;font-style:normal;text-align:left;padding-left:1rem}.contact[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#789;margin-right:8%;transition:all .3s ease;cursor:pointer}.contact[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#fff}@media (min-width: 1150px){body[_ngcontent-%COMP%]{margin-left:5%;margin-top:2%}.contents[_ngcontent-%COMP%]{margin-top:8%;margin-left:50%;margin-right:15%;flex-direction:row}.contact[_ngcontent-%COMP%]{margin-bottom:3rem}.language-wrapper[_ngcontent-%COMP%]{position:absolute;top:3rem;right:15%}.sidebar[_ngcontent-%COMP%]{margin-top:8%;margin-left:20%;margin-right:50%;width:300px;position:fixed;display:flex;justify-content:space-between;flex-direction:column;height:-webkit-fill-available}.sidebar-link-wrapper[_ngcontent-%COMP%]{padding-inline-start:0;margin-top:3rem}.sidebar-link[_ngcontent-%COMP%]{transition:all .3s ease;font-weight:700;cursor:pointer;position:relative;padding-left:40px;display:block;color:#789;text-decoration:none;margin:10px 0;width:max-content}.sidebar-link[_ngcontent-%COMP%]:before{transition:all .3s ease;content:"";width:30px;height:2px;background-color:#789;display:block;position:absolute;left:0;top:50%;transform:translateY(-50%)}.sidebar-link.active-section[_ngcontent-%COMP%]{padding-left:70px;color:#fff}.sidebar-link.active-section[_ngcontent-%COMP%]:before{background-color:#fff;width:60px}.container[_ngcontent-%COMP%]{display:flex;flex-direction:row}.not-hovered[_ngcontent-%COMP%]{opacity:.6}.card[_ngcontent-%COMP%]{width:100%}.card[_ngcontent-%COMP%]:hover{opacity:1;box-shadow:10rem;-webkit-backface-visibility:hidden;backface-visibility:hidden;box-shadow:0 0 6px #0003;background-color:#b4b4ff0a;border-radius:10px}.card[_ngcontent-%COMP%]:hover   .card-title[_ngcontent-%COMP%]{color:#40e0d0;text-shadow:0px 2px 4px black}.card[_ngcontent-%COMP%]:hover   .card-title[_ngcontent-%COMP%]   .title-link-icon[_ngcontent-%COMP%]{width:1rem}.card[_ngcontent-%COMP%]:hover   .extras-chip[_ngcontent-%COMP%]{opacity:.8;background-color:#40e0d0;text-shadow:0px 2px 4px black;color:#fff}.card-bottom[_ngcontent-%COMP%]{padding-left:1rem}.card-bottom.experience[_ngcontent-%COMP%]{margin-left:72px}}@media (max-width: 1149px){.exp-header[_ngcontent-%COMP%], .app-header[_ngcontent-%COMP%]{margin-right:10%}body[_ngcontent-%COMP%]{margin-left:9%;margin-top:2%;padding-bottom:2rem}.about-me[_ngcontent-%COMP%]{margin-right:5%;margin-left:5%}.language-wrapper[_ngcontent-%COMP%]{position:absolute;top:2rem;right:9%}.about-me[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{padding-left:0}.ergul-ferik[_ngcontent-%COMP%]{width:80%}.contact[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-right:10%;margin-left:20%;line-height:2rem}.sidebar[_ngcontent-%COMP%]{display:flex;margin-top:5rem;padding-left:5%}.container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.contents[_ngcontent-%COMP%]{margin-top:3rem}.card[_ngcontent-%COMP%]{margin-right:10%;margin-left:5%;width:90%;box-shadow:10rem;-webkit-backface-visibility:hidden;backface-visibility:hidden;box-shadow:0 0 6px #0003;background-color:#b4b4ff0a;border-radius:10px}.card[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{color:#40e0d0}.card[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]   .title-link-icon[_ngcontent-%COMP%]{width:1rem}.card[_ngcontent-%COMP%]   .extras-chip[_ngcontent-%COMP%]{opacity:.8;background-color:#40e0d0;text-shadow:0px 2px 4px black;color:#fff}.card-bottom[_ngcontent-%COMP%]{margin-left:1rem}.card-bottom.experience[_ngcontent-%COMP%]{margin-left:85px}}.pointer-cursor[_ngcontent-%COMP%]{cursor:pointer}.default-cursor[_ngcontent-%COMP%]{cursor:default}.button[_ngcontent-%COMP%]{background-color:#223664;border-radius:50%;box-shadow:inset 0 0 16px #0f172a;position:relative;top:50%;width:74px;height:36px;margin:-20px auto 0;overflow:hidden}.button.r[_ngcontent-%COMP%], .button.r[_ngcontent-%COMP%]   .layer[_ngcontent-%COMP%]{border-radius:100px}.checkbox[_ngcontent-%COMP%]{position:relative;width:100%;height:100%;padding:0;margin:0;opacity:0;cursor:pointer;z-index:3}.knobs[_ngcontent-%COMP%]{z-index:2}.layer[_ngcontent-%COMP%]{width:100%;background-color:#73ff00;transition:.3s ease all;z-index:1}#language-button[_ngcontent-%COMP%]   .knobs[_ngcontent-%COMP%]:before{content:"EN";position:absolute;top:4px;left:4px;width:20px;height:10px;color:#fff;font-size:10px;font-weight:700;text-align:center;line-height:1;padding:9px 4px;background-color:#03a9f4;border-radius:50%;transition:.3s ease all,left .3s cubic-bezier(.18,.89,.35,1.15)}#language-button[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]:active + .knobs[_ngcontent-%COMP%]:before{width:46px;border-radius:100px}#language-button[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]:checked:active + .knobs[_ngcontent-%COMP%]:before{margin-left:-26px}#language-button[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]:checked + .knobs[_ngcontent-%COMP%]:before{content:"TR";left:42px;background-color:#f44336}#language-button[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]:checked ~ .layer[_ngcontent-%COMP%]{background-color:#fcebeb}']}),n})()}];let Pz=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({imports:[yN.forRoot(Bz),yN]}),n})(),Qz=(()=>{class n{onMouseMove(e){const i=document.documentElement;i.style.setProperty("--x",e.clientX+"px"),i.style.setProperty("--y",e.clientY+"px")}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=Qt({type:n,selectors:[["app-cursor-animation"]],hostBindings:function(e,i){1&e&&ee("mousemove",function(l){return i.onMouseMove(l)},0,lU)},decls:1,vars:0,consts:[[1,"light"]],template:function(e,i){1&e&&pe(0,"div",0)},styles:[".light[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;pointer-events:none;background:radial-gradient(circle at var(--x) var(--y),rgba(100,100,255,.084) 1%,rgba(100,100,255,.082) 2%,rgba(100,100,255,.08) 3%,rgba(100,100,255,.078) 4%,rgba(100,100,255,.076) 5%,rgba(100,100,255,.074) 6%,rgba(100,100,255,.072) 7%,rgba(100,100,255,.07) 8%,rgba(100,100,255,.068) 9%,rgba(100,100,255,.066) 10%,rgba(100,100,255,.064) 11%,rgba(100,100,255,.062) 12%,rgba(100,100,255,.06) 13%,rgba(100,100,255,.058) 14%,rgba(100,100,255,.056) 15%,rgba(100,100,255,.054) 16%,rgba(100,100,255,.052) 17%,rgba(100,100,255,.05) 18%,rgba(100,100,255,.048) 19%,rgba(100,100,255,.046) 20%,rgba(100,100,255,.044) 21%,rgba(100,100,255,.042) 22%,rgba(100,100,255,.04) 23%,rgba(100,100,255,.038) 24%,rgba(100,100,255,.036) 25%,rgba(100,100,255,.034) 26%,rgba(100,100,255,.032) 27%,rgba(100,100,255,.03) 28%,rgba(100,100,255,.028) 29%,rgba(100,100,255,.026) 24%,rgba(100,100,255,.024) 30%,rgba(100,100,255,.022) 31%,rgba(100,100,255,.02) 32%,rgba(100,100,255,.018) 33%,rgba(100,100,255,.016) 34%,rgba(100,100,255,.015) 35%,rgba(100,100,255,0) 38%)}[_ngcontent-%COMP%]:root{--cursor-radius: }"]}),n})();function Lz(n,t){1&n&&pe(0,"app-cursor-animation")}let Kz=(()=>{class n{constructor(){this.title="Erg\xfcl Ferik",this.isMobile=!1}ngOnInit(){const e=navigator.userAgent||navigator.vendor;this.isMobile=!(!/android/i.test(e)&&!/iPhone|iPad|iPod/i.test(e))}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=Qt({type:n,selectors:[["app-root"]],decls:4,vars:1,consts:[[4,"ngIf"]],template:function(e,i){1&e&&(E(0,"main")(1,"body"),me(2,Lz,1,0,"app-cursor-animation",0),pe(3,"router-outlet"),C()()),2&e&&(G(2),A("ngIf",!i.isMobile))},dependencies:[ml,WR,Qz]}),n})();function vN(n){return new U(3e3,!1)}function xi(n){switch(n.length){case 0:return new no;case 1:return n[0];default:return new Ck(n)}}function YN(n,t,e=new Map,i=new Map){const r=[],l=[];let a=-1,o=null;if(t.forEach(s=>{const V=s.get("offset"),d=V==a,c=d&&o||new Map;s.forEach((h,u)=>{let p=u,R=h;if("offset"!==u)switch(p=n.normalizePropertyName(p,r),R){case"!":R=e.get(u);break;case oi:R=i.get(u);break;default:R=n.normalizeStyleValue(u,p,R,r)}c.set(p,R)}),d||l.push(c),o=c,a=V}),r.length)throw function UH(n){return new U(3502,!1)}();return l}function NR(n,t,e,i){switch(t){case"start":n.onStart(()=>i(e&&ER(e,"start",n)));break;case"done":n.onDone(()=>i(e&&ER(e,"done",n)));break;case"destroy":n.onDestroy(()=>i(e&&ER(e,"destroy",n)))}}function ER(n,t,e){const l=SR(n.element,n.triggerName,n.fromState,n.toState,t||n.phaseName,e.totalTime??n.totalTime,!!e.disabled),a=n._data;return null!=a&&(l._data=a),l}function SR(n,t,e,i,r="",l=0,a){return{element:n,triggerName:t,fromState:e,toState:i,phaseName:r,totalTime:l,disabled:!!a}}function Xt(n,t,e){let i=n.get(t);return i||n.set(t,i=e),i}function DN(n){const t=n.indexOf(":");return[n.substring(1,t),n.slice(t+1)]}const yH=(()=>typeof document>"u"?null:document.documentElement)();function GR(n){const t=n.parentNode||n.host||null;return t===yH?null:t}let ur=null,AN=!1;function ON(n,t){for(;t;){if(t===n)return!0;t=GR(t)}return!1}function XN(n,t,e){if(e)return Array.from(n.querySelectorAll(t));const i=n.querySelector(t);return i?[i]:[]}let jN=(()=>{class n{validateStyleProperty(e){return function CH(n){ur||(ur=function xH(){return typeof document<"u"?document.body:null}()||{},AN=!!ur.style&&"WebkitAppearance"in ur.style);let t=!0;return ur.style&&!function IH(n){return"ebkit"==n.substring(1,6)}(n)&&(t=n in ur.style,!t&&AN&&(t="Webkit"+n.charAt(0).toUpperCase()+n.slice(1)in ur.style)),t}(e)}matchesElement(e,i){return!1}containsElement(e,i){return ON(e,i)}getParentElement(e){return GR(e)}query(e,i,r){return XN(e,i,r)}computeStyle(e,i,r){return r||""}animate(e,i,r,l,a,o=[],s){return new no(r,l)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})(),yR=(()=>{class n{}return n.NOOP=new jN,n})();const wH=1e3,IR="ng-enter",Zd="ng-leave",gd="ng-trigger",fd=".ng-trigger",HN="ng-animating",CR=".ng-animating";function di(n){if("number"==typeof n)return n;const t=n.match(/^(-?[\.\d]+)(m?s)/);return!t||t.length<2?0:xR(parseFloat(t[1]),t[2])}function xR(n,t){return"s"===t?n*wH:n}function Md(n,t,e){return n.hasOwnProperty("duration")?n:function vH(n,t,e){let r,l=0,a="";if("string"==typeof n){const o=n.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===o)return t.push(vN()),{duration:0,delay:0,easing:""};r=xR(parseFloat(o[1]),o[2]);const s=o[3];null!=s&&(l=xR(parseFloat(s),o[4]));const V=o[5];V&&(a=V)}else r=n;if(!e){let o=!1,s=t.length;r<0&&(t.push(function _z(){return new U(3100,!1)}()),o=!0),l<0&&(t.push(function qz(){return new U(3101,!1)}()),o=!0),o&&t.splice(s,0,vN())}return{duration:r,delay:l,easing:a}}(n,t,e)}function Mo(n,t={}){return Object.keys(n).forEach(e=>{t[e]=n[e]}),t}function BN(n){const t=new Map;return Object.keys(n).forEach(e=>{t.set(e,n[e])}),t}function wi(n,t=new Map,e){if(e)for(let[i,r]of e)t.set(i,r);for(let[i,r]of n)t.set(i,r);return t}function Xn(n,t,e){t.forEach((i,r)=>{const l=JR(r);e&&!e.has(r)&&e.set(r,n.style[l]),n.style[l]=i})}function pr(n,t){t.forEach((e,i)=>{const r=JR(i);n.style[r]=""})}function ko(n){return Array.isArray(n)?1==n.length?n[0]:Ik(n):n}const wR=new RegExp("{{\\s*(.+?)\\s*}}","g");function QN(n){let t=[];if("string"==typeof n){let e;for(;e=wR.exec(n);)t.push(e[1]);wR.lastIndex=0}return t}function bo(n,t,e){const i=n.toString(),r=i.replace(wR,(l,a)=>{let o=t[a];return null==o&&(e.push(function eH(n){return new U(3003,!1)}()),o=""),o.toString()});return r==i?n:r}function kd(n){const t=[];let e=n.next();for(;!e.done;)t.push(e.value),e=n.next();return t}const AH=/-+([a-z0-9])/g;function JR(n){return n.replace(AH,(...t)=>t[1].toUpperCase())}function jt(n,t,e){switch(t.type){case 7:return n.visitTrigger(t,e);case 0:return n.visitState(t,e);case 1:return n.visitTransition(t,e);case 2:return n.visitSequence(t,e);case 3:return n.visitGroup(t,e);case 4:return n.visitAnimate(t,e);case 5:return n.visitKeyframes(t,e);case 6:return n.visitStyle(t,e);case 8:return n.visitReference(t,e);case 9:return n.visitAnimateChild(t,e);case 10:return n.visitAnimateRef(t,e);case 11:return n.visitQuery(t,e);case 12:return n.visitStagger(t,e);default:throw function tH(n){return new U(3004,!1)}()}}function LN(n,t){return window.getComputedStyle(n)[t]}const bd="*";function jH(n,t){const e=[];return"string"==typeof n?n.split(/\s*,\s*/).forEach(i=>function zH(n,t,e){if(":"==n[0]){const s=function HH(n,t){switch(n){case":enter":return"void => *";case":leave":return"* => void";case":increment":return(e,i)=>parseFloat(i)>parseFloat(e);case":decrement":return(e,i)=>parseFloat(i)<parseFloat(e);default:return t.push(function RH(n){return new U(3016,!1)}()),"* => *"}}(n,e);if("function"==typeof s)return void t.push(s);n=s}const i=n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==i||i.length<4)return e.push(function pH(n){return new U(3015,!1)}()),t;const r=i[1],l=i[2],a=i[3];t.push(KN(r,a));"<"==l[0]&&!(r==bd&&a==bd)&&t.push(KN(a,r))}(i,e,t)):e.push(n),e}const Nd=new Set(["true","1"]),Ed=new Set(["false","0"]);function KN(n,t){const e=Nd.has(n)||Ed.has(n),i=Nd.has(t)||Ed.has(t);return(r,l)=>{let a=n==bd||n==r,o=t==bd||t==l;return!a&&e&&"boolean"==typeof r&&(a=r?Nd.has(n):Ed.has(n)),!o&&i&&"boolean"==typeof l&&(o=l?Nd.has(t):Ed.has(t)),a&&o}}const BH=new RegExp("s*:selfs*,?","g");function vR(n,t,e,i){return new PH(n).build(t,e,i)}class PH{constructor(t){this._driver=t}build(t,e,i){const r=new KH(e);return this._resetContextStyleTimingState(r),jt(this,ko(t),r)}_resetContextStyleTimingState(t){t.currentQuerySelector="",t.collectedStyles=new Map,t.collectedStyles.set("",new Map),t.currentTime=0}visitTrigger(t,e){let i=e.queryCount=0,r=e.depCount=0;const l=[],a=[];return"@"==t.name.charAt(0)&&e.errors.push(function iH(){return new U(3006,!1)}()),t.definitions.forEach(o=>{if(this._resetContextStyleTimingState(e),0==o.type){const s=o,V=s.name;V.toString().split(/\s*,\s*/).forEach(d=>{s.name=d,l.push(this.visitState(s,e))}),s.name=V}else if(1==o.type){const s=this.visitTransition(o,e);i+=s.queryCount,r+=s.depCount,a.push(s)}else e.errors.push(function rH(){return new U(3007,!1)}())}),{type:7,name:t.name,states:l,transitions:a,queryCount:i,depCount:r,options:null}}visitState(t,e){const i=this.visitStyle(t.styles,e),r=t.options&&t.options.params||null;if(i.containsDynamicStyles){const l=new Set,a=r||{};i.styles.forEach(o=>{o instanceof Map&&o.forEach(s=>{QN(s).forEach(V=>{a.hasOwnProperty(V)||l.add(V)})})}),l.size&&(kd(l.values()),e.errors.push(function lH(n,t){return new U(3008,!1)}()))}return{type:0,name:t.name,style:i,options:r?{params:r}:null}}visitTransition(t,e){e.queryCount=0,e.depCount=0;const i=jt(this,ko(t.animation),e);return{type:1,matchers:jH(t.expr,e.errors),animation:i,queryCount:e.queryCount,depCount:e.depCount,options:Rr(t.options)}}visitSequence(t,e){return{type:2,steps:t.steps.map(i=>jt(this,i,e)),options:Rr(t.options)}}visitGroup(t,e){const i=e.currentTime;let r=0;const l=t.steps.map(a=>{e.currentTime=i;const o=jt(this,a,e);return r=Math.max(r,e.currentTime),o});return e.currentTime=r,{type:3,steps:l,options:Rr(t.options)}}visitAnimate(t,e){const i=function qH(n,t){if(n.hasOwnProperty("duration"))return n;if("number"==typeof n)return YR(Md(n,t).duration,0,"");const e=n;if(e.split(/\s+/).some(l=>"{"==l.charAt(0)&&"{"==l.charAt(1))){const l=YR(0,0,"");return l.dynamic=!0,l.strValue=e,l}const r=Md(e,t);return YR(r.duration,r.delay,r.easing)}(t.timings,e.errors);e.currentAnimateTimings=i;let r,l=t.styles?t.styles:mn({});if(5==l.type)r=this.visitKeyframes(l,e);else{let a=t.styles,o=!1;if(!a){o=!0;const V={};i.easing&&(V.easing=i.easing),a=mn(V)}e.currentTime+=i.duration+i.delay;const s=this.visitStyle(a,e);s.isEmptyStep=o,r=s}return e.currentAnimateTimings=null,{type:4,timings:i,style:r,options:null}}visitStyle(t,e){const i=this._makeStyleAst(t,e);return this._validateStyleAst(i,e),i}_makeStyleAst(t,e){const i=[],r=Array.isArray(t.styles)?t.styles:[t.styles];for(let o of r)"string"==typeof o?o===oi?i.push(o):e.errors.push(new U(3002,!1)):i.push(BN(o));let l=!1,a=null;return i.forEach(o=>{if(o instanceof Map&&(o.has("easing")&&(a=o.get("easing"),o.delete("easing")),!l))for(let s of o.values())if(s.toString().indexOf("{{")>=0){l=!0;break}}),{type:6,styles:i,easing:a,offset:t.offset,containsDynamicStyles:l,options:null}}_validateStyleAst(t,e){const i=e.currentAnimateTimings;let r=e.currentTime,l=e.currentTime;i&&l>0&&(l-=i.duration+i.delay),t.styles.forEach(a=>{"string"!=typeof a&&a.forEach((o,s)=>{const V=e.collectedStyles.get(e.currentQuerySelector),d=V.get(s);let c=!0;d&&(l!=r&&l>=d.startTime&&r<=d.endTime&&(e.errors.push(function oH(n,t,e,i,r){return new U(3010,!1)}()),c=!1),l=d.startTime),c&&V.set(s,{startTime:l,endTime:r}),e.options&&function DH(n,t,e){const i=t.params||{},r=QN(n);r.length&&r.forEach(l=>{i.hasOwnProperty(l)||e.push(function $z(n){return new U(3001,!1)}())})}(o,e.options,e.errors)})})}visitKeyframes(t,e){const i={type:5,styles:[],options:null};if(!e.currentAnimateTimings)return e.errors.push(function sH(){return new U(3011,!1)}()),i;let l=0;const a=[];let o=!1,s=!1,V=0;const d=t.steps.map(Z=>{const m=this._makeStyleAst(Z,e);let M=null!=m.offset?m.offset:function _H(n){if("string"==typeof n)return null;let t=null;if(Array.isArray(n))n.forEach(e=>{if(e instanceof Map&&e.has("offset")){const i=e;t=parseFloat(i.get("offset")),i.delete("offset")}});else if(n instanceof Map&&n.has("offset")){const e=n;t=parseFloat(e.get("offset")),e.delete("offset")}return t}(m.styles),S=0;return null!=M&&(l++,S=m.offset=M),s=s||S<0||S>1,o=o||S<V,V=S,a.push(S),m});s&&e.errors.push(function VH(){return new U(3012,!1)}()),o&&e.errors.push(function dH(){return new U(3200,!1)}());const c=t.steps.length;let h=0;l>0&&l<c?e.errors.push(function cH(){return new U(3202,!1)}()):0==l&&(h=1/(c-1));const u=c-1,p=e.currentTime,R=e.currentAnimateTimings,W=R.duration;return d.forEach((Z,m)=>{const M=h>0?m==u?1:h*m:a[m],S=M*W;e.currentTime=p+R.delay+S,R.duration=S,this._validateStyleAst(Z,e),Z.offset=M,i.styles.push(Z)}),i}visitReference(t,e){return{type:8,animation:jt(this,ko(t.animation),e),options:Rr(t.options)}}visitAnimateChild(t,e){return e.depCount++,{type:9,options:Rr(t.options)}}visitAnimateRef(t,e){return{type:10,animation:this.visitReference(t.animation,e),options:Rr(t.options)}}visitQuery(t,e){const i=e.currentQuerySelector,r=t.options||{};e.queryCount++,e.currentQuery=t;const[l,a]=function QH(n){const t=!!n.split(/\s*,\s*/).find(e=>":self"==e);return t&&(n=n.replace(BH,"")),n=n.replace(/@\*/g,fd).replace(/@\w+/g,e=>fd+"-"+e.slice(1)).replace(/:animating/g,CR),[n,t]}(t.selector);e.currentQuerySelector=i.length?i+" "+l:l,Xt(e.collectedStyles,e.currentQuerySelector,new Map);const o=jt(this,ko(t.animation),e);return e.currentQuery=null,e.currentQuerySelector=i,{type:11,selector:l,limit:r.limit||0,optional:!!r.optional,includeSelf:a,animation:o,originalSelector:t.selector,options:Rr(t.options)}}visitStagger(t,e){e.currentQuery||e.errors.push(function hH(){return new U(3013,!1)}());const i="full"===t.timings?{duration:0,delay:0,easing:"full"}:Md(t.timings,e.errors,!0);return{type:12,animation:jt(this,ko(t.animation),e),timings:i,options:null}}}class KH{constructor(t){this.errors=t,this.queryCount=0,this.depCount=0,this.currentTransition=null,this.currentQuery=null,this.currentQuerySelector=null,this.currentAnimateTimings=null,this.currentTime=0,this.collectedStyles=new Map,this.options=null,this.unsupportedCSSPropertiesFound=new Set}}function Rr(n){return n?(n=Mo(n)).params&&(n.params=function LH(n){return n?Mo(n):null}(n.params)):n={},n}function YR(n,t,e){return{duration:n,delay:t,easing:e}}function DR(n,t,e,i,r,l,a=null,o=!1){return{type:1,element:n,keyframes:t,preStyleProps:e,postStyleProps:i,duration:r,delay:l,totalTime:r+l,easing:a,subTimeline:o}}class Sd{constructor(){this._map=new Map}get(t){return this._map.get(t)||[]}append(t,e){let i=this._map.get(t);i||this._map.set(t,i=[]),i.push(...e)}has(t){return this._map.has(t)}clear(){this._map.clear()}}const tB=new RegExp(":enter","g"),iB=new RegExp(":leave","g");function AR(n,t,e,i,r,l=new Map,a=new Map,o,s,V=[]){return(new rB).buildKeyframes(n,t,e,i,r,l,a,o,s,V)}class rB{buildKeyframes(t,e,i,r,l,a,o,s,V,d=[]){V=V||new Sd;const c=new OR(t,e,V,r,l,d,[]);c.options=s;const h=s.delay?di(s.delay):0;c.currentTimeline.delayNextStep(h),c.currentTimeline.setStyles([a],null,c.errors,s),jt(this,i,c);const u=c.timelines.filter(p=>p.containsAnimation());if(u.length&&o.size){let p;for(let R=u.length-1;R>=0;R--){const W=u[R];if(W.element===e){p=W;break}}p&&!p.allowOnlyTimelineStyles()&&p.setStyles([o],null,c.errors,s)}return u.length?u.map(p=>p.buildKeyframes()):[DR(e,[],[],[],0,h,"",!1)]}visitTrigger(t,e){}visitState(t,e){}visitTransition(t,e){}visitAnimateChild(t,e){const i=e.subInstructions.get(e.element);if(i){const r=e.createSubContext(t.options),l=e.currentTimeline.currentTime,a=this._visitSubInstructions(i,r,r.options);l!=a&&e.transformIntoNewTimeline(a)}e.previousNode=t}visitAnimateRef(t,e){const i=e.createSubContext(t.options);i.transformIntoNewTimeline(),this._applyAnimationRefDelays([t.options,t.animation.options],e,i),this.visitReference(t.animation,i),e.transformIntoNewTimeline(i.currentTimeline.currentTime),e.previousNode=t}_applyAnimationRefDelays(t,e,i){for(const r of t){const l=r?.delay;if(l){const a="number"==typeof l?l:di(bo(l,r?.params??{},e.errors));i.delayNextStep(a)}}}_visitSubInstructions(t,e,i){let l=e.currentTimeline.currentTime;const a=null!=i.duration?di(i.duration):null,o=null!=i.delay?di(i.delay):null;return 0!==a&&t.forEach(s=>{const V=e.appendInstructionToTimeline(s,a,o);l=Math.max(l,V.duration+V.delay)}),l}visitReference(t,e){e.updateOptions(t.options,!0),jt(this,t.animation,e),e.previousNode=t}visitSequence(t,e){const i=e.subContextCount;let r=e;const l=t.options;if(l&&(l.params||l.delay)&&(r=e.createSubContext(l),r.transformIntoNewTimeline(),null!=l.delay)){6==r.previousNode.type&&(r.currentTimeline.snapshotCurrentStyles(),r.previousNode=Gd);const a=di(l.delay);r.delayNextStep(a)}t.steps.length&&(t.steps.forEach(a=>jt(this,a,r)),r.currentTimeline.applyStylesToKeyframe(),r.subContextCount>i&&r.transformIntoNewTimeline()),e.previousNode=t}visitGroup(t,e){const i=[];let r=e.currentTimeline.currentTime;const l=t.options&&t.options.delay?di(t.options.delay):0;t.steps.forEach(a=>{const o=e.createSubContext(t.options);l&&o.delayNextStep(l),jt(this,a,o),r=Math.max(r,o.currentTimeline.currentTime),i.push(o.currentTimeline)}),i.forEach(a=>e.currentTimeline.mergeTimelineCollectedStyles(a)),e.transformIntoNewTimeline(r),e.previousNode=t}_visitTiming(t,e){if(t.dynamic){const i=t.strValue;return Md(e.params?bo(i,e.params,e.errors):i,e.errors)}return{duration:t.duration,delay:t.delay,easing:t.easing}}visitAnimate(t,e){const i=e.currentAnimateTimings=this._visitTiming(t.timings,e),r=e.currentTimeline;i.delay&&(e.incrementTime(i.delay),r.snapshotCurrentStyles());const l=t.style;5==l.type?this.visitKeyframes(l,e):(e.incrementTime(i.duration),this.visitStyle(l,e),r.applyStylesToKeyframe()),e.currentAnimateTimings=null,e.previousNode=t}visitStyle(t,e){const i=e.currentTimeline,r=e.currentAnimateTimings;!r&&i.hasCurrentStyleProperties()&&i.forwardFrame();const l=r&&r.easing||t.easing;t.isEmptyStep?i.applyEmptyStep(l):i.setStyles(t.styles,l,e.errors,e.options),e.previousNode=t}visitKeyframes(t,e){const i=e.currentAnimateTimings,r=e.currentTimeline.duration,l=i.duration,o=e.createSubContext().currentTimeline;o.easing=i.easing,t.styles.forEach(s=>{o.forwardTime((s.offset||0)*l),o.setStyles(s.styles,s.easing,e.errors,e.options),o.applyStylesToKeyframe()}),e.currentTimeline.mergeTimelineCollectedStyles(o),e.transformIntoNewTimeline(r+l),e.previousNode=t}visitQuery(t,e){const i=e.currentTimeline.currentTime,r=t.options||{},l=r.delay?di(r.delay):0;l&&(6===e.previousNode.type||0==i&&e.currentTimeline.hasCurrentStyleProperties())&&(e.currentTimeline.snapshotCurrentStyles(),e.previousNode=Gd);let a=i;const o=e.invokeQuery(t.selector,t.originalSelector,t.limit,t.includeSelf,!!r.optional,e.errors);e.currentQueryTotal=o.length;let s=null;o.forEach((V,d)=>{e.currentQueryIndex=d;const c=e.createSubContext(t.options,V);l&&c.delayNextStep(l),V===e.element&&(s=c.currentTimeline),jt(this,t.animation,c),c.currentTimeline.applyStylesToKeyframe(),a=Math.max(a,c.currentTimeline.currentTime)}),e.currentQueryIndex=0,e.currentQueryTotal=0,e.transformIntoNewTimeline(a),s&&(e.currentTimeline.mergeTimelineCollectedStyles(s),e.currentTimeline.snapshotCurrentStyles()),e.previousNode=t}visitStagger(t,e){const i=e.parentContext,r=e.currentTimeline,l=t.timings,a=Math.abs(l.duration),o=a*(e.currentQueryTotal-1);let s=a*e.currentQueryIndex;switch(l.duration<0?"reverse":l.easing){case"reverse":s=o-s;break;case"full":s=i.currentStaggerTime}const d=e.currentTimeline;s&&d.delayNextStep(s);const c=d.currentTime;jt(this,t.animation,e),e.previousNode=t,i.currentStaggerTime=r.currentTime-c+(r.startTime-i.currentTimeline.startTime)}}const Gd={};class OR{constructor(t,e,i,r,l,a,o,s){this._driver=t,this.element=e,this.subInstructions=i,this._enterClassName=r,this._leaveClassName=l,this.errors=a,this.timelines=o,this.parentContext=null,this.currentAnimateTimings=null,this.previousNode=Gd,this.subContextCount=0,this.options={},this.currentQueryIndex=0,this.currentQueryTotal=0,this.currentStaggerTime=0,this.currentTimeline=s||new yd(this._driver,e,0),o.push(this.currentTimeline)}get params(){return this.options.params}updateOptions(t,e){if(!t)return;const i=t;let r=this.options;null!=i.duration&&(r.duration=di(i.duration)),null!=i.delay&&(r.delay=di(i.delay));const l=i.params;if(l){let a=r.params;a||(a=this.options.params={}),Object.keys(l).forEach(o=>{(!e||!a.hasOwnProperty(o))&&(a[o]=bo(l[o],a,this.errors))})}}_copyOptions(){const t={};if(this.options){const e=this.options.params;if(e){const i=t.params={};Object.keys(e).forEach(r=>{i[r]=e[r]})}}return t}createSubContext(t=null,e,i){const r=e||this.element,l=new OR(this._driver,r,this.subInstructions,this._enterClassName,this._leaveClassName,this.errors,this.timelines,this.currentTimeline.fork(r,i||0));return l.previousNode=this.previousNode,l.currentAnimateTimings=this.currentAnimateTimings,l.options=this._copyOptions(),l.updateOptions(t),l.currentQueryIndex=this.currentQueryIndex,l.currentQueryTotal=this.currentQueryTotal,l.parentContext=this,this.subContextCount++,l}transformIntoNewTimeline(t){return this.previousNode=Gd,this.currentTimeline=this.currentTimeline.fork(this.element,t),this.timelines.push(this.currentTimeline),this.currentTimeline}appendInstructionToTimeline(t,e,i){const r={duration:e??t.duration,delay:this.currentTimeline.currentTime+(i??0)+t.delay,easing:""},l=new lB(this._driver,t.element,t.keyframes,t.preStyleProps,t.postStyleProps,r,t.stretchStartingKeyframe);return this.timelines.push(l),r}incrementTime(t){this.currentTimeline.forwardTime(this.currentTimeline.duration+t)}delayNextStep(t){t>0&&this.currentTimeline.delayNextStep(t)}invokeQuery(t,e,i,r,l,a){let o=[];if(r&&o.push(this.element),t.length>0){t=(t=t.replace(tB,"."+this._enterClassName)).replace(iB,"."+this._leaveClassName);let V=this._driver.query(this.element,t,1!=i);0!==i&&(V=i<0?V.slice(V.length+i,V.length):V.slice(0,i)),o.push(...V)}return!l&&0==o.length&&a.push(function uH(n){return new U(3014,!1)}()),o}}class yd{constructor(t,e,i,r){this._driver=t,this.element=e,this.startTime=i,this._elementTimelineStylesLookup=r,this.duration=0,this.easing=null,this._previousKeyframe=new Map,this._currentKeyframe=new Map,this._keyframes=new Map,this._styleSummary=new Map,this._localTimelineStyles=new Map,this._pendingStyles=new Map,this._backFill=new Map,this._currentEmptyStepKeyframe=null,this._elementTimelineStylesLookup||(this._elementTimelineStylesLookup=new Map),this._globalTimelineStyles=this._elementTimelineStylesLookup.get(e),this._globalTimelineStyles||(this._globalTimelineStyles=this._localTimelineStyles,this._elementTimelineStylesLookup.set(e,this._localTimelineStyles)),this._loadKeyframe()}containsAnimation(){switch(this._keyframes.size){case 0:return!1;case 1:return this.hasCurrentStyleProperties();default:return!0}}hasCurrentStyleProperties(){return this._currentKeyframe.size>0}get currentTime(){return this.startTime+this.duration}delayNextStep(t){const e=1===this._keyframes.size&&this._pendingStyles.size;this.duration||e?(this.forwardTime(this.currentTime+t),e&&this.snapshotCurrentStyles()):this.startTime+=t}fork(t,e){return this.applyStylesToKeyframe(),new yd(this._driver,t,e||this.currentTime,this._elementTimelineStylesLookup)}_loadKeyframe(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=new Map,this._keyframes.set(this.duration,this._currentKeyframe))}forwardFrame(){this.duration+=1,this._loadKeyframe()}forwardTime(t){this.applyStylesToKeyframe(),this.duration=t,this._loadKeyframe()}_updateStyle(t,e){this._localTimelineStyles.set(t,e),this._globalTimelineStyles.set(t,e),this._styleSummary.set(t,{time:this.currentTime,value:e})}allowOnlyTimelineStyles(){return this._currentEmptyStepKeyframe!==this._currentKeyframe}applyEmptyStep(t){t&&this._previousKeyframe.set("easing",t);for(let[e,i]of this._globalTimelineStyles)this._backFill.set(e,i||oi),this._currentKeyframe.set(e,oi);this._currentEmptyStepKeyframe=this._currentKeyframe}setStyles(t,e,i,r){e&&this._previousKeyframe.set("easing",e);const l=r&&r.params||{},a=function aB(n,t){const e=new Map;let i;return n.forEach(r=>{if("*"===r){i=i||t.keys();for(let l of i)e.set(l,oi)}else wi(r,e)}),e}(t,this._globalTimelineStyles);for(let[o,s]of a){const V=bo(s,l,i);this._pendingStyles.set(o,V),this._localTimelineStyles.has(o)||this._backFill.set(o,this._globalTimelineStyles.get(o)??oi),this._updateStyle(o,V)}}applyStylesToKeyframe(){0!=this._pendingStyles.size&&(this._pendingStyles.forEach((t,e)=>{this._currentKeyframe.set(e,t)}),this._pendingStyles.clear(),this._localTimelineStyles.forEach((t,e)=>{this._currentKeyframe.has(e)||this._currentKeyframe.set(e,t)}))}snapshotCurrentStyles(){for(let[t,e]of this._localTimelineStyles)this._pendingStyles.set(t,e),this._updateStyle(t,e)}getFinalKeyframe(){return this._keyframes.get(this.duration)}get properties(){const t=[];for(let e in this._currentKeyframe)t.push(e);return t}mergeTimelineCollectedStyles(t){t._styleSummary.forEach((e,i)=>{const r=this._styleSummary.get(i);(!r||e.time>r.time)&&this._updateStyle(i,e.value)})}buildKeyframes(){this.applyStylesToKeyframe();const t=new Set,e=new Set,i=1===this._keyframes.size&&0===this.duration;let r=[];this._keyframes.forEach((o,s)=>{const V=wi(o,new Map,this._backFill);V.forEach((d,c)=>{"!"===d?t.add(c):d===oi&&e.add(c)}),i||V.set("offset",s/this.duration),r.push(V)});const l=t.size?kd(t.values()):[],a=e.size?kd(e.values()):[];if(i){const o=r[0],s=new Map(o);o.set("offset",0),s.set("offset",1),r=[o,s]}return DR(this.element,r,l,a,this.duration,this.startTime,this.easing,!1)}}class lB extends yd{constructor(t,e,i,r,l,a,o=!1){super(t,e,a.delay),this.keyframes=i,this.preStyleProps=r,this.postStyleProps=l,this._stretchStartingKeyframe=o,this.timings={duration:a.duration,delay:a.delay,easing:a.easing}}containsAnimation(){return this.keyframes.length>1}buildKeyframes(){let t=this.keyframes,{delay:e,duration:i,easing:r}=this.timings;if(this._stretchStartingKeyframe&&e){const l=[],a=i+e,o=e/a,s=wi(t[0]);s.set("offset",0),l.push(s);const V=wi(t[0]);V.set("offset",$N(o)),l.push(V);const d=t.length-1;for(let c=1;c<=d;c++){let h=wi(t[c]);const u=h.get("offset");h.set("offset",$N((e+u*i)/a)),l.push(h)}i=a,e=0,r="",t=l}return DR(this.element,t,this.preStyleProps,this.postStyleProps,i,e,r,!0)}}function $N(n,t=3){const e=Math.pow(10,t-1);return Math.round(n*e)/e}class XR{}const oB=new Set(["width","height","minWidth","minHeight","maxWidth","maxHeight","left","top","bottom","right","fontSize","outlineWidth","outlineOffset","paddingTop","paddingLeft","paddingBottom","paddingRight","marginTop","marginLeft","marginBottom","marginRight","borderRadius","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","textIndent","perspective"]);class sB extends XR{normalizePropertyName(t,e){return JR(t)}normalizeStyleValue(t,e,i,r){let l="";const a=i.toString().trim();if(oB.has(e)&&0!==i&&"0"!==i)if("number"==typeof i)l="px";else{const o=i.match(/^[+-]?[\d\.]+([a-z]*)$/);o&&0==o[1].length&&r.push(function nH(n,t){return new U(3005,!1)}())}return a+l}}function e1(n,t,e,i,r,l,a,o,s,V,d,c,h){return{type:0,element:n,triggerName:t,isRemovalTransition:r,fromState:e,fromStyles:l,toState:i,toStyles:a,timelines:o,queriedElements:s,preStyleProps:V,postStyleProps:d,totalTime:c,errors:h}}const jR={};class t1{constructor(t,e,i){this._triggerName=t,this.ast=e,this._stateStyles=i}match(t,e,i,r){return function VB(n,t,e,i,r){return n.some(l=>l(t,e,i,r))}(this.ast.matchers,t,e,i,r)}buildStyles(t,e,i){let r=this._stateStyles.get("*");return void 0!==t&&(r=this._stateStyles.get(t?.toString())||r),r?r.buildStyles(e,i):new Map}build(t,e,i,r,l,a,o,s,V,d){const c=[],h=this.ast.options&&this.ast.options.params||jR,p=this.buildStyles(i,o&&o.params||jR,c),R=s&&s.params||jR,W=this.buildStyles(r,R,c),Z=new Set,m=new Map,M=new Map,S="void"===r,J={params:dB(R,h),delay:this.ast.options?.delay},de=d?[]:AR(t,e,this.ast.animation,l,a,p,W,J,V,c);let Ae=0;if(de.forEach(Tn=>{Ae=Math.max(Tn.duration+Tn.delay,Ae)}),c.length)return e1(e,this._triggerName,i,r,S,p,W,[],[],m,M,Ae,c);de.forEach(Tn=>{const ci=Tn.element,W1=Xt(m,ci,new Set);Tn.preStyleProps.forEach(mr=>W1.add(mr));const Eo=Xt(M,ci,new Set);Tn.postStyleProps.forEach(mr=>Eo.add(mr)),ci!==e&&Z.add(ci)});const Un=kd(Z.values());return e1(e,this._triggerName,i,r,S,p,W,de,Un,m,M,Ae)}}function dB(n,t){const e=Mo(t);for(const i in n)n.hasOwnProperty(i)&&null!=n[i]&&(e[i]=n[i]);return e}class cB{constructor(t,e,i){this.styles=t,this.defaultParams=e,this.normalizer=i}buildStyles(t,e){const i=new Map,r=Mo(this.defaultParams);return Object.keys(t).forEach(l=>{const a=t[l];null!==a&&(r[l]=a)}),this.styles.styles.forEach(l=>{"string"!=typeof l&&l.forEach((a,o)=>{a&&(a=bo(a,r,e));const s=this.normalizer.normalizePropertyName(o,e);a=this.normalizer.normalizeStyleValue(o,s,a,e),i.set(o,a)})}),i}}class uB{constructor(t,e,i){this.name=t,this.ast=e,this._normalizer=i,this.transitionFactories=[],this.states=new Map,e.states.forEach(r=>{this.states.set(r.name,new cB(r.style,r.options&&r.options.params||{},i))}),n1(this.states,"true","1"),n1(this.states,"false","0"),e.transitions.forEach(r=>{this.transitionFactories.push(new t1(t,r,this.states))}),this.fallbackTransition=function pB(n,t,e){return new t1(n,{type:1,animation:{type:2,steps:[],options:null},matchers:[(a,o)=>!0],options:null,queryCount:0,depCount:0},t)}(t,this.states)}get containsQueries(){return this.ast.queryCount>0}matchTransition(t,e,i,r){return this.transitionFactories.find(a=>a.match(t,e,i,r))||null}matchStyles(t,e,i){return this.fallbackTransition.buildStyles(t,e,i)}}function n1(n,t,e){n.has(t)?n.has(e)||n.set(e,n.get(t)):n.has(e)&&n.set(t,n.get(e))}const RB=new Sd;class mB{constructor(t,e,i){this.bodyNode=t,this._driver=e,this._normalizer=i,this._animations=new Map,this._playersById=new Map,this.players=[]}register(t,e){const i=[],l=vR(this._driver,e,i,[]);if(i.length)throw function TH(n){return new U(3503,!1)}();this._animations.set(t,l)}_buildPlayer(t,e,i){const r=t.element,l=YN(this._normalizer,t.keyframes,e,i);return this._driver.animate(r,l,t.duration,t.delay,t.easing,[],!0)}create(t,e,i={}){const r=[],l=this._animations.get(t);let a;const o=new Map;if(l?(a=AR(this._driver,e,l,IR,Zd,new Map,new Map,i,RB,r),a.forEach(d=>{const c=Xt(o,d.element,new Map);d.postStyleProps.forEach(h=>c.set(h,null))})):(r.push(function ZH(){return new U(3300,!1)}()),a=[]),r.length)throw function gH(n){return new U(3504,!1)}();o.forEach((d,c)=>{d.forEach((h,u)=>{d.set(u,this._driver.computeStyle(c,u,oi))})});const V=xi(a.map(d=>{const c=o.get(d.element);return this._buildPlayer(d,new Map,c)}));return this._playersById.set(t,V),V.onDestroy(()=>this.destroy(t)),this.players.push(V),V}destroy(t){const e=this._getPlayer(t);e.destroy(),this._playersById.delete(t);const i=this.players.indexOf(e);i>=0&&this.players.splice(i,1)}_getPlayer(t){const e=this._playersById.get(t);if(!e)throw function fH(n){return new U(3301,!1)}();return e}listen(t,e,i,r){const l=SR(e,"","","");return NR(this._getPlayer(t),i,l,r),()=>{}}command(t,e,i,r){if("register"==i)return void this.register(t,r[0]);if("create"==i)return void this.create(t,e,r[0]||{});const l=this._getPlayer(t);switch(i){case"play":l.play();break;case"pause":l.pause();break;case"reset":l.reset();break;case"restart":l.restart();break;case"finish":l.finish();break;case"init":l.init();break;case"setPosition":l.setPosition(parseFloat(r[0]));break;case"destroy":this.destroy(t)}}}const r1="ng-animate-queued",zR="ng-animate-disabled",ZB=[],l1={namespaceId:"",setForRemoval:!1,setForMove:!1,hasAnimation:!1,removedBeforeQueried:!1},gB={namespaceId:"",setForMove:!1,setForRemoval:!1,hasAnimation:!1,removedBeforeQueried:!0},Fn="__ng_removed";class HR{get params(){return this.options.params}constructor(t,e=""){this.namespaceId=e;const i=t&&t.hasOwnProperty("value");if(this.value=function bB(n){return n??null}(i?t.value:t),i){const l=Mo(t);delete l.value,this.options=l}else this.options={};this.options.params||(this.options.params={})}absorbOptions(t){const e=t.params;if(e){const i=this.options.params;Object.keys(e).forEach(r=>{null==i[r]&&(i[r]=e[r])})}}}const No="void",BR=new HR(No);class fB{constructor(t,e,i){this.id=t,this.hostElement=e,this._engine=i,this.players=[],this._triggers=new Map,this._queue=[],this._elementListeners=new Map,this._hostClassName="ng-tns-"+t,ln(e,this._hostClassName)}listen(t,e,i,r){if(!this._triggers.has(e))throw function MH(n,t){return new U(3302,!1)}();if(null==i||0==i.length)throw function kH(n){return new U(3303,!1)}();if(!function NB(n){return"start"==n||"done"==n}(i))throw function bH(n,t){return new U(3400,!1)}();const l=Xt(this._elementListeners,t,[]),a={name:e,phase:i,callback:r};l.push(a);const o=Xt(this._engine.statesByElement,t,new Map);return o.has(e)||(ln(t,gd),ln(t,gd+"-"+e),o.set(e,BR)),()=>{this._engine.afterFlush(()=>{const s=l.indexOf(a);s>=0&&l.splice(s,1),this._triggers.has(e)||o.delete(e)})}}register(t,e){return!this._triggers.has(t)&&(this._triggers.set(t,e),!0)}_getTrigger(t){const e=this._triggers.get(t);if(!e)throw function NH(n){return new U(3401,!1)}();return e}trigger(t,e,i,r=!0){const l=this._getTrigger(e),a=new PR(this.id,e,t);let o=this._engine.statesByElement.get(t);o||(ln(t,gd),ln(t,gd+"-"+e),this._engine.statesByElement.set(t,o=new Map));let s=o.get(e);const V=new HR(i,this.id);if(!(i&&i.hasOwnProperty("value"))&&s&&V.absorbOptions(s.options),o.set(e,V),s||(s=BR),V.value!==No&&s.value===V.value){if(!function GB(n,t){const e=Object.keys(n),i=Object.keys(t);if(e.length!=i.length)return!1;for(let r=0;r<e.length;r++){const l=e[r];if(!t.hasOwnProperty(l)||n[l]!==t[l])return!1}return!0}(s.params,V.params)){const R=[],W=l.matchStyles(s.value,s.params,R),Z=l.matchStyles(V.value,V.params,R);R.length?this._engine.reportError(R):this._engine.afterFlush(()=>{pr(t,W),Xn(t,Z)})}return}const h=Xt(this._engine.playersByElement,t,[]);h.forEach(R=>{R.namespaceId==this.id&&R.triggerName==e&&R.queued&&R.destroy()});let u=l.matchTransition(s.value,V.value,t,V.params),p=!1;if(!u){if(!r)return;u=l.fallbackTransition,p=!0}return this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:e,transition:u,fromState:s,toState:V,player:a,isFallbackTransition:p}),p||(ln(t,r1),a.onStart(()=>{Al(t,r1)})),a.onDone(()=>{let R=this.players.indexOf(a);R>=0&&this.players.splice(R,1);const W=this._engine.playersByElement.get(t);if(W){let Z=W.indexOf(a);Z>=0&&W.splice(Z,1)}}),this.players.push(a),h.push(a),a}deregister(t){this._triggers.delete(t),this._engine.statesByElement.forEach(e=>e.delete(t)),this._elementListeners.forEach((e,i)=>{this._elementListeners.set(i,e.filter(r=>r.name!=t))})}clearElementCache(t){this._engine.statesByElement.delete(t),this._elementListeners.delete(t);const e=this._engine.playersByElement.get(t);e&&(e.forEach(i=>i.destroy()),this._engine.playersByElement.delete(t))}_signalRemovalForInnerTriggers(t,e){const i=this._engine.driver.query(t,fd,!0);i.forEach(r=>{if(r[Fn])return;const l=this._engine.fetchNamespacesByElement(r);l.size?l.forEach(a=>a.triggerLeaveAnimation(r,e,!1,!0)):this.clearElementCache(r)}),this._engine.afterFlushAnimationsDone(()=>i.forEach(r=>this.clearElementCache(r)))}triggerLeaveAnimation(t,e,i,r){const l=this._engine.statesByElement.get(t),a=new Map;if(l){const o=[];if(l.forEach((s,V)=>{if(a.set(V,s.value),this._triggers.has(V)){const d=this.trigger(t,V,No,r);d&&o.push(d)}}),o.length)return this._engine.markElementAsRemoved(this.id,t,!0,e,a),i&&xi(o).onDone(()=>this._engine.processLeaveNode(t)),!0}return!1}prepareLeaveAnimationListeners(t){const e=this._elementListeners.get(t),i=this._engine.statesByElement.get(t);if(e&&i){const r=new Set;e.forEach(l=>{const a=l.name;if(r.has(a))return;r.add(a);const s=this._triggers.get(a).fallbackTransition,V=i.get(a)||BR,d=new HR(No),c=new PR(this.id,a,t);this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:a,transition:s,fromState:V,toState:d,player:c,isFallbackTransition:!0})})}}removeNode(t,e){const i=this._engine;if(t.childElementCount&&this._signalRemovalForInnerTriggers(t,e),this.triggerLeaveAnimation(t,e,!0))return;let r=!1;if(i.totalAnimations){const l=i.players.length?i.playersByQueriedElement.get(t):[];if(l&&l.length)r=!0;else{let a=t;for(;a=a.parentNode;)if(i.statesByElement.get(a)){r=!0;break}}}if(this.prepareLeaveAnimationListeners(t),r)i.markElementAsRemoved(this.id,t,!1,e);else{const l=t[Fn];(!l||l===l1)&&(i.afterFlush(()=>this.clearElementCache(t)),i.destroyInnerAnimations(t),i._onRemovalComplete(t,e))}}insertNode(t,e){ln(t,this._hostClassName)}drainQueuedTransitions(t){const e=[];return this._queue.forEach(i=>{const r=i.player;if(r.destroyed)return;const l=i.element,a=this._elementListeners.get(l);a&&a.forEach(o=>{if(o.name==i.triggerName){const s=SR(l,i.triggerName,i.fromState.value,i.toState.value);s._data=t,NR(i.player,o.phase,s,o.callback)}}),r.markedForDestroy?this._engine.afterFlush(()=>{r.destroy()}):e.push(i)}),this._queue=[],e.sort((i,r)=>{const l=i.transition.ast.depCount,a=r.transition.ast.depCount;return 0==l||0==a?l-a:this._engine.driver.containsElement(i.element,r.element)?1:-1})}destroy(t){this.players.forEach(e=>e.destroy()),this._signalRemovalForInnerTriggers(this.hostElement,t)}}class MB{_onRemovalComplete(t,e){this.onRemovalComplete(t,e)}constructor(t,e,i){this.bodyNode=t,this.driver=e,this._normalizer=i,this.players=[],this.newHostElements=new Map,this.playersByElement=new Map,this.playersByQueriedElement=new Map,this.statesByElement=new Map,this.disabledNodes=new Set,this.totalAnimations=0,this.totalQueuedPlayers=0,this._namespaceLookup={},this._namespaceList=[],this._flushFns=[],this._whenQuietFns=[],this.namespacesByHostElement=new Map,this.collectedEnterElements=[],this.collectedLeaveElements=[],this.onRemovalComplete=(r,l)=>{}}get queuedPlayers(){const t=[];return this._namespaceList.forEach(e=>{e.players.forEach(i=>{i.queued&&t.push(i)})}),t}createNamespace(t,e){const i=new fB(t,e,this);return this.bodyNode&&this.driver.containsElement(this.bodyNode,e)?this._balanceNamespaceList(i,e):(this.newHostElements.set(e,i),this.collectEnterElement(e)),this._namespaceLookup[t]=i}_balanceNamespaceList(t,e){const i=this._namespaceList,r=this.namespacesByHostElement;if(i.length-1>=0){let a=!1,o=this.driver.getParentElement(e);for(;o;){const s=r.get(o);if(s){const V=i.indexOf(s);i.splice(V+1,0,t),a=!0;break}o=this.driver.getParentElement(o)}a||i.unshift(t)}else i.push(t);return r.set(e,t),t}register(t,e){let i=this._namespaceLookup[t];return i||(i=this.createNamespace(t,e)),i}registerTrigger(t,e,i){let r=this._namespaceLookup[t];r&&r.register(e,i)&&this.totalAnimations++}destroy(t,e){t&&(this.afterFlush(()=>{}),this.afterFlushAnimationsDone(()=>{const i=this._fetchNamespace(t);this.namespacesByHostElement.delete(i.hostElement);const r=this._namespaceList.indexOf(i);r>=0&&this._namespaceList.splice(r,1),i.destroy(e),delete this._namespaceLookup[t]}))}_fetchNamespace(t){return this._namespaceLookup[t]}fetchNamespacesByElement(t){const e=new Set,i=this.statesByElement.get(t);if(i)for(let r of i.values())if(r.namespaceId){const l=this._fetchNamespace(r.namespaceId);l&&e.add(l)}return e}trigger(t,e,i,r){if(Id(e)){const l=this._fetchNamespace(t);if(l)return l.trigger(e,i,r),!0}return!1}insertNode(t,e,i,r){if(!Id(e))return;const l=e[Fn];if(l&&l.setForRemoval){l.setForRemoval=!1,l.setForMove=!0;const a=this.collectedLeaveElements.indexOf(e);a>=0&&this.collectedLeaveElements.splice(a,1)}if(t){const a=this._fetchNamespace(t);a&&a.insertNode(e,i)}r&&this.collectEnterElement(e)}collectEnterElement(t){this.collectedEnterElements.push(t)}markElementAsDisabled(t,e){e?this.disabledNodes.has(t)||(this.disabledNodes.add(t),ln(t,zR)):this.disabledNodes.has(t)&&(this.disabledNodes.delete(t),Al(t,zR))}removeNode(t,e,i){if(Id(e)){const r=t?this._fetchNamespace(t):null;r?r.removeNode(e,i):this.markElementAsRemoved(t,e,!1,i);const l=this.namespacesByHostElement.get(e);l&&l.id!==t&&l.removeNode(e,i)}else this._onRemovalComplete(e,i)}markElementAsRemoved(t,e,i,r,l){this.collectedLeaveElements.push(e),e[Fn]={namespaceId:t,setForRemoval:r,hasAnimation:i,removedBeforeQueried:!1,previousTriggersValues:l}}listen(t,e,i,r,l){return Id(e)?this._fetchNamespace(t).listen(e,i,r,l):()=>{}}_buildInstruction(t,e,i,r,l){return t.transition.build(this.driver,t.element,t.fromState.value,t.toState.value,i,r,t.fromState.options,t.toState.options,e,l)}destroyInnerAnimations(t){let e=this.driver.query(t,fd,!0);e.forEach(i=>this.destroyActiveAnimationsForElement(i)),0!=this.playersByQueriedElement.size&&(e=this.driver.query(t,CR,!0),e.forEach(i=>this.finishActiveQueriedAnimationOnElement(i)))}destroyActiveAnimationsForElement(t){const e=this.playersByElement.get(t);e&&e.forEach(i=>{i.queued?i.markedForDestroy=!0:i.destroy()})}finishActiveQueriedAnimationOnElement(t){const e=this.playersByQueriedElement.get(t);e&&e.forEach(i=>i.finish())}whenRenderingDone(){return new Promise(t=>{if(this.players.length)return xi(this.players).onDone(()=>t());t()})}processLeaveNode(t){const e=t[Fn];if(e&&e.setForRemoval){if(t[Fn]=l1,e.namespaceId){this.destroyInnerAnimations(t);const i=this._fetchNamespace(e.namespaceId);i&&i.clearElementCache(t)}this._onRemovalComplete(t,e.setForRemoval)}t.classList?.contains(zR)&&this.markElementAsDisabled(t,!1),this.driver.query(t,".ng-animate-disabled",!0).forEach(i=>{this.markElementAsDisabled(i,!1)})}flush(t=-1){let e=[];if(this.newHostElements.size&&(this.newHostElements.forEach((i,r)=>this._balanceNamespaceList(i,r)),this.newHostElements.clear()),this.totalAnimations&&this.collectedEnterElements.length)for(let i=0;i<this.collectedEnterElements.length;i++)ln(this.collectedEnterElements[i],"ng-star-inserted");if(this._namespaceList.length&&(this.totalQueuedPlayers||this.collectedLeaveElements.length)){const i=[];try{e=this._flushAnimations(i,t)}finally{for(let r=0;r<i.length;r++)i[r]()}}else for(let i=0;i<this.collectedLeaveElements.length;i++)this.processLeaveNode(this.collectedLeaveElements[i]);if(this.totalQueuedPlayers=0,this.collectedEnterElements.length=0,this.collectedLeaveElements.length=0,this._flushFns.forEach(i=>i()),this._flushFns=[],this._whenQuietFns.length){const i=this._whenQuietFns;this._whenQuietFns=[],e.length?xi(e).onDone(()=>{i.forEach(r=>r())}):i.forEach(r=>r())}}reportError(t){throw function EH(n){return new U(3402,!1)}()}_flushAnimations(t,e){const i=new Sd,r=[],l=new Map,a=[],o=new Map,s=new Map,V=new Map,d=new Set;this.disabledNodes.forEach(y=>{d.add(y);const w=this.driver.query(y,".ng-animate-queued",!0);for(let v=0;v<w.length;v++)d.add(w[v])});const c=this.bodyNode,h=Array.from(this.statesByElement.keys()),u=s1(h,this.collectedEnterElements),p=new Map;let R=0;u.forEach((y,w)=>{const v=IR+R++;p.set(w,v),y.forEach(te=>ln(te,v))});const W=[],Z=new Set,m=new Set;for(let y=0;y<this.collectedLeaveElements.length;y++){const w=this.collectedLeaveElements[y],v=w[Fn];v&&v.setForRemoval&&(W.push(w),Z.add(w),v.hasAnimation?this.driver.query(w,".ng-star-inserted",!0).forEach(te=>Z.add(te)):m.add(w))}const M=new Map,S=s1(h,Array.from(Z));S.forEach((y,w)=>{const v=Zd+R++;M.set(w,v),y.forEach(te=>ln(te,v))}),t.push(()=>{u.forEach((y,w)=>{const v=p.get(w);y.forEach(te=>Al(te,v))}),S.forEach((y,w)=>{const v=M.get(w);y.forEach(te=>Al(te,v))}),W.forEach(y=>{this.processLeaveNode(y)})});const J=[],de=[];for(let y=this._namespaceList.length-1;y>=0;y--)this._namespaceList[y].drainQueuedTransitions(e).forEach(v=>{const te=v.player,qe=v.element;if(J.push(te),this.collectedEnterElements.length){const ct=qe[Fn];if(ct&&ct.setForMove){if(ct.previousTriggersValues&&ct.previousTriggersValues.has(v.triggerName)){const Wr=ct.previousTriggersValues.get(v.triggerName),an=this.statesByElement.get(v.element);if(an&&an.has(v.triggerName)){const wd=an.get(v.triggerName);wd.value=Wr,an.set(v.triggerName,wd)}}return void te.destroy()}}const jn=!c||!this.driver.containsElement(c,qe),zt=M.get(qe),Ji=p.get(qe),ye=this._buildInstruction(v,i,Ji,zt,jn);if(ye.errors&&ye.errors.length)return void de.push(ye);if(jn)return te.onStart(()=>pr(qe,ye.fromStyles)),te.onDestroy(()=>Xn(qe,ye.toStyles)),void r.push(te);if(v.isFallbackTransition)return te.onStart(()=>pr(qe,ye.fromStyles)),te.onDestroy(()=>Xn(qe,ye.toStyles)),void r.push(te);const T1=[];ye.timelines.forEach(ct=>{ct.stretchStartingKeyframe=!0,this.disabledNodes.has(ct.element)||T1.push(ct)}),ye.timelines=T1,i.append(qe,ye.timelines),a.push({instruction:ye,player:te,element:qe}),ye.queriedElements.forEach(ct=>Xt(o,ct,[]).push(te)),ye.preStyleProps.forEach((ct,Wr)=>{if(ct.size){let an=s.get(Wr);an||s.set(Wr,an=new Set),ct.forEach((wd,KR)=>an.add(KR))}}),ye.postStyleProps.forEach((ct,Wr)=>{let an=V.get(Wr);an||V.set(Wr,an=new Set),ct.forEach((wd,KR)=>an.add(KR))})});if(de.length){const y=[];de.forEach(w=>{y.push(function SH(n,t){return new U(3505,!1)}())}),J.forEach(w=>w.destroy()),this.reportError(y)}const Ae=new Map,Un=new Map;a.forEach(y=>{const w=y.element;i.has(w)&&(Un.set(w,w),this._beforeAnimationBuild(y.player.namespaceId,y.instruction,Ae))}),r.forEach(y=>{const w=y.element;this._getPreviousPlayers(w,!1,y.namespaceId,y.triggerName,null).forEach(te=>{Xt(Ae,w,[]).push(te),te.destroy()})});const Tn=W.filter(y=>d1(y,s,V)),ci=new Map;o1(ci,this.driver,m,V,oi).forEach(y=>{d1(y,s,V)&&Tn.push(y)});const Eo=new Map;u.forEach((y,w)=>{o1(Eo,this.driver,new Set(y),s,"!")}),Tn.forEach(y=>{const w=ci.get(y),v=Eo.get(y);ci.set(y,new Map([...w?.entries()??[],...v?.entries()??[]]))});const mr=[],F1=[],U1={};a.forEach(y=>{const{element:w,player:v,instruction:te}=y;if(i.has(w)){if(d.has(w))return v.onDestroy(()=>Xn(w,te.toStyles)),v.disabled=!0,v.overrideTotalTime(te.totalTime),void r.push(v);let qe=U1;if(Un.size>1){let zt=w;const Ji=[];for(;zt=zt.parentNode;){const ye=Un.get(zt);if(ye){qe=ye;break}Ji.push(zt)}Ji.forEach(ye=>Un.set(ye,qe))}const jn=this._buildAnimation(v.namespaceId,te,Ae,l,Eo,ci);if(v.setRealPlayer(jn),qe===U1)mr.push(v);else{const zt=this.playersByElement.get(qe);zt&&zt.length&&(v.parentPlayer=xi(zt)),r.push(v)}}else pr(w,te.fromStyles),v.onDestroy(()=>Xn(w,te.toStyles)),F1.push(v),d.has(w)&&r.push(v)}),F1.forEach(y=>{const w=l.get(y.element);if(w&&w.length){const v=xi(w);y.setRealPlayer(v)}}),r.forEach(y=>{y.parentPlayer?y.syncPlayerEvents(y.parentPlayer):y.destroy()});for(let y=0;y<W.length;y++){const w=W[y],v=w[Fn];if(Al(w,Zd),v&&v.hasAnimation)continue;let te=[];if(o.size){let jn=o.get(w);jn&&jn.length&&te.push(...jn);let zt=this.driver.query(w,CR,!0);for(let Ji=0;Ji<zt.length;Ji++){let ye=o.get(zt[Ji]);ye&&ye.length&&te.push(...ye)}}const qe=te.filter(jn=>!jn.destroyed);qe.length?EB(this,w,qe):this.processLeaveNode(w)}return W.length=0,mr.forEach(y=>{this.players.push(y),y.onDone(()=>{y.destroy();const w=this.players.indexOf(y);this.players.splice(w,1)}),y.play()}),mr}afterFlush(t){this._flushFns.push(t)}afterFlushAnimationsDone(t){this._whenQuietFns.push(t)}_getPreviousPlayers(t,e,i,r,l){let a=[];if(e){const o=this.playersByQueriedElement.get(t);o&&(a=o)}else{const o=this.playersByElement.get(t);if(o){const s=!l||l==No;o.forEach(V=>{V.queued||!s&&V.triggerName!=r||a.push(V)})}}return(i||r)&&(a=a.filter(o=>!(i&&i!=o.namespaceId||r&&r!=o.triggerName))),a}_beforeAnimationBuild(t,e,i){const l=e.element,a=e.isRemovalTransition?void 0:t,o=e.isRemovalTransition?void 0:e.triggerName;for(const s of e.timelines){const V=s.element,d=V!==l,c=Xt(i,V,[]);this._getPreviousPlayers(V,d,a,o,e.toState).forEach(u=>{const p=u.getRealPlayer();p.beforeDestroy&&p.beforeDestroy(),u.destroy(),c.push(u)})}pr(l,e.fromStyles)}_buildAnimation(t,e,i,r,l,a){const o=e.triggerName,s=e.element,V=[],d=new Set,c=new Set,h=e.timelines.map(p=>{const R=p.element;d.add(R);const W=R[Fn];if(W&&W.removedBeforeQueried)return new no(p.duration,p.delay);const Z=R!==s,m=function SB(n){const t=[];return V1(n,t),t}((i.get(R)||ZB).map(Ae=>Ae.getRealPlayer())).filter(Ae=>!!Ae.element&&Ae.element===R),M=l.get(R),S=a.get(R),J=YN(this._normalizer,p.keyframes,M,S),de=this._buildPlayer(p,J,m);if(p.subTimeline&&r&&c.add(R),Z){const Ae=new PR(t,o,R);Ae.setRealPlayer(de),V.push(Ae)}return de});V.forEach(p=>{Xt(this.playersByQueriedElement,p.element,[]).push(p),p.onDone(()=>function kB(n,t,e){let i=n.get(t);if(i){if(i.length){const r=i.indexOf(e);i.splice(r,1)}0==i.length&&n.delete(t)}return i}(this.playersByQueriedElement,p.element,p))}),d.forEach(p=>ln(p,HN));const u=xi(h);return u.onDestroy(()=>{d.forEach(p=>Al(p,HN)),Xn(s,e.toStyles)}),c.forEach(p=>{Xt(r,p,[]).push(u)}),u}_buildPlayer(t,e,i){return e.length>0?this.driver.animate(t.element,e,t.duration,t.delay,t.easing,i):new no(t.duration,t.delay)}}class PR{constructor(t,e,i){this.namespaceId=t,this.triggerName=e,this.element=i,this._player=new no,this._containsRealPlayer=!1,this._queuedCallbacks=new Map,this.destroyed=!1,this.parentPlayer=null,this.markedForDestroy=!1,this.disabled=!1,this.queued=!0,this.totalTime=0}setRealPlayer(t){this._containsRealPlayer||(this._player=t,this._queuedCallbacks.forEach((e,i)=>{e.forEach(r=>NR(t,i,void 0,r))}),this._queuedCallbacks.clear(),this._containsRealPlayer=!0,this.overrideTotalTime(t.totalTime),this.queued=!1)}getRealPlayer(){return this._player}overrideTotalTime(t){this.totalTime=t}syncPlayerEvents(t){const e=this._player;e.triggerCallback&&t.onStart(()=>e.triggerCallback("start")),t.onDone(()=>this.finish()),t.onDestroy(()=>this.destroy())}_queueEvent(t,e){Xt(this._queuedCallbacks,t,[]).push(e)}onDone(t){this.queued&&this._queueEvent("done",t),this._player.onDone(t)}onStart(t){this.queued&&this._queueEvent("start",t),this._player.onStart(t)}onDestroy(t){this.queued&&this._queueEvent("destroy",t),this._player.onDestroy(t)}init(){this._player.init()}hasStarted(){return!this.queued&&this._player.hasStarted()}play(){!this.queued&&this._player.play()}pause(){!this.queued&&this._player.pause()}restart(){!this.queued&&this._player.restart()}finish(){this._player.finish()}destroy(){this.destroyed=!0,this._player.destroy()}reset(){!this.queued&&this._player.reset()}setPosition(t){this.queued||this._player.setPosition(t)}getPosition(){return this.queued?0:this._player.getPosition()}triggerCallback(t){const e=this._player;e.triggerCallback&&e.triggerCallback(t)}}function Id(n){return n&&1===n.nodeType}function a1(n,t){const e=n.style.display;return n.style.display=t??"none",e}function o1(n,t,e,i,r){const l=[];e.forEach(s=>l.push(a1(s)));const a=[];i.forEach((s,V)=>{const d=new Map;s.forEach(c=>{const h=t.computeStyle(V,c,r);d.set(c,h),(!h||0==h.length)&&(V[Fn]=gB,a.push(V))}),n.set(V,d)});let o=0;return e.forEach(s=>a1(s,l[o++])),a}function s1(n,t){const e=new Map;if(n.forEach(o=>e.set(o,[])),0==t.length)return e;const r=new Set(t),l=new Map;function a(o){if(!o)return 1;let s=l.get(o);if(s)return s;const V=o.parentNode;return s=e.has(V)?V:r.has(V)?1:a(V),l.set(o,s),s}return t.forEach(o=>{const s=a(o);1!==s&&e.get(s).push(o)}),e}function ln(n,t){n.classList?.add(t)}function Al(n,t){n.classList?.remove(t)}function EB(n,t,e){xi(e).onDone(()=>n.processLeaveNode(t))}function V1(n,t){for(let e=0;e<n.length;e++){const i=n[e];i instanceof Ck?V1(i.players,t):t.push(i)}}function d1(n,t,e){const i=e.get(n);if(!i)return!1;let r=t.get(n);return r?i.forEach(l=>r.add(l)):t.set(n,i),e.delete(n),!0}class Cd{constructor(t,e,i){this.bodyNode=t,this._driver=e,this._normalizer=i,this._triggerCache={},this.onRemovalComplete=(r,l)=>{},this._transitionEngine=new MB(t,e,i),this._timelineEngine=new mB(t,e,i),this._transitionEngine.onRemovalComplete=(r,l)=>this.onRemovalComplete(r,l)}registerTrigger(t,e,i,r,l){const a=t+"-"+r;let o=this._triggerCache[a];if(!o){const s=[],d=vR(this._driver,l,s,[]);if(s.length)throw function FH(n,t){return new U(3404,!1)}();o=function hB(n,t,e){return new uB(n,t,e)}(r,d,this._normalizer),this._triggerCache[a]=o}this._transitionEngine.registerTrigger(e,r,o)}register(t,e){this._transitionEngine.register(t,e)}destroy(t,e){this._transitionEngine.destroy(t,e)}onInsert(t,e,i,r){this._transitionEngine.insertNode(t,e,i,r)}onRemove(t,e,i){this._transitionEngine.removeNode(t,e,i)}disableAnimations(t,e){this._transitionEngine.markElementAsDisabled(t,e)}process(t,e,i,r){if("@"==i.charAt(0)){const[l,a]=DN(i);this._timelineEngine.command(l,e,a,r)}else this._transitionEngine.trigger(t,e,i,r)}listen(t,e,i,r,l){if("@"==i.charAt(0)){const[a,o]=DN(i);return this._timelineEngine.listen(a,e,o,l)}return this._transitionEngine.listen(t,e,i,r,l)}flush(t=-1){this._transitionEngine.flush(t)}get players(){return[...this._transitionEngine.players,...this._timelineEngine.players]}whenRenderingDone(){return this._transitionEngine.whenRenderingDone()}afterFlushAnimationsDone(t){this._transitionEngine.afterFlushAnimationsDone(t)}}let IB=(()=>{class n{constructor(e,i,r){this._element=e,this._startStyles=i,this._endStyles=r,this._state=0;let l=n.initialStylesByElement.get(e);l||n.initialStylesByElement.set(e,l=new Map),this._initialStyles=l}start(){this._state<1&&(this._startStyles&&Xn(this._element,this._startStyles,this._initialStyles),this._state=1)}finish(){this.start(),this._state<2&&(Xn(this._element,this._initialStyles),this._endStyles&&(Xn(this._element,this._endStyles),this._endStyles=null),this._state=1)}destroy(){this.finish(),this._state<3&&(n.initialStylesByElement.delete(this._element),this._startStyles&&(pr(this._element,this._startStyles),this._endStyles=null),this._endStyles&&(pr(this._element,this._endStyles),this._endStyles=null),Xn(this._element,this._initialStyles),this._state=3)}}return n.initialStylesByElement=new WeakMap,n})();function QR(n){let t=null;return n.forEach((e,i)=>{(function CB(n){return"display"===n||"position"===n})(i)&&(t=t||new Map,t.set(i,e))}),t}class c1{constructor(t,e,i,r){this.element=t,this.keyframes=e,this.options=i,this._specialStyles=r,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._initialized=!1,this._finished=!1,this._started=!1,this._destroyed=!1,this._originalOnDoneFns=[],this._originalOnStartFns=[],this.time=0,this.parentPlayer=null,this.currentSnapshot=new Map,this._duration=i.duration,this._delay=i.delay||0,this.time=this._duration+this._delay}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}init(){this._buildPlayer(),this._preparePlayerBeforeStart()}_buildPlayer(){if(this._initialized)return;this._initialized=!0;const t=this.keyframes;this.domPlayer=this._triggerWebAnimation(this.element,t,this.options),this._finalKeyframe=t.length?t[t.length-1]:new Map,this.domPlayer.addEventListener("finish",()=>this._onFinish())}_preparePlayerBeforeStart(){this._delay?this._resetDomPlayerState():this.domPlayer.pause()}_convertKeyframesToObject(t){const e=[];return t.forEach(i=>{e.push(Object.fromEntries(i))}),e}_triggerWebAnimation(t,e,i){return t.animate(this._convertKeyframesToObject(e),i)}onStart(t){this._originalOnStartFns.push(t),this._onStartFns.push(t)}onDone(t){this._originalOnDoneFns.push(t),this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}play(){this._buildPlayer(),this.hasStarted()||(this._onStartFns.forEach(t=>t()),this._onStartFns=[],this._started=!0,this._specialStyles&&this._specialStyles.start()),this.domPlayer.play()}pause(){this.init(),this.domPlayer.pause()}finish(){this.init(),this._specialStyles&&this._specialStyles.finish(),this._onFinish(),this.domPlayer.finish()}reset(){this._resetDomPlayerState(),this._destroyed=!1,this._finished=!1,this._started=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}_resetDomPlayerState(){this.domPlayer&&this.domPlayer.cancel()}restart(){this.reset(),this.play()}hasStarted(){return this._started}destroy(){this._destroyed||(this._destroyed=!0,this._resetDomPlayerState(),this._onFinish(),this._specialStyles&&this._specialStyles.destroy(),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}setPosition(t){void 0===this.domPlayer&&this.init(),this.domPlayer.currentTime=t*this.time}getPosition(){return this.domPlayer.currentTime/this.time}get totalTime(){return this._delay+this._duration}beforeDestroy(){const t=new Map;this.hasStarted()&&this._finalKeyframe.forEach((i,r)=>{"offset"!==r&&t.set(r,this._finished?i:LN(this.element,r))}),this.currentSnapshot=t}triggerCallback(t){const e="start"===t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}class xB{validateStyleProperty(t){return!0}validateAnimatableStyleProperty(t){return!0}matchesElement(t,e){return!1}containsElement(t,e){return ON(t,e)}getParentElement(t){return GR(t)}query(t,e,i){return XN(t,e,i)}computeStyle(t,e,i){return window.getComputedStyle(t)[e]}animate(t,e,i,r,l,a=[]){const s={duration:i,delay:r,fill:0==r?"both":"forwards"};l&&(s.easing=l);const V=new Map,d=a.filter(u=>u instanceof c1);(function OH(n,t){return 0===n||0===t})(i,r)&&d.forEach(u=>{u.currentSnapshot.forEach((p,R)=>V.set(R,p))});let c=function YH(n){return n.length?n[0]instanceof Map?n:n.map(t=>BN(t)):[]}(e).map(u=>wi(u));c=function XH(n,t,e){if(e.size&&t.length){let i=t[0],r=[];if(e.forEach((l,a)=>{i.has(a)||r.push(a),i.set(a,l)}),r.length)for(let l=1;l<t.length;l++){let a=t[l];r.forEach(o=>a.set(o,LN(n,o)))}}return t}(t,c,V);const h=function yB(n,t){let e=null,i=null;return Array.isArray(t)&&t.length?(e=QR(t[0]),t.length>1&&(i=QR(t[t.length-1]))):t instanceof Map&&(e=QR(t)),e||i?new IB(n,e,i):null}(t,c);return new c1(t,c,s,h)}}let wB=(()=>{class n extends yk{constructor(e,i){super(),this._nextAnimationId=0,this._renderer=e.createRenderer(i.body,{id:"0",encapsulation:Pt.None,styles:[],data:{animation:[]}})}build(e){const i=this._nextAnimationId.toString();this._nextAnimationId++;const r=Array.isArray(e)?Ik(e):e;return h1(this._renderer,null,i,"register",[r]),new JB(i,this._renderer)}}return n.\u0275fac=function(e){return new(e||n)(T(Ua),T(L))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();class JB extends g5{constructor(t,e){super(),this._id=t,this._renderer=e}create(t,e){return new vB(this._id,t,e||{},this._renderer)}}class vB{constructor(t,e,i,r){this.id=t,this.element=e,this._renderer=r,this.parentPlayer=null,this._started=!1,this.totalTime=0,this._command("create",i)}_listen(t,e){return this._renderer.listen(this.element,`@@${this.id}:${t}`,e)}_command(t,...e){return h1(this._renderer,this.element,this.id,t,e)}onDone(t){this._listen("done",t)}onStart(t){this._listen("start",t)}onDestroy(t){this._listen("destroy",t)}init(){this._command("init")}hasStarted(){return this._started}play(){this._command("play"),this._started=!0}pause(){this._command("pause")}restart(){this._command("restart")}finish(){this._command("finish")}destroy(){this._command("destroy")}reset(){this._command("reset"),this._started=!1}setPosition(t){this._command("setPosition",t)}getPosition(){return this._renderer.engine.players[+this.id]?.getPosition()??0}}function h1(n,t,e,i,r){return n.setProperty(t,`@@${e}:${i}`,r)}const u1="@.disabled";let YB=(()=>{class n{constructor(e,i,r){this.delegate=e,this.engine=i,this._zone=r,this._currentId=0,this._microtaskId=1,this._animationCallbacksBuffer=[],this._rendererCache=new Map,this._cdRecurDepth=0,i.onRemovalComplete=(l,a)=>{const o=a?.parentNode(l);o&&a.removeChild(o,l)}}createRenderer(e,i){const l=this.delegate.createRenderer(e,i);if(!(e&&i&&i.data&&i.data.animation)){let d=this._rendererCache.get(l);return d||(d=new p1("",l,this.engine,()=>this._rendererCache.delete(l)),this._rendererCache.set(l,d)),d}const a=i.id,o=i.id+"-"+this._currentId;this._currentId++,this.engine.register(o,e);const s=d=>{Array.isArray(d)?d.forEach(s):this.engine.registerTrigger(a,o,e,d.name,d)};return i.data.animation.forEach(s),new DB(this,o,l,this.engine)}begin(){this._cdRecurDepth++,this.delegate.begin&&this.delegate.begin()}_scheduleCountTask(){queueMicrotask(()=>{this._microtaskId++})}scheduleListenerCallback(e,i,r){e>=0&&e<this._microtaskId?this._zone.run(()=>i(r)):(0==this._animationCallbacksBuffer.length&&queueMicrotask(()=>{this._zone.run(()=>{this._animationCallbacksBuffer.forEach(l=>{const[a,o]=l;a(o)}),this._animationCallbacksBuffer=[]})}),this._animationCallbacksBuffer.push([i,r]))}end(){this._cdRecurDepth--,0==this._cdRecurDepth&&this._zone.runOutsideAngular(()=>{this._scheduleCountTask(),this.engine.flush(this._microtaskId)}),this.delegate.end&&this.delegate.end()}whenRenderingDone(){return this.engine.whenRenderingDone()}}return n.\u0275fac=function(e){return new(e||n)(T(Ua),T(Cd),T(K))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})();class p1{constructor(t,e,i,r){this.namespaceId=t,this.delegate=e,this.engine=i,this._onDestroy=r}get data(){return this.delegate.data}destroyNode(t){this.delegate.destroyNode?.(t)}destroy(){this.engine.destroy(this.namespaceId,this.delegate),this.engine.afterFlushAnimationsDone(()=>{queueMicrotask(()=>{this.delegate.destroy()})}),this._onDestroy?.()}createElement(t,e){return this.delegate.createElement(t,e)}createComment(t){return this.delegate.createComment(t)}createText(t){return this.delegate.createText(t)}appendChild(t,e){this.delegate.appendChild(t,e),this.engine.onInsert(this.namespaceId,e,t,!1)}insertBefore(t,e,i,r=!0){this.delegate.insertBefore(t,e,i),this.engine.onInsert(this.namespaceId,e,t,r)}removeChild(t,e,i){this.engine.onRemove(this.namespaceId,e,this.delegate)}selectRootElement(t,e){return this.delegate.selectRootElement(t,e)}parentNode(t){return this.delegate.parentNode(t)}nextSibling(t){return this.delegate.nextSibling(t)}setAttribute(t,e,i,r){this.delegate.setAttribute(t,e,i,r)}removeAttribute(t,e,i){this.delegate.removeAttribute(t,e,i)}addClass(t,e){this.delegate.addClass(t,e)}removeClass(t,e){this.delegate.removeClass(t,e)}setStyle(t,e,i,r){this.delegate.setStyle(t,e,i,r)}removeStyle(t,e,i){this.delegate.removeStyle(t,e,i)}setProperty(t,e,i){"@"==e.charAt(0)&&e==u1?this.disableAnimations(t,!!i):this.delegate.setProperty(t,e,i)}setValue(t,e){this.delegate.setValue(t,e)}listen(t,e,i){return this.delegate.listen(t,e,i)}disableAnimations(t,e){this.engine.disableAnimations(t,e)}}class DB extends p1{constructor(t,e,i,r,l){super(e,i,r,l),this.factory=t,this.namespaceId=e}setProperty(t,e,i){"@"==e.charAt(0)?"."==e.charAt(1)&&e==u1?this.disableAnimations(t,i=void 0===i||!!i):this.engine.process(this.namespaceId,t,e.slice(1),i):this.delegate.setProperty(t,e,i)}listen(t,e,i){if("@"==e.charAt(0)){const r=function AB(n){switch(n){case"body":return document.body;case"document":return document;case"window":return window;default:return n}}(t);let l=e.slice(1),a="";return"@"!=l.charAt(0)&&([l,a]=function OB(n){const t=n.indexOf(".");return[n.substring(0,t),n.slice(t+1)]}(l)),this.engine.listen(this.namespaceId,r,l,a,o=>{this.factory.scheduleListenerCallback(o._data||-1,i,o)})}return this.delegate.listen(t,e,i)}}const R1=[{provide:yk,useClass:wB},{provide:XR,useFactory:function jB(){return new sB}},{provide:Cd,useClass:(()=>{class n extends Cd{constructor(e,i,r,l){super(e.body,i,r)}ngOnDestroy(){this.flush()}}return n.\u0275fac=function(e){return new(e||n)(T(L),T(yR),T(XR),T(Mi))},n.\u0275prov=k({token:n,factory:n.\u0275fac}),n})()},{provide:Ua,useFactory:function zB(n,t,e){return new YB(n,t,e)},deps:[tp,Cd,K]}],LR=[{provide:yR,useFactory:()=>new xB},{provide:Ti,useValue:"BrowserAnimations"},...R1],m1=[{provide:yR,useClass:jN},{provide:Ti,useValue:"NoopAnimations"},...R1];let HB=(()=>{class n{static withConfig(e){return{ngModule:n,providers:e.disableAnimations?m1:LR}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n}),n.\u0275inj=be({providers:LR,imports:[Bf]}),n})(),BB=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=Ee({type:n,bootstrap:[Kz]}),n.\u0275inj=be({imports:[Bf,Pz,y2,o2,X2,PO,HB,qO]}),n})();KY().bootstrapModule(BB).catch(n=>console.error(n))}},q=>{q(q.s=372)}]);